//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_AchFromTenantTransactions_LeaseTransactions", "LeaseTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.LeaseTransaction), "AchFromTenantTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.AchFromTenantTransaction), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchFromTenantTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.AchFromTenantTransaction), "AchToLandlordTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.AchToLandlordTransaction), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_AffiliateUsers_ApiKeys", "ApiKeys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.ApiKey), "AffiliateUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.AffiliateUser), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_AffiliateUsers_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "AffiliateUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.AffiliateUser), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Alerts_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "Alerts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Alert), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_HomeAmenities_Amenities", "Amenities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Amenity), "PropertyInfoAmenities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.PropertyInfoAmenity), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_AmenityOptions_AmenitiesWithOptions", "AmenitiesWithOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.AmenitiesWithOption), "AmenityOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.AmenityOption), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "AmenitiesWithOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.AmenitiesWithOption), "PropertyInfoAmenitiesWithOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.PropertyInfoAmenitiesWithOption), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Answers_Questions", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Question), "Answers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Answer), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserContractAnswers_Answers", "Answers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Answer), "UserContractAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserContractAnswer), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_ApiKeys_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "ApiKeys", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.ApiKey), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_ApplicationInfo_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "ApplicationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.ApplicationInfo), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_AuthTokens_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "AuthTokens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.AuthToken), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Buildings_PropertyInfos", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.PropertyInfo), "Buildings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Building), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Buildings_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "Buildings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Building), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LandlordAlerts_Buildings", "Buildings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.Building), "LandlordAlerts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LandlordAlert), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Listings_Buildings", "Buildings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Building), "Listings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Listing), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Photos_Buildings", "Buildings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Building), "Photos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Photo), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Units_Buildings", "Buildings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Building), "Units", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Unit), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_ContractQuestions_Contracts", "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Contract), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Question), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserContracts_Contracts", "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Contract), "UserContracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserContract), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_CustomAmenities_PropertyInfos", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyInfo), "CustomAmenities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.CustomAmenity), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Rooms_Floors", "Floors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Floor), "Rooms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Room), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LandlordAlerts_Units", "Units", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.Unit), "LandlordAlerts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LandlordAlert), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LandlordAlerts_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "LandlordAlerts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LandlordAlert), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LandlordAlerts_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.User), "LandlordAlerts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LandlordAlert), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LandlordInfo_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "LandlordInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LandlordInfo), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeaseContracts_Leases", "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Leas), "LeaseContracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeaseContract), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeasePaymentItems_Leases", "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Leas), "LeasePaymentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeasePaymentItem), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.LeasePaymentItem), "LeasePaymentPropertyTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeasePaymentPropertyTransaction), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeasePaymentPropertyTransactions_PropertyTransactions", "PropertyTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyTransaction), "LeasePaymentPropertyTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeasePaymentPropertyTransaction), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Leases_PropertyInfos", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyInfo), "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Leas), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Leases_UserBanks", "UserBanks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.UserBank), "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Leas), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Leases_UserBanks1", "UserBanks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.UserBank), "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Leas), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Leases_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.User), "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Leas), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeaseTenants_Leases", "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Leas), "LeaseTenants", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeaseTenant), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeaseTransactions_Leases", "Leases", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Leas), "LeaseTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeaseTransaction), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.LeaseTransaction), "LeaseTransactionCredits", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.LeaseTransactionCredit), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_ListingCounts_Listings", "Listings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Listing), "ListingCounts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.ListingCount), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Messages_Listings", "Listings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.Listing), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Message), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_ReportedListings_Listings", "Listings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Listing), "ReportedListings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.ReportedListing), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_SavedListings_Listings", "Listings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Listing), "SavedListings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.SavedListing), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserInterests_Listings", "Listings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Listing), "UserInterests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserInterest), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Messages_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Message), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Messages_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Message), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_OrderItems_Orders", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Order), "OrderItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.OrderItem), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_OrderItems_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Product), "OrderItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.OrderItem), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Orders_UserCreditCards", "UserCreditCards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.UserCreditCard), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Order), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Orders_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Order), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_SubscriptionOrders_Orders", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Order), "SubscriptionOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.SubscriptionOrder), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Products_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.Role), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Product), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Subscriptions_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Product), "Subscriptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Subscription), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyInfo), "PropertyInfoAmenities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.PropertyInfoAmenity), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyInfo), "PropertyInfoAmenitiesWithOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.PropertyInfoAmenitiesWithOption), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Rooms_PropertyInfos", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyInfo), "Rooms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Room), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Units_PropertyInfos1", "PropertyInfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.PropertyInfo), "Units", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Unit), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_RoleUsers_Roles1", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Role), "RoleUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.RoleUser), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_RoleUsers_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "RoleUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.RoleUser), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_SavedListings_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "SavedListings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.SavedListing), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_SubscriptionOrders_Subscriptions", "Subscriptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.Subscription), "SubscriptionOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.SubscriptionOrder), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Subscriptions_UserCreditCards", "UserCreditCards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.UserCreditCard), "Subscriptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Subscription), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_Subscriptions_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "Subscriptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.Subscription), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserBackgroundCheck_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserBackgroundCheck", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserBackgroundCheck), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserBackgroundCheck_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserBackgroundCheck", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserBackgroundCheck), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserBanks_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NewRentlerImport.User), "UserBanks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserBank), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserContractAnswers_UserContracts", "UserContracts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.UserContract), "UserContractAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserContractAnswer), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserContracts_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserContracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserContract), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserCreditCards_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserCreditCards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserCreditCard), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserCreditCheck_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserCreditCheck", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserCreditCheck), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserCreditCheck_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserCreditCheck", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserCreditCheck), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserInterests_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserInterests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserInterest), true)]
[assembly: EdmRelationshipAttribute("RentlerBackupModel", "FK_UserInterests_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NewRentlerImport.User), "UserInterests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NewRentlerImport.UserInterest), true)]

#endregion

namespace NewRentlerImport
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RentlerBackupEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RentlerBackupEntities object using the connection string found in the 'RentlerBackupEntities' section of the application configuration file.
        /// </summary>
        public RentlerBackupEntities() : base("name=RentlerBackupEntities", "RentlerBackupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RentlerBackupEntities object.
        /// </summary>
        public RentlerBackupEntities(string connectionString) : base(connectionString, "RentlerBackupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RentlerBackupEntities object.
        /// </summary>
        public RentlerBackupEntities(EntityConnection connection) : base(connection, "RentlerBackupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AchFromTenantTransaction> AchFromTenantTransactions
        {
            get
            {
                if ((_AchFromTenantTransactions == null))
                {
                    _AchFromTenantTransactions = base.CreateObjectSet<AchFromTenantTransaction>("AchFromTenantTransactions");
                }
                return _AchFromTenantTransactions;
            }
        }
        private ObjectSet<AchFromTenantTransaction> _AchFromTenantTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AchToLandlordTransaction> AchToLandlordTransactions
        {
            get
            {
                if ((_AchToLandlordTransactions == null))
                {
                    _AchToLandlordTransactions = base.CreateObjectSet<AchToLandlordTransaction>("AchToLandlordTransactions");
                }
                return _AchToLandlordTransactions;
            }
        }
        private ObjectSet<AchToLandlordTransaction> _AchToLandlordTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AffiliateUser> AffiliateUsers
        {
            get
            {
                if ((_AffiliateUsers == null))
                {
                    _AffiliateUsers = base.CreateObjectSet<AffiliateUser>("AffiliateUsers");
                }
                return _AffiliateUsers;
            }
        }
        private ObjectSet<AffiliateUser> _AffiliateUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alert> Alerts
        {
            get
            {
                if ((_Alerts == null))
                {
                    _Alerts = base.CreateObjectSet<Alert>("Alerts");
                }
                return _Alerts;
            }
        }
        private ObjectSet<Alert> _Alerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Amenity> Amenities
        {
            get
            {
                if ((_Amenities == null))
                {
                    _Amenities = base.CreateObjectSet<Amenity>("Amenities");
                }
                return _Amenities;
            }
        }
        private ObjectSet<Amenity> _Amenities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AmenitiesWithOption> AmenitiesWithOptions
        {
            get
            {
                if ((_AmenitiesWithOptions == null))
                {
                    _AmenitiesWithOptions = base.CreateObjectSet<AmenitiesWithOption>("AmenitiesWithOptions");
                }
                return _AmenitiesWithOptions;
            }
        }
        private ObjectSet<AmenitiesWithOption> _AmenitiesWithOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AmenityOption> AmenityOptions
        {
            get
            {
                if ((_AmenityOptions == null))
                {
                    _AmenityOptions = base.CreateObjectSet<AmenityOption>("AmenityOptions");
                }
                return _AmenityOptions;
            }
        }
        private ObjectSet<AmenityOption> _AmenityOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answer> Answers
        {
            get
            {
                if ((_Answers == null))
                {
                    _Answers = base.CreateObjectSet<Answer>("Answers");
                }
                return _Answers;
            }
        }
        private ObjectSet<Answer> _Answers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApiKey> ApiKeys
        {
            get
            {
                if ((_ApiKeys == null))
                {
                    _ApiKeys = base.CreateObjectSet<ApiKey>("ApiKeys");
                }
                return _ApiKeys;
            }
        }
        private ObjectSet<ApiKey> _ApiKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationInfo> ApplicationInfoes
        {
            get
            {
                if ((_ApplicationInfoes == null))
                {
                    _ApplicationInfoes = base.CreateObjectSet<ApplicationInfo>("ApplicationInfoes");
                }
                return _ApplicationInfoes;
            }
        }
        private ObjectSet<ApplicationInfo> _ApplicationInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthToken> AuthTokens
        {
            get
            {
                if ((_AuthTokens == null))
                {
                    _AuthTokens = base.CreateObjectSet<AuthToken>("AuthTokens");
                }
                return _AuthTokens;
            }
        }
        private ObjectSet<AuthToken> _AuthTokens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Building>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Building> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomAmenity> CustomAmenities
        {
            get
            {
                if ((_CustomAmenities == null))
                {
                    _CustomAmenities = base.CreateObjectSet<CustomAmenity>("CustomAmenities");
                }
                return _CustomAmenities;
            }
        }
        private ObjectSet<CustomAmenity> _CustomAmenities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvictionNotice> EvictionNotices
        {
            get
            {
                if ((_EvictionNotices == null))
                {
                    _EvictionNotices = base.CreateObjectSet<EvictionNotice>("EvictionNotices");
                }
                return _EvictionNotices;
            }
        }
        private ObjectSet<EvictionNotice> _EvictionNotices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Floor> Floors
        {
            get
            {
                if ((_Floors == null))
                {
                    _Floors = base.CreateObjectSet<Floor>("Floors");
                }
                return _Floors;
            }
        }
        private ObjectSet<Floor> _Floors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LandlordAlert> LandlordAlerts
        {
            get
            {
                if ((_LandlordAlerts == null))
                {
                    _LandlordAlerts = base.CreateObjectSet<LandlordAlert>("LandlordAlerts");
                }
                return _LandlordAlerts;
            }
        }
        private ObjectSet<LandlordAlert> _LandlordAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LandlordInfo> LandlordInfoes
        {
            get
            {
                if ((_LandlordInfoes == null))
                {
                    _LandlordInfoes = base.CreateObjectSet<LandlordInfo>("LandlordInfoes");
                }
                return _LandlordInfoes;
            }
        }
        private ObjectSet<LandlordInfo> _LandlordInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseContract> LeaseContracts
        {
            get
            {
                if ((_LeaseContracts == null))
                {
                    _LeaseContracts = base.CreateObjectSet<LeaseContract>("LeaseContracts");
                }
                return _LeaseContracts;
            }
        }
        private ObjectSet<LeaseContract> _LeaseContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeasePaymentItem> LeasePaymentItems
        {
            get
            {
                if ((_LeasePaymentItems == null))
                {
                    _LeasePaymentItems = base.CreateObjectSet<LeasePaymentItem>("LeasePaymentItems");
                }
                return _LeasePaymentItems;
            }
        }
        private ObjectSet<LeasePaymentItem> _LeasePaymentItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeasePaymentPropertyTransaction> LeasePaymentPropertyTransactions
        {
            get
            {
                if ((_LeasePaymentPropertyTransactions == null))
                {
                    _LeasePaymentPropertyTransactions = base.CreateObjectSet<LeasePaymentPropertyTransaction>("LeasePaymentPropertyTransactions");
                }
                return _LeasePaymentPropertyTransactions;
            }
        }
        private ObjectSet<LeasePaymentPropertyTransaction> _LeasePaymentPropertyTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Leas> Leases
        {
            get
            {
                if ((_Leases == null))
                {
                    _Leases = base.CreateObjectSet<Leas>("Leases");
                }
                return _Leases;
            }
        }
        private ObjectSet<Leas> _Leases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTenant> LeaseTenants
        {
            get
            {
                if ((_LeaseTenants == null))
                {
                    _LeaseTenants = base.CreateObjectSet<LeaseTenant>("LeaseTenants");
                }
                return _LeaseTenants;
            }
        }
        private ObjectSet<LeaseTenant> _LeaseTenants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTransactionCredit> LeaseTransactionCredits
        {
            get
            {
                if ((_LeaseTransactionCredits == null))
                {
                    _LeaseTransactionCredits = base.CreateObjectSet<LeaseTransactionCredit>("LeaseTransactionCredits");
                }
                return _LeaseTransactionCredits;
            }
        }
        private ObjectSet<LeaseTransactionCredit> _LeaseTransactionCredits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTransaction> LeaseTransactions
        {
            get
            {
                if ((_LeaseTransactions == null))
                {
                    _LeaseTransactions = base.CreateObjectSet<LeaseTransaction>("LeaseTransactions");
                }
                return _LeaseTransactions;
            }
        }
        private ObjectSet<LeaseTransaction> _LeaseTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingCount> ListingCounts
        {
            get
            {
                if ((_ListingCounts == null))
                {
                    _ListingCounts = base.CreateObjectSet<ListingCount>("ListingCounts");
                }
                return _ListingCounts;
            }
        }
        private ObjectSet<ListingCount> _ListingCounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Listing> Listings
        {
            get
            {
                if ((_Listings == null))
                {
                    _Listings = base.CreateObjectSet<Listing>("Listings");
                }
                return _Listings;
            }
        }
        private ObjectSet<Listing> _Listings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderItem> OrderItems
        {
            get
            {
                if ((_OrderItems == null))
                {
                    _OrderItems = base.CreateObjectSet<OrderItem>("OrderItems");
                }
                return _OrderItems;
            }
        }
        private ObjectSet<OrderItem> _OrderItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyInfoAmenity> PropertyInfoAmenities
        {
            get
            {
                if ((_PropertyInfoAmenities == null))
                {
                    _PropertyInfoAmenities = base.CreateObjectSet<PropertyInfoAmenity>("PropertyInfoAmenities");
                }
                return _PropertyInfoAmenities;
            }
        }
        private ObjectSet<PropertyInfoAmenity> _PropertyInfoAmenities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyInfoAmenitiesWithOption> PropertyInfoAmenitiesWithOptions
        {
            get
            {
                if ((_PropertyInfoAmenitiesWithOptions == null))
                {
                    _PropertyInfoAmenitiesWithOptions = base.CreateObjectSet<PropertyInfoAmenitiesWithOption>("PropertyInfoAmenitiesWithOptions");
                }
                return _PropertyInfoAmenitiesWithOptions;
            }
        }
        private ObjectSet<PropertyInfoAmenitiesWithOption> _PropertyInfoAmenitiesWithOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyInfo> PropertyInfos
        {
            get
            {
                if ((_PropertyInfos == null))
                {
                    _PropertyInfos = base.CreateObjectSet<PropertyInfo>("PropertyInfos");
                }
                return _PropertyInfos;
            }
        }
        private ObjectSet<PropertyInfo> _PropertyInfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyTransaction> PropertyTransactions
        {
            get
            {
                if ((_PropertyTransactions == null))
                {
                    _PropertyTransactions = base.CreateObjectSet<PropertyTransaction>("PropertyTransactions");
                }
                return _PropertyTransactions;
            }
        }
        private ObjectSet<PropertyTransaction> _PropertyTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportedListing> ReportedListings
        {
            get
            {
                if ((_ReportedListings == null))
                {
                    _ReportedListings = base.CreateObjectSet<ReportedListing>("ReportedListings");
                }
                return _ReportedListings;
            }
        }
        private ObjectSet<ReportedListing> _ReportedListings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleUser> RoleUsers
        {
            get
            {
                if ((_RoleUsers == null))
                {
                    _RoleUsers = base.CreateObjectSet<RoleUser>("RoleUsers");
                }
                return _RoleUsers;
            }
        }
        private ObjectSet<RoleUser> _RoleUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SavedListing> SavedListings
        {
            get
            {
                if ((_SavedListings == null))
                {
                    _SavedListings = base.CreateObjectSet<SavedListing>("SavedListings");
                }
                return _SavedListings;
            }
        }
        private ObjectSet<SavedListing> _SavedListings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sid> Sids
        {
            get
            {
                if ((_Sids == null))
                {
                    _Sids = base.CreateObjectSet<Sid>("Sids");
                }
                return _Sids;
            }
        }
        private ObjectSet<Sid> _Sids;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriptionOrder> SubscriptionOrders
        {
            get
            {
                if ((_SubscriptionOrders == null))
                {
                    _SubscriptionOrders = base.CreateObjectSet<SubscriptionOrder>("SubscriptionOrders");
                }
                return _SubscriptionOrders;
            }
        }
        private ObjectSet<SubscriptionOrder> _SubscriptionOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscription> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscription>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscription> _Subscriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserBackgroundCheck> UserBackgroundChecks
        {
            get
            {
                if ((_UserBackgroundChecks == null))
                {
                    _UserBackgroundChecks = base.CreateObjectSet<UserBackgroundCheck>("UserBackgroundChecks");
                }
                return _UserBackgroundChecks;
            }
        }
        private ObjectSet<UserBackgroundCheck> _UserBackgroundChecks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserBank> UserBanks
        {
            get
            {
                if ((_UserBanks == null))
                {
                    _UserBanks = base.CreateObjectSet<UserBank>("UserBanks");
                }
                return _UserBanks;
            }
        }
        private ObjectSet<UserBank> _UserBanks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserContractAnswer> UserContractAnswers
        {
            get
            {
                if ((_UserContractAnswers == null))
                {
                    _UserContractAnswers = base.CreateObjectSet<UserContractAnswer>("UserContractAnswers");
                }
                return _UserContractAnswers;
            }
        }
        private ObjectSet<UserContractAnswer> _UserContractAnswers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserContract> UserContracts
        {
            get
            {
                if ((_UserContracts == null))
                {
                    _UserContracts = base.CreateObjectSet<UserContract>("UserContracts");
                }
                return _UserContracts;
            }
        }
        private ObjectSet<UserContract> _UserContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCreditCard> UserCreditCards
        {
            get
            {
                if ((_UserCreditCards == null))
                {
                    _UserCreditCards = base.CreateObjectSet<UserCreditCard>("UserCreditCards");
                }
                return _UserCreditCards;
            }
        }
        private ObjectSet<UserCreditCard> _UserCreditCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCreditCheck> UserCreditChecks
        {
            get
            {
                if ((_UserCreditChecks == null))
                {
                    _UserCreditChecks = base.CreateObjectSet<UserCreditCheck>("UserCreditChecks");
                }
                return _UserCreditChecks;
            }
        }
        private ObjectSet<UserCreditCheck> _UserCreditChecks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInterest> UserInterests
        {
            get
            {
                if ((_UserInterests == null))
                {
                    _UserInterests = base.CreateObjectSet<UserInterest>("UserInterests");
                }
                return _UserInterests;
            }
        }
        private ObjectSet<UserInterest> _UserInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZipInfo> ZipInfos
        {
            get
            {
                if ((_ZipInfos == null))
                {
                    _ZipInfos = base.CreateObjectSet<ZipInfo>("ZipInfos");
                }
                return _ZipInfos;
            }
        }
        private ObjectSet<ZipInfo> _ZipInfos;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AchFromTenantTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchFromTenantTransactions(AchFromTenantTransaction achFromTenantTransaction)
        {
            base.AddObject("AchFromTenantTransactions", achFromTenantTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AchToLandlordTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchToLandlordTransactions(AchToLandlordTransaction achToLandlordTransaction)
        {
            base.AddObject("AchToLandlordTransactions", achToLandlordTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AffiliateUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAffiliateUsers(AffiliateUser affiliateUser)
        {
            base.AddObject("AffiliateUsers", affiliateUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlerts(Alert alert)
        {
            base.AddObject("Alerts", alert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Amenities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAmenities(Amenity amenity)
        {
            base.AddObject("Amenities", amenity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AmenitiesWithOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAmenitiesWithOptions(AmenitiesWithOption amenitiesWithOption)
        {
            base.AddObject("AmenitiesWithOptions", amenitiesWithOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AmenityOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAmenityOptions(AmenityOption amenityOption)
        {
            base.AddObject("AmenityOptions", amenityOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswers(Answer answer)
        {
            base.AddObject("Answers", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApiKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApiKeys(ApiKey apiKey)
        {
            base.AddObject("ApiKeys", apiKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationInfoes(ApplicationInfo applicationInfo)
        {
            base.AddObject("ApplicationInfoes", applicationInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthTokens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthTokens(AuthToken authToken)
        {
            base.AddObject("AuthTokens", authToken);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Building building)
        {
            base.AddObject("Buildings", building);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomAmenities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomAmenities(CustomAmenity customAmenity)
        {
            base.AddObject("CustomAmenities", customAmenity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvictionNotices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvictionNotices(EvictionNotice evictionNotice)
        {
            base.AddObject("EvictionNotices", evictionNotice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Floors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFloors(Floor floor)
        {
            base.AddObject("Floors", floor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LandlordAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLandlordAlerts(LandlordAlert landlordAlert)
        {
            base.AddObject("LandlordAlerts", landlordAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LandlordInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLandlordInfoes(LandlordInfo landlordInfo)
        {
            base.AddObject("LandlordInfoes", landlordInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseContracts(LeaseContract leaseContract)
        {
            base.AddObject("LeaseContracts", leaseContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeasePaymentItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeasePaymentItems(LeasePaymentItem leasePaymentItem)
        {
            base.AddObject("LeasePaymentItems", leasePaymentItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeasePaymentPropertyTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeasePaymentPropertyTransactions(LeasePaymentPropertyTransaction leasePaymentPropertyTransaction)
        {
            base.AddObject("LeasePaymentPropertyTransactions", leasePaymentPropertyTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeases(Leas leas)
        {
            base.AddObject("Leases", leas);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTenants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTenants(LeaseTenant leaseTenant)
        {
            base.AddObject("LeaseTenants", leaseTenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTransactionCredits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTransactionCredits(LeaseTransactionCredit leaseTransactionCredit)
        {
            base.AddObject("LeaseTransactionCredits", leaseTransactionCredit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTransactions(LeaseTransaction leaseTransaction)
        {
            base.AddObject("LeaseTransactions", leaseTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingCounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingCounts(ListingCount listingCount)
        {
            base.AddObject("ListingCounts", listingCount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Listings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListings(Listing listing)
        {
            base.AddObject("Listings", listing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderItems(OrderItem orderItem)
        {
            base.AddObject("OrderItems", orderItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyInfoAmenities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyInfoAmenities(PropertyInfoAmenity propertyInfoAmenity)
        {
            base.AddObject("PropertyInfoAmenities", propertyInfoAmenity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyInfoAmenitiesWithOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyInfoAmenitiesWithOptions(PropertyInfoAmenitiesWithOption propertyInfoAmenitiesWithOption)
        {
            base.AddObject("PropertyInfoAmenitiesWithOptions", propertyInfoAmenitiesWithOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyInfos(PropertyInfo propertyInfo)
        {
            base.AddObject("PropertyInfos", propertyInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyTransactions(PropertyTransaction propertyTransaction)
        {
            base.AddObject("PropertyTransactions", propertyTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportedListings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportedListings(ReportedListing reportedListing)
        {
            base.AddObject("ReportedListings", reportedListing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleUsers(RoleUser roleUser)
        {
            base.AddObject("RoleUsers", roleUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SavedListings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSavedListings(SavedListing savedListing)
        {
            base.AddObject("SavedListings", savedListing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sids EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSids(Sid sid)
        {
            base.AddObject("Sids", sid);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriptionOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptionOrders(SubscriptionOrder subscriptionOrder)
        {
            base.AddObject("SubscriptionOrders", subscriptionOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscription subscription)
        {
            base.AddObject("Subscriptions", subscription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserBackgroundChecks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserBackgroundChecks(UserBackgroundCheck userBackgroundCheck)
        {
            base.AddObject("UserBackgroundChecks", userBackgroundCheck);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserBanks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserBanks(UserBank userBank)
        {
            base.AddObject("UserBanks", userBank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserContractAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserContractAnswers(UserContractAnswer userContractAnswer)
        {
            base.AddObject("UserContractAnswers", userContractAnswer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserContracts(UserContract userContract)
        {
            base.AddObject("UserContracts", userContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCreditCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCreditCards(UserCreditCard userCreditCard)
        {
            base.AddObject("UserCreditCards", userCreditCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCreditChecks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCreditChecks(UserCreditCheck userCreditCheck)
        {
            base.AddObject("UserCreditChecks", userCreditCheck);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserInterests(UserInterest userInterest)
        {
            base.AddObject("UserInterests", userInterest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZipInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZipInfos(ZipInfo zipInfo)
        {
            base.AddObject("ZipInfos", zipInfo);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="AchFromTenantTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AchFromTenantTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchFromTenantTransaction object.
        /// </summary>
        /// <param name="achFromTenantTransactionId">Initial value of the AchFromTenantTransactionId property.</param>
        /// <param name="leaseTransactionId">Initial value of the LeaseTransactionId property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static AchFromTenantTransaction CreateAchFromTenantTransaction(global::System.Int64 achFromTenantTransactionId, global::System.Int64 leaseTransactionId, global::System.DateTime requestDate, global::System.Int64 alias, global::System.Int64 transactionId, global::System.Decimal amount, global::System.String status, global::System.Boolean isDeleted)
        {
            AchFromTenantTransaction achFromTenantTransaction = new AchFromTenantTransaction();
            achFromTenantTransaction.AchFromTenantTransactionId = achFromTenantTransactionId;
            achFromTenantTransaction.LeaseTransactionId = leaseTransactionId;
            achFromTenantTransaction.RequestDate = requestDate;
            achFromTenantTransaction.Alias = alias;
            achFromTenantTransaction.TransactionId = transactionId;
            achFromTenantTransaction.Amount = amount;
            achFromTenantTransaction.Status = status;
            achFromTenantTransaction.IsDeleted = isDeleted;
            return achFromTenantTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AchFromTenantTransactionId
        {
            get
            {
                return _AchFromTenantTransactionId;
            }
            set
            {
                if (_AchFromTenantTransactionId != value)
                {
                    OnAchFromTenantTransactionIdChanging(value);
                    ReportPropertyChanging("AchFromTenantTransactionId");
                    _AchFromTenantTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchFromTenantTransactionId");
                    OnAchFromTenantTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _AchFromTenantTransactionId;
        partial void OnAchFromTenantTransactionIdChanging(global::System.Int64 value);
        partial void OnAchFromTenantTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeaseTransactionId
        {
            get
            {
                return _LeaseTransactionId;
            }
            set
            {
                OnLeaseTransactionIdChanging(value);
                ReportPropertyChanging("LeaseTransactionId");
                _LeaseTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseTransactionId");
                OnLeaseTransactionIdChanged();
            }
        }
        private global::System.Int64 _LeaseTransactionId;
        partial void OnLeaseTransactionIdChanging(global::System.Int64 value);
        partial void OnLeaseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResultDate
        {
            get
            {
                return _ResultDate;
            }
            set
            {
                OnResultDateChanging(value);
                ReportPropertyChanging("ResultDate");
                _ResultDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultDate");
                OnResultDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResultDate;
        partial void OnResultDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResultDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.Int64 _Alias;
        partial void OnAliasChanging(global::System.Int64 value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AchFromTenantTransactions_LeaseTransactions", "LeaseTransactions")]
        public LeaseTransaction LeaseTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_AchFromTenantTransactions_LeaseTransactions", "LeaseTransactions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_AchFromTenantTransactions_LeaseTransactions", "LeaseTransactions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTransaction> LeaseTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_AchFromTenantTransactions_LeaseTransactions", "LeaseTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_AchFromTenantTransactions_LeaseTransactions", "LeaseTransactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchToLandlordTransactions")]
        public EntityCollection<AchToLandlordTransaction> AchToLandlordTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchToLandlordTransaction>("RentlerBackupModel.FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchToLandlordTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchToLandlordTransaction>("RentlerBackupModel.FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchToLandlordTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="AchToLandlordTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AchToLandlordTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchToLandlordTransaction object.
        /// </summary>
        /// <param name="achToLandlordTransactionId">Initial value of the AchToLandlordTransactionId property.</param>
        /// <param name="achFromTenantTransactionId">Initial value of the AchFromTenantTransactionId property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static AchToLandlordTransaction CreateAchToLandlordTransaction(global::System.Int64 achToLandlordTransactionId, global::System.Int64 achFromTenantTransactionId, global::System.DateTime requestDate, global::System.Int64 alias, global::System.Decimal amount, global::System.String status, global::System.Boolean isDeleted)
        {
            AchToLandlordTransaction achToLandlordTransaction = new AchToLandlordTransaction();
            achToLandlordTransaction.AchToLandlordTransactionId = achToLandlordTransactionId;
            achToLandlordTransaction.AchFromTenantTransactionId = achFromTenantTransactionId;
            achToLandlordTransaction.RequestDate = requestDate;
            achToLandlordTransaction.Alias = alias;
            achToLandlordTransaction.Amount = amount;
            achToLandlordTransaction.Status = status;
            achToLandlordTransaction.IsDeleted = isDeleted;
            return achToLandlordTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AchToLandlordTransactionId
        {
            get
            {
                return _AchToLandlordTransactionId;
            }
            set
            {
                if (_AchToLandlordTransactionId != value)
                {
                    OnAchToLandlordTransactionIdChanging(value);
                    ReportPropertyChanging("AchToLandlordTransactionId");
                    _AchToLandlordTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchToLandlordTransactionId");
                    OnAchToLandlordTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _AchToLandlordTransactionId;
        partial void OnAchToLandlordTransactionIdChanging(global::System.Int64 value);
        partial void OnAchToLandlordTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AchFromTenantTransactionId
        {
            get
            {
                return _AchFromTenantTransactionId;
            }
            set
            {
                OnAchFromTenantTransactionIdChanging(value);
                ReportPropertyChanging("AchFromTenantTransactionId");
                _AchFromTenantTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchFromTenantTransactionId");
                OnAchFromTenantTransactionIdChanged();
            }
        }
        private global::System.Int64 _AchFromTenantTransactionId;
        partial void OnAchFromTenantTransactionIdChanging(global::System.Int64 value);
        partial void OnAchFromTenantTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResultDate
        {
            get
            {
                return _ResultDate;
            }
            set
            {
                OnResultDateChanging(value);
                ReportPropertyChanging("ResultDate");
                _ResultDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultDate");
                OnResultDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResultDate;
        partial void OnResultDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResultDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.Int64 _Alias;
        partial void OnAliasChanging(global::System.Int64 value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TransactionId;
        partial void OnTransactionIdChanging(Nullable<global::System.Int64> value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchFromTenantTransactions")]
        public AchFromTenantTransaction AchFromTenantTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AchFromTenantTransaction>("RentlerBackupModel.FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchFromTenantTransactions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AchFromTenantTransaction>("RentlerBackupModel.FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchFromTenantTransactions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AchFromTenantTransaction> AchFromTenantTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AchFromTenantTransaction>("RentlerBackupModel.FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchFromTenantTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AchFromTenantTransaction>("RentlerBackupModel.FK_AchToLandlordTransactions_AchFromTenantTransactions", "AchFromTenantTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="AffiliateUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AffiliateUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AffiliateUser object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="affiliateUserKey">Initial value of the AffiliateUserKey property.</param>
        /// <param name="apiKey">Initial value of the ApiKey property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static AffiliateUser CreateAffiliateUser(global::System.Guid userId, global::System.String affiliateUserKey, global::System.Guid apiKey, global::System.Boolean isDeleted)
        {
            AffiliateUser affiliateUser = new AffiliateUser();
            affiliateUser.UserId = userId;
            affiliateUser.AffiliateUserKey = affiliateUserKey;
            affiliateUser.ApiKey = apiKey;
            affiliateUser.IsDeleted = isDeleted;
            return affiliateUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AffiliateUserKey
        {
            get
            {
                return _AffiliateUserKey;
            }
            set
            {
                OnAffiliateUserKeyChanging(value);
                ReportPropertyChanging("AffiliateUserKey");
                _AffiliateUserKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AffiliateUserKey");
                OnAffiliateUserKeyChanged();
            }
        }
        private global::System.String _AffiliateUserKey;
        partial void OnAffiliateUserKeyChanging(global::System.String value);
        partial void OnAffiliateUserKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApiKey
        {
            get
            {
                return _ApiKey;
            }
            set
            {
                OnApiKeyChanging(value);
                ReportPropertyChanging("ApiKey");
                _ApiKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApiKey");
                OnApiKeyChanged();
            }
        }
        private global::System.Guid _ApiKey;
        partial void OnApiKeyChanging(global::System.Guid value);
        partial void OnApiKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AffiliateUsers_ApiKeys", "ApiKeys")]
        public ApiKey ApiKey1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApiKey>("RentlerBackupModel.FK_AffiliateUsers_ApiKeys", "ApiKeys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApiKey>("RentlerBackupModel.FK_AffiliateUsers_ApiKeys", "ApiKeys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApiKey> ApiKey1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApiKey>("RentlerBackupModel.FK_AffiliateUsers_ApiKeys", "ApiKeys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApiKey>("RentlerBackupModel.FK_AffiliateUsers_ApiKeys", "ApiKeys", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AffiliateUsers_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_AffiliateUsers_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_AffiliateUsers_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_AffiliateUsers_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_AffiliateUsers_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Alert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alert object.
        /// </summary>
        /// <param name="alertId">Initial value of the AlertId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="isDismissed">Initial value of the IsDismissed property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Alert CreateAlert(global::System.Guid alertId, global::System.Guid userId, global::System.String message, global::System.String type, global::System.DateTime timestamp, global::System.Boolean isDismissed, global::System.Boolean isDeleted)
        {
            Alert alert = new Alert();
            alert.AlertId = alertId;
            alert.UserId = userId;
            alert.Message = message;
            alert.Type = type;
            alert.Timestamp = timestamp;
            alert.IsDismissed = isDismissed;
            alert.IsDeleted = isDeleted;
            return alert;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                if (_AlertId != value)
                {
                    OnAlertIdChanging(value);
                    ReportPropertyChanging("AlertId");
                    _AlertId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertId");
                    OnAlertIdChanged();
                }
            }
        }
        private global::System.Guid _AlertId;
        partial void OnAlertIdChanging(global::System.Guid value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                OnBuildingIdChanging(value);
                ReportPropertyChanging("BuildingId");
                _BuildingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingId");
                OnBuildingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BuildingId;
        partial void OnBuildingIdChanging(Nullable<global::System.Int32> value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDismissed
        {
            get
            {
                return _IsDismissed;
            }
            set
            {
                OnIsDismissedChanging(value);
                ReportPropertyChanging("IsDismissed");
                _IsDismissed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDismissed");
                OnIsDismissedChanged();
            }
        }
        private global::System.Boolean _IsDismissed;
        partial void OnIsDismissedChanging(global::System.Boolean value);
        partial void OnIsDismissedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiveType
        {
            get
            {
                return _ReceiveType;
            }
            set
            {
                OnReceiveTypeChanging(value);
                ReportPropertyChanging("ReceiveType");
                _ReceiveType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiveType");
                OnReceiveTypeChanged();
            }
        }
        private global::System.String _ReceiveType;
        partial void OnReceiveTypeChanging(global::System.String value);
        partial void OnReceiveTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Alerts_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Alerts_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Alerts_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Alerts_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Alerts_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="AmenitiesWithOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AmenitiesWithOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AmenitiesWithOption object.
        /// </summary>
        /// <param name="amenityId">Initial value of the AmenityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static AmenitiesWithOption CreateAmenitiesWithOption(global::System.Int32 amenityId, global::System.String name, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            AmenitiesWithOption amenitiesWithOption = new AmenitiesWithOption();
            amenitiesWithOption.AmenityId = amenityId;
            amenitiesWithOption.Name = name;
            amenitiesWithOption.CreateDate = createDate;
            amenitiesWithOption.CreatedBy = createdBy;
            amenitiesWithOption.IsDeleted = isDeleted;
            return amenitiesWithOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmenityId
        {
            get
            {
                return _AmenityId;
            }
            set
            {
                if (_AmenityId != value)
                {
                    OnAmenityIdChanging(value);
                    ReportPropertyChanging("AmenityId");
                    _AmenityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmenityId");
                    OnAmenityIdChanged();
                }
            }
        }
        private global::System.Int32 _AmenityId;
        partial void OnAmenityIdChanging(global::System.Int32 value);
        partial void OnAmenityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AmenityOptions_AmenitiesWithOptions", "AmenityOptions")]
        public EntityCollection<AmenityOption> AmenityOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AmenityOption>("RentlerBackupModel.FK_AmenityOptions_AmenitiesWithOptions", "AmenityOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AmenityOption>("RentlerBackupModel.FK_AmenityOptions_AmenitiesWithOptions", "AmenityOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "PropertyInfoAmenitiesWithOptions")]
        public EntityCollection<PropertyInfoAmenitiesWithOption> PropertyInfoAmenitiesWithOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyInfoAmenitiesWithOption>("RentlerBackupModel.FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "PropertyInfoAmenitiesWithOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyInfoAmenitiesWithOption>("RentlerBackupModel.FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "PropertyInfoAmenitiesWithOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Amenity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Amenity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Amenity object.
        /// </summary>
        /// <param name="amenityId">Initial value of the AmenityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Amenity CreateAmenity(global::System.Int32 amenityId, global::System.String name, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Amenity amenity = new Amenity();
            amenity.AmenityId = amenityId;
            amenity.Name = name;
            amenity.CreateDate = createDate;
            amenity.CreatedBy = createdBy;
            amenity.IsDeleted = isDeleted;
            return amenity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmenityId
        {
            get
            {
                return _AmenityId;
            }
            set
            {
                if (_AmenityId != value)
                {
                    OnAmenityIdChanging(value);
                    ReportPropertyChanging("AmenityId");
                    _AmenityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmenityId");
                    OnAmenityIdChanged();
                }
            }
        }
        private global::System.Int32 _AmenityId;
        partial void OnAmenityIdChanging(global::System.Int32 value);
        partial void OnAmenityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_HomeAmenities_Amenities", "PropertyInfoAmenities")]
        public EntityCollection<PropertyInfoAmenity> PropertyInfoAmenities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyInfoAmenity>("RentlerBackupModel.FK_HomeAmenities_Amenities", "PropertyInfoAmenities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyInfoAmenity>("RentlerBackupModel.FK_HomeAmenities_Amenities", "PropertyInfoAmenities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="AmenityOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AmenityOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AmenityOption object.
        /// </summary>
        /// <param name="amenityId">Initial value of the AmenityId property.</param>
        /// <param name="option">Initial value of the Option property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static AmenityOption CreateAmenityOption(global::System.Int32 amenityId, global::System.String option, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted, global::System.Int32 sortOrder)
        {
            AmenityOption amenityOption = new AmenityOption();
            amenityOption.AmenityId = amenityId;
            amenityOption.Option = option;
            amenityOption.CreateDate = createDate;
            amenityOption.CreatedBy = createdBy;
            amenityOption.IsDeleted = isDeleted;
            amenityOption.SortOrder = sortOrder;
            return amenityOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmenityId
        {
            get
            {
                return _AmenityId;
            }
            set
            {
                if (_AmenityId != value)
                {
                    OnAmenityIdChanging(value);
                    ReportPropertyChanging("AmenityId");
                    _AmenityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmenityId");
                    OnAmenityIdChanged();
                }
            }
        }
        private global::System.Int32 _AmenityId;
        partial void OnAmenityIdChanging(global::System.Int32 value);
        partial void OnAmenityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Option
        {
            get
            {
                return _Option;
            }
            set
            {
                if (_Option != value)
                {
                    OnOptionChanging(value);
                    ReportPropertyChanging("Option");
                    _Option = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Option");
                    OnOptionChanged();
                }
            }
        }
        private global::System.String _Option;
        partial void OnOptionChanging(global::System.String value);
        partial void OnOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AmenityOptions_AmenitiesWithOptions", "AmenitiesWithOptions")]
        public AmenitiesWithOption AmenitiesWithOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_AmenityOptions_AmenitiesWithOptions", "AmenitiesWithOptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_AmenityOptions_AmenitiesWithOptions", "AmenitiesWithOptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AmenitiesWithOption> AmenitiesWithOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_AmenityOptions_AmenitiesWithOptions", "AmenitiesWithOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_AmenityOptions_AmenitiesWithOptions", "AmenitiesWithOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="answerId">Initial value of the AnswerId property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="contractText">Initial value of the ContractText property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Answer CreateAnswer(global::System.Int32 answerId, global::System.Int32 questionId, global::System.Int32 sortOrder, global::System.String text, global::System.String contractText, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Answer answer = new Answer();
            answer.AnswerId = answerId;
            answer.QuestionId = questionId;
            answer.SortOrder = sortOrder;
            answer.Text = text;
            answer.ContractText = contractText;
            answer.CreateDate = createDate;
            answer.CreatedBy = createdBy;
            answer.IsDeleted = isDeleted;
            return answer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnswerId
        {
            get
            {
                return _AnswerId;
            }
            set
            {
                if (_AnswerId != value)
                {
                    OnAnswerIdChanging(value);
                    ReportPropertyChanging("AnswerId");
                    _AnswerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnswerId");
                    OnAnswerIdChanged();
                }
            }
        }
        private global::System.Int32 _AnswerId;
        partial void OnAnswerIdChanging(global::System.Int32 value);
        partial void OnAnswerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                OnQuestionIdChanging(value);
                ReportPropertyChanging("QuestionId");
                _QuestionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionId");
                OnQuestionIdChanged();
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContractText
        {
            get
            {
                return _ContractText;
            }
            set
            {
                OnContractTextChanging(value);
                ReportPropertyChanging("ContractText");
                _ContractText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContractText");
                OnContractTextChanged();
            }
        }
        private global::System.String _ContractText;
        partial void OnContractTextChanging(global::System.String value);
        partial void OnContractTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Answers_Questions", "Questions")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("RentlerBackupModel.FK_Answers_Questions", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("RentlerBackupModel.FK_Answers_Questions", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("RentlerBackupModel.FK_Answers_Questions", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("RentlerBackupModel.FK_Answers_Questions", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContractAnswers_Answers", "UserContractAnswers")]
        public EntityCollection<UserContractAnswer> UserContractAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserContractAnswer>("RentlerBackupModel.FK_UserContractAnswers_Answers", "UserContractAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserContractAnswer>("RentlerBackupModel.FK_UserContractAnswers_Answers", "UserContractAnswers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="ApiKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApiKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApiKey object.
        /// </summary>
        /// <param name="apiKeyId">Initial value of the ApiKeyId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ApiKey CreateApiKey(global::System.Guid apiKeyId, global::System.Guid userId, global::System.String name, global::System.Boolean isDeleted)
        {
            ApiKey apiKey = new ApiKey();
            apiKey.ApiKeyId = apiKeyId;
            apiKey.UserId = userId;
            apiKey.Name = name;
            apiKey.IsDeleted = isDeleted;
            return apiKey;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApiKeyId
        {
            get
            {
                return _ApiKeyId;
            }
            set
            {
                if (_ApiKeyId != value)
                {
                    OnApiKeyIdChanging(value);
                    ReportPropertyChanging("ApiKeyId");
                    _ApiKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApiKeyId");
                    OnApiKeyIdChanged();
                }
            }
        }
        private global::System.Guid _ApiKeyId;
        partial void OnApiKeyIdChanging(global::System.Guid value);
        partial void OnApiKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IpAddress
        {
            get
            {
                return _IpAddress;
            }
            set
            {
                OnIpAddressChanging(value);
                ReportPropertyChanging("IpAddress");
                _IpAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IpAddress");
                OnIpAddressChanged();
            }
        }
        private global::System.String _IpAddress;
        partial void OnIpAddressChanging(global::System.String value);
        partial void OnIpAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AffiliateUsers_ApiKeys", "AffiliateUsers")]
        public EntityCollection<AffiliateUser> AffiliateUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AffiliateUser>("RentlerBackupModel.FK_AffiliateUsers_ApiKeys", "AffiliateUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AffiliateUser>("RentlerBackupModel.FK_AffiliateUsers_ApiKeys", "AffiliateUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ApiKeys_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_ApiKeys_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_ApiKeys_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_ApiKeys_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_ApiKeys_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="ApplicationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationInfo object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ApplicationInfo CreateApplicationInfo(global::System.Guid userId, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            ApplicationInfo applicationInfo = new ApplicationInfo();
            applicationInfo.UserId = userId;
            applicationInfo.CreateDate = createDate;
            applicationInfo.CreatedBy = createdBy;
            applicationInfo.IsDeleted = isDeleted;
            return applicationInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ssn
        {
            get
            {
                return _Ssn;
            }
            set
            {
                OnSsnChanging(value);
                ReportPropertyChanging("Ssn");
                _Ssn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ssn");
                OnSsnChanged();
            }
        }
        private global::System.String _Ssn;
        partial void OnSsnChanging(global::System.String value);
        partial void OnSsnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentPhone
        {
            get
            {
                return _PresentPhone;
            }
            set
            {
                OnPresentPhoneChanging(value);
                ReportPropertyChanging("PresentPhone");
                _PresentPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentPhone");
                OnPresentPhoneChanged();
            }
        }
        private global::System.String _PresentPhone;
        partial void OnPresentPhoneChanging(global::System.String value);
        partial void OnPresentPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentAddressLine1
        {
            get
            {
                return _PresentAddressLine1;
            }
            set
            {
                OnPresentAddressLine1Changing(value);
                ReportPropertyChanging("PresentAddressLine1");
                _PresentAddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentAddressLine1");
                OnPresentAddressLine1Changed();
            }
        }
        private global::System.String _PresentAddressLine1;
        partial void OnPresentAddressLine1Changing(global::System.String value);
        partial void OnPresentAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentAddressLine2
        {
            get
            {
                return _PresentAddressLine2;
            }
            set
            {
                OnPresentAddressLine2Changing(value);
                ReportPropertyChanging("PresentAddressLine2");
                _PresentAddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentAddressLine2");
                OnPresentAddressLine2Changed();
            }
        }
        private global::System.String _PresentAddressLine2;
        partial void OnPresentAddressLine2Changing(global::System.String value);
        partial void OnPresentAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentCity
        {
            get
            {
                return _PresentCity;
            }
            set
            {
                OnPresentCityChanging(value);
                ReportPropertyChanging("PresentCity");
                _PresentCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentCity");
                OnPresentCityChanged();
            }
        }
        private global::System.String _PresentCity;
        partial void OnPresentCityChanging(global::System.String value);
        partial void OnPresentCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentState
        {
            get
            {
                return _PresentState;
            }
            set
            {
                OnPresentStateChanging(value);
                ReportPropertyChanging("PresentState");
                _PresentState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentState");
                OnPresentStateChanged();
            }
        }
        private global::System.String _PresentState;
        partial void OnPresentStateChanging(global::System.String value);
        partial void OnPresentStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentZip
        {
            get
            {
                return _PresentZip;
            }
            set
            {
                OnPresentZipChanging(value);
                ReportPropertyChanging("PresentZip");
                _PresentZip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentZip");
                OnPresentZipChanged();
            }
        }
        private global::System.String _PresentZip;
        partial void OnPresentZipChanging(global::System.String value);
        partial void OnPresentZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentLandlord
        {
            get
            {
                return _PresentLandlord;
            }
            set
            {
                OnPresentLandlordChanging(value);
                ReportPropertyChanging("PresentLandlord");
                _PresentLandlord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentLandlord");
                OnPresentLandlordChanged();
            }
        }
        private global::System.String _PresentLandlord;
        partial void OnPresentLandlordChanging(global::System.String value);
        partial void OnPresentLandlordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentLandlordPhone
        {
            get
            {
                return _PresentLandlordPhone;
            }
            set
            {
                OnPresentLandlordPhoneChanging(value);
                ReportPropertyChanging("PresentLandlordPhone");
                _PresentLandlordPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentLandlordPhone");
                OnPresentLandlordPhoneChanged();
            }
        }
        private global::System.String _PresentLandlordPhone;
        partial void OnPresentLandlordPhoneChanging(global::System.String value);
        partial void OnPresentLandlordPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousAddressLine1
        {
            get
            {
                return _PreviousAddressLine1;
            }
            set
            {
                OnPreviousAddressLine1Changing(value);
                ReportPropertyChanging("PreviousAddressLine1");
                _PreviousAddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousAddressLine1");
                OnPreviousAddressLine1Changed();
            }
        }
        private global::System.String _PreviousAddressLine1;
        partial void OnPreviousAddressLine1Changing(global::System.String value);
        partial void OnPreviousAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousAddressLine2
        {
            get
            {
                return _PreviousAddressLine2;
            }
            set
            {
                OnPreviousAddressLine2Changing(value);
                ReportPropertyChanging("PreviousAddressLine2");
                _PreviousAddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousAddressLine2");
                OnPreviousAddressLine2Changed();
            }
        }
        private global::System.String _PreviousAddressLine2;
        partial void OnPreviousAddressLine2Changing(global::System.String value);
        partial void OnPreviousAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousCity
        {
            get
            {
                return _PreviousCity;
            }
            set
            {
                OnPreviousCityChanging(value);
                ReportPropertyChanging("PreviousCity");
                _PreviousCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousCity");
                OnPreviousCityChanged();
            }
        }
        private global::System.String _PreviousCity;
        partial void OnPreviousCityChanging(global::System.String value);
        partial void OnPreviousCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousState
        {
            get
            {
                return _PreviousState;
            }
            set
            {
                OnPreviousStateChanging(value);
                ReportPropertyChanging("PreviousState");
                _PreviousState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousState");
                OnPreviousStateChanged();
            }
        }
        private global::System.String _PreviousState;
        partial void OnPreviousStateChanging(global::System.String value);
        partial void OnPreviousStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousZip
        {
            get
            {
                return _PreviousZip;
            }
            set
            {
                OnPreviousZipChanging(value);
                ReportPropertyChanging("PreviousZip");
                _PreviousZip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousZip");
                OnPreviousZipChanged();
            }
        }
        private global::System.String _PreviousZip;
        partial void OnPreviousZipChanging(global::System.String value);
        partial void OnPreviousZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousLandlord
        {
            get
            {
                return _PreviousLandlord;
            }
            set
            {
                OnPreviousLandlordChanging(value);
                ReportPropertyChanging("PreviousLandlord");
                _PreviousLandlord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousLandlord");
                OnPreviousLandlordChanged();
            }
        }
        private global::System.String _PreviousLandlord;
        partial void OnPreviousLandlordChanging(global::System.String value);
        partial void OnPreviousLandlordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousLandlordPhone
        {
            get
            {
                return _PreviousLandlordPhone;
            }
            set
            {
                OnPreviousLandlordPhoneChanging(value);
                ReportPropertyChanging("PreviousLandlordPhone");
                _PreviousLandlordPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousLandlordPhone");
                OnPreviousLandlordPhoneChanged();
            }
        }
        private global::System.String _PreviousLandlordPhone;
        partial void OnPreviousLandlordPhoneChanging(global::System.String value);
        partial void OnPreviousLandlordPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentEmployer
        {
            get
            {
                return _PresentEmployer;
            }
            set
            {
                OnPresentEmployerChanging(value);
                ReportPropertyChanging("PresentEmployer");
                _PresentEmployer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentEmployer");
                OnPresentEmployerChanged();
            }
        }
        private global::System.String _PresentEmployer;
        partial void OnPresentEmployerChanging(global::System.String value);
        partial void OnPresentEmployerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentEmployerPhone
        {
            get
            {
                return _PresentEmployerPhone;
            }
            set
            {
                OnPresentEmployerPhoneChanging(value);
                ReportPropertyChanging("PresentEmployerPhone");
                _PresentEmployerPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentEmployerPhone");
                OnPresentEmployerPhoneChanged();
            }
        }
        private global::System.String _PresentEmployerPhone;
        partial void OnPresentEmployerPhoneChanging(global::System.String value);
        partial void OnPresentEmployerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousEmployer
        {
            get
            {
                return _PreviousEmployer;
            }
            set
            {
                OnPreviousEmployerChanging(value);
                ReportPropertyChanging("PreviousEmployer");
                _PreviousEmployer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousEmployer");
                OnPreviousEmployerChanged();
            }
        }
        private global::System.String _PreviousEmployer;
        partial void OnPreviousEmployerChanging(global::System.String value);
        partial void OnPreviousEmployerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousEmployerPhone
        {
            get
            {
                return _PreviousEmployerPhone;
            }
            set
            {
                OnPreviousEmployerPhoneChanging(value);
                ReportPropertyChanging("PreviousEmployerPhone");
                _PreviousEmployerPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousEmployerPhone");
                OnPreviousEmployerPhoneChanged();
            }
        }
        private global::System.String _PreviousEmployerPhone;
        partial void OnPreviousEmployerPhoneChanging(global::System.String value);
        partial void OnPreviousEmployerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContact
        {
            get
            {
                return _EmergencyContact;
            }
            set
            {
                OnEmergencyContactChanging(value);
                ReportPropertyChanging("EmergencyContact");
                _EmergencyContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContact");
                OnEmergencyContactChanged();
            }
        }
        private global::System.String _EmergencyContact;
        partial void OnEmergencyContactChanging(global::System.String value);
        partial void OnEmergencyContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactPhone
        {
            get
            {
                return _EmergencyContactPhone;
            }
            set
            {
                OnEmergencyContactPhoneChanging(value);
                ReportPropertyChanging("EmergencyContactPhone");
                _EmergencyContactPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactPhone");
                OnEmergencyContactPhoneChanged();
            }
        }
        private global::System.String _EmergencyContactPhone;
        partial void OnEmergencyContactPhoneChanging(global::System.String value);
        partial void OnEmergencyContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactAddressLine1
        {
            get
            {
                return _EmergencyContactAddressLine1;
            }
            set
            {
                OnEmergencyContactAddressLine1Changing(value);
                ReportPropertyChanging("EmergencyContactAddressLine1");
                _EmergencyContactAddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactAddressLine1");
                OnEmergencyContactAddressLine1Changed();
            }
        }
        private global::System.String _EmergencyContactAddressLine1;
        partial void OnEmergencyContactAddressLine1Changing(global::System.String value);
        partial void OnEmergencyContactAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactAddressLine2
        {
            get
            {
                return _EmergencyContactAddressLine2;
            }
            set
            {
                OnEmergencyContactAddressLine2Changing(value);
                ReportPropertyChanging("EmergencyContactAddressLine2");
                _EmergencyContactAddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactAddressLine2");
                OnEmergencyContactAddressLine2Changed();
            }
        }
        private global::System.String _EmergencyContactAddressLine2;
        partial void OnEmergencyContactAddressLine2Changing(global::System.String value);
        partial void OnEmergencyContactAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactCity
        {
            get
            {
                return _EmergencyContactCity;
            }
            set
            {
                OnEmergencyContactCityChanging(value);
                ReportPropertyChanging("EmergencyContactCity");
                _EmergencyContactCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactCity");
                OnEmergencyContactCityChanged();
            }
        }
        private global::System.String _EmergencyContactCity;
        partial void OnEmergencyContactCityChanging(global::System.String value);
        partial void OnEmergencyContactCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactState
        {
            get
            {
                return _EmergencyContactState;
            }
            set
            {
                OnEmergencyContactStateChanging(value);
                ReportPropertyChanging("EmergencyContactState");
                _EmergencyContactState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactState");
                OnEmergencyContactStateChanged();
            }
        }
        private global::System.String _EmergencyContactState;
        partial void OnEmergencyContactStateChanging(global::System.String value);
        partial void OnEmergencyContactStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactZip
        {
            get
            {
                return _EmergencyContactZip;
            }
            set
            {
                OnEmergencyContactZipChanging(value);
                ReportPropertyChanging("EmergencyContactZip");
                _EmergencyContactZip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactZip");
                OnEmergencyContactZipChanged();
            }
        }
        private global::System.String _EmergencyContactZip;
        partial void OnEmergencyContactZipChanging(global::System.String value);
        partial void OnEmergencyContactZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleYear
        {
            get
            {
                return _VehicleYear;
            }
            set
            {
                OnVehicleYearChanging(value);
                ReportPropertyChanging("VehicleYear");
                _VehicleYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleYear");
                OnVehicleYearChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleYear;
        partial void OnVehicleYearChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleMake
        {
            get
            {
                return _VehicleMake;
            }
            set
            {
                OnVehicleMakeChanging(value);
                ReportPropertyChanging("VehicleMake");
                _VehicleMake = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleMake");
                OnVehicleMakeChanged();
            }
        }
        private global::System.String _VehicleMake;
        partial void OnVehicleMakeChanging(global::System.String value);
        partial void OnVehicleMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleModel
        {
            get
            {
                return _VehicleModel;
            }
            set
            {
                OnVehicleModelChanging(value);
                ReportPropertyChanging("VehicleModel");
                _VehicleModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleModel");
                OnVehicleModelChanged();
            }
        }
        private global::System.String _VehicleModel;
        partial void OnVehicleModelChanging(global::System.String value);
        partial void OnVehicleModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleColor
        {
            get
            {
                return _VehicleColor;
            }
            set
            {
                OnVehicleColorChanging(value);
                ReportPropertyChanging("VehicleColor");
                _VehicleColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleColor");
                OnVehicleColorChanged();
            }
        }
        private global::System.String _VehicleColor;
        partial void OnVehicleColorChanging(global::System.String value);
        partial void OnVehicleColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleLicenseNumber
        {
            get
            {
                return _VehicleLicenseNumber;
            }
            set
            {
                OnVehicleLicenseNumberChanging(value);
                ReportPropertyChanging("VehicleLicenseNumber");
                _VehicleLicenseNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleLicenseNumber");
                OnVehicleLicenseNumberChanged();
            }
        }
        private global::System.String _VehicleLicenseNumber;
        partial void OnVehicleLicenseNumberChanging(global::System.String value);
        partial void OnVehicleLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleState
        {
            get
            {
                return _VehicleState;
            }
            set
            {
                OnVehicleStateChanging(value);
                ReportPropertyChanging("VehicleState");
                _VehicleState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleState");
                OnVehicleStateChanged();
            }
        }
        private global::System.String _VehicleState;
        partial void OnVehicleStateChanging(global::System.String value);
        partial void OnVehicleStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasBeenConvicted
        {
            get
            {
                return _HasBeenConvicted;
            }
            set
            {
                OnHasBeenConvictedChanging(value);
                ReportPropertyChanging("HasBeenConvicted");
                _HasBeenConvicted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasBeenConvicted");
                OnHasBeenConvictedChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasBeenConvicted;
        partial void OnHasBeenConvictedChanging(Nullable<global::System.Boolean> value);
        partial void OnHasBeenConvictedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConvictionExplanation
        {
            get
            {
                return _ConvictionExplanation;
            }
            set
            {
                OnConvictionExplanationChanging(value);
                ReportPropertyChanging("ConvictionExplanation");
                _ConvictionExplanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConvictionExplanation");
                OnConvictionExplanationChanged();
            }
        }
        private global::System.String _ConvictionExplanation;
        partial void OnConvictionExplanationChanging(global::System.String value);
        partial void OnConvictionExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasEverBeenUnlawfulDetainer
        {
            get
            {
                return _HasEverBeenUnlawfulDetainer;
            }
            set
            {
                OnHasEverBeenUnlawfulDetainerChanging(value);
                ReportPropertyChanging("HasEverBeenUnlawfulDetainer");
                _HasEverBeenUnlawfulDetainer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasEverBeenUnlawfulDetainer");
                OnHasEverBeenUnlawfulDetainerChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasEverBeenUnlawfulDetainer;
        partial void OnHasEverBeenUnlawfulDetainerChanging(Nullable<global::System.Boolean> value);
        partial void OnHasEverBeenUnlawfulDetainerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ApplicationInfo_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_ApplicationInfo_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_ApplicationInfo_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_ApplicationInfo_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_ApplicationInfo_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="AuthToken")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthToken : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthToken object.
        /// </summary>
        /// <param name="token">Initial value of the Token property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="requireLogin">Initial value of the RequireLogin property.</param>
        /// <param name="apiKey">Initial value of the ApiKey property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static AuthToken CreateAuthToken(global::System.Guid token, global::System.Guid userId, global::System.Boolean requireLogin, global::System.Guid apiKey, global::System.Boolean isDeleted)
        {
            AuthToken authToken = new AuthToken();
            authToken.Token = token;
            authToken.UserId = userId;
            authToken.RequireLogin = requireLogin;
            authToken.ApiKey = apiKey;
            authToken.IsDeleted = isDeleted;
            return authToken;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Token
        {
            get
            {
                return _Token;
            }
            set
            {
                if (_Token != value)
                {
                    OnTokenChanging(value);
                    ReportPropertyChanging("Token");
                    _Token = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Token");
                    OnTokenChanged();
                }
            }
        }
        private global::System.Guid _Token;
        partial void OnTokenChanging(global::System.Guid value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RequireLogin
        {
            get
            {
                return _RequireLogin;
            }
            set
            {
                OnRequireLoginChanging(value);
                ReportPropertyChanging("RequireLogin");
                _RequireLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequireLogin");
                OnRequireLoginChanged();
            }
        }
        private global::System.Boolean _RequireLogin;
        partial void OnRequireLoginChanging(global::System.Boolean value);
        partial void OnRequireLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApiKey
        {
            get
            {
                return _ApiKey;
            }
            set
            {
                OnApiKeyChanging(value);
                ReportPropertyChanging("ApiKey");
                _ApiKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApiKey");
                OnApiKeyChanged();
            }
        }
        private global::System.Guid _ApiKey;
        partial void OnApiKeyChanging(global::System.Guid value);
        partial void OnApiKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AuthTokens_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_AuthTokens_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_AuthTokens_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_AuthTokens_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_AuthTokens_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building object.
        /// </summary>
        /// <param name="buildingId">Initial value of the BuildingId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="listingRemovedByAdmin">Initial value of the ListingRemovedByAdmin property.</param>
        public static Building CreateBuilding(global::System.Int32 buildingId, global::System.Guid userId, global::System.String addressLine1, global::System.String city, global::System.String state, global::System.String zip, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted, global::System.Boolean listingRemovedByAdmin)
        {
            Building building = new Building();
            building.BuildingId = buildingId;
            building.UserId = userId;
            building.AddressLine1 = addressLine1;
            building.City = city;
            building.State = state;
            building.Zip = zip;
            building.CreateDate = createDate;
            building.CreatedBy = createdBy;
            building.IsDeleted = isDeleted;
            building.ListingRemovedByAdmin = listingRemovedByAdmin;
            return building;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                if (_BuildingId != value)
                {
                    OnBuildingIdChanging(value);
                    ReportPropertyChanging("BuildingId");
                    _BuildingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BuildingId");
                    OnBuildingIdChanged();
                }
            }
        }
        private global::System.Int32 _BuildingId;
        partial void OnBuildingIdChanging(global::System.Int32 value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                OnPropertyInfoIdChanging(value);
                ReportPropertyChanging("PropertyInfoId");
                _PropertyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyInfoId");
                OnPropertyInfoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(Nullable<global::System.Int32> value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.String _Longitude;
        partial void OnLongitudeChanging(global::System.String value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Neighborhood
        {
            get
            {
                return _Neighborhood;
            }
            set
            {
                OnNeighborhoodChanging(value);
                ReportPropertyChanging("Neighborhood");
                _Neighborhood = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Neighborhood");
                OnNeighborhoodChanged();
            }
        }
        private global::System.String _Neighborhood;
        partial void OnNeighborhoodChanging(global::System.String value);
        partial void OnNeighborhoodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PrimaryPhotoId
        {
            get
            {
                return _PrimaryPhotoId;
            }
            set
            {
                OnPrimaryPhotoIdChanging(value);
                ReportPropertyChanging("PrimaryPhotoId");
                _PrimaryPhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryPhotoId");
                OnPrimaryPhotoIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PrimaryPhotoId;
        partial void OnPrimaryPhotoIdChanging(Nullable<global::System.Guid> value);
        partial void OnPrimaryPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ListingRemovedByAdmin
        {
            get
            {
                return _ListingRemovedByAdmin;
            }
            set
            {
                OnListingRemovedByAdminChanging(value);
                ReportPropertyChanging("ListingRemovedByAdmin");
                _ListingRemovedByAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingRemovedByAdmin");
                OnListingRemovedByAdminChanged();
            }
        }
        private global::System.Boolean _ListingRemovedByAdmin;
        partial void OnListingRemovedByAdminChanging(global::System.Boolean value);
        partial void OnListingRemovedByAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryPhotoExtension
        {
            get
            {
                return _PrimaryPhotoExtension;
            }
            set
            {
                OnPrimaryPhotoExtensionChanging(value);
                ReportPropertyChanging("PrimaryPhotoExtension");
                _PrimaryPhotoExtension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrimaryPhotoExtension");
                OnPrimaryPhotoExtensionChanged();
            }
        }
        private global::System.String _PrimaryPhotoExtension;
        partial void OnPrimaryPhotoExtensionChanging(global::System.String value);
        partial void OnPrimaryPhotoExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sid
        {
            get
            {
                return _sid;
            }
            set
            {
                OnsidChanging(value);
                ReportPropertyChanging("sid");
                _sid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sid");
                OnsidChanged();
            }
        }
        private global::System.String _sid;
        partial void OnsidChanging(global::System.String value);
        partial void OnsidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Buildings_PropertyInfos", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Buildings_PropertyInfos", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Buildings_PropertyInfos", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Buildings_PropertyInfos", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Buildings_PropertyInfos", "PropertyInfos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Buildings_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Buildings_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Buildings_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Buildings_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Buildings_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Buildings", "LandlordAlerts")]
        public EntityCollection<LandlordAlert> LandlordAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Buildings", "LandlordAlerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Buildings", "LandlordAlerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Listings_Buildings", "Listings")]
        public EntityCollection<Listing> Listings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("RentlerBackupModel.FK_Listings_Buildings", "Listings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("RentlerBackupModel.FK_Listings_Buildings", "Listings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Photos_Buildings", "Photos")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("RentlerBackupModel.FK_Photos_Buildings", "Photos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("RentlerBackupModel.FK_Photos_Buildings", "Photos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Units_Buildings", "Units")]
        public EntityCollection<Unit> Units
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unit>("RentlerBackupModel.FK_Units_Buildings", "Units");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unit>("RentlerBackupModel.FK_Units_Buildings", "Units", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="contractId">Initial value of the ContractId property.</param>
        /// <param name="baseText">Initial value of the BaseText property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Contract CreateContract(global::System.Int32 contractId, global::System.String baseText, global::System.String state, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Contract contract = new Contract();
            contract.ContractId = contractId;
            contract.BaseText = baseText;
            contract.State = state;
            contract.CreateDate = createDate;
            contract.CreatedBy = createdBy;
            contract.IsDeleted = isDeleted;
            return contract;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractId
        {
            get
            {
                return _ContractId;
            }
            set
            {
                if (_ContractId != value)
                {
                    OnContractIdChanging(value);
                    ReportPropertyChanging("ContractId");
                    _ContractId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractId");
                    OnContractIdChanged();
                }
            }
        }
        private global::System.Int32 _ContractId;
        partial void OnContractIdChanging(global::System.Int32 value);
        partial void OnContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BaseText
        {
            get
            {
                return _BaseText;
            }
            set
            {
                OnBaseTextChanging(value);
                ReportPropertyChanging("BaseText");
                _BaseText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BaseText");
                OnBaseTextChanged();
            }
        }
        private global::System.String _BaseText;
        partial void OnBaseTextChanging(global::System.String value);
        partial void OnBaseTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ContractQuestions_Contracts", "Questions")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("RentlerBackupModel.FK_ContractQuestions_Contracts", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("RentlerBackupModel.FK_ContractQuestions_Contracts", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContracts_Contracts", "UserContracts")]
        public EntityCollection<UserContract> UserContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserContract>("RentlerBackupModel.FK_UserContracts_Contracts", "UserContracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserContract>("RentlerBackupModel.FK_UserContracts_Contracts", "UserContracts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="CustomAmenity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomAmenity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomAmenity object.
        /// </summary>
        /// <param name="amenityId">Initial value of the AmenityId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static CustomAmenity CreateCustomAmenity(global::System.Int32 amenityId, global::System.Int32 propertyInfoId, global::System.String name, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            CustomAmenity customAmenity = new CustomAmenity();
            customAmenity.AmenityId = amenityId;
            customAmenity.PropertyInfoId = propertyInfoId;
            customAmenity.Name = name;
            customAmenity.CreateDate = createDate;
            customAmenity.CreatedBy = createdBy;
            customAmenity.IsDeleted = isDeleted;
            return customAmenity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmenityId
        {
            get
            {
                return _AmenityId;
            }
            set
            {
                if (_AmenityId != value)
                {
                    OnAmenityIdChanging(value);
                    ReportPropertyChanging("AmenityId");
                    _AmenityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmenityId");
                    OnAmenityIdChanged();
                }
            }
        }
        private global::System.Int32 _AmenityId;
        partial void OnAmenityIdChanging(global::System.Int32 value);
        partial void OnAmenityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                OnPropertyInfoIdChanging(value);
                ReportPropertyChanging("PropertyInfoId");
                _PropertyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyInfoId");
                OnPropertyInfoIdChanged();
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_CustomAmenities_PropertyInfos", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_CustomAmenities_PropertyInfos", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_CustomAmenities_PropertyInfos", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_CustomAmenities_PropertyInfos", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_CustomAmenities_PropertyInfos", "PropertyInfos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="EvictionNotice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvictionNotice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvictionNotice object.
        /// </summary>
        /// <param name="evictionNoticeId">Initial value of the EvictionNoticeId property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static EvictionNotice CreateEvictionNotice(global::System.Int32 evictionNoticeId, global::System.String state, global::System.String text, global::System.Boolean isDeleted)
        {
            EvictionNotice evictionNotice = new EvictionNotice();
            evictionNotice.EvictionNoticeId = evictionNoticeId;
            evictionNotice.State = state;
            evictionNotice.Text = text;
            evictionNotice.IsDeleted = isDeleted;
            return evictionNotice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvictionNoticeId
        {
            get
            {
                return _EvictionNoticeId;
            }
            set
            {
                if (_EvictionNoticeId != value)
                {
                    OnEvictionNoticeIdChanging(value);
                    ReportPropertyChanging("EvictionNoticeId");
                    _EvictionNoticeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvictionNoticeId");
                    OnEvictionNoticeIdChanged();
                }
            }
        }
        private global::System.Int32 _EvictionNoticeId;
        partial void OnEvictionNoticeIdChanging(global::System.Int32 value);
        partial void OnEvictionNoticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Floor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Floor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Floor object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Floor CreateFloor(global::System.String name, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Floor floor = new Floor();
            floor.Name = name;
            floor.CreateDate = createDate;
            floor.CreatedBy = createdBy;
            floor.IsDeleted = isDeleted;
            return floor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Rooms_Floors", "Rooms")]
        public EntityCollection<Room> Rooms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Room>("RentlerBackupModel.FK_Rooms_Floors", "Rooms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Room>("RentlerBackupModel.FK_Rooms_Floors", "Rooms", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LandlordAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LandlordAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LandlordAlert object.
        /// </summary>
        /// <param name="alertId">Initial value of the AlertId property.</param>
        /// <param name="landlordId">Initial value of the LandlordId property.</param>
        /// <param name="createDateUtc">Initial value of the CreateDateUtc property.</param>
        /// <param name="isRead">Initial value of the IsRead property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LandlordAlert CreateLandlordAlert(global::System.Int64 alertId, global::System.Guid landlordId, global::System.DateTime createDateUtc, global::System.Boolean isRead, global::System.Boolean isDeleted)
        {
            LandlordAlert landlordAlert = new LandlordAlert();
            landlordAlert.AlertId = alertId;
            landlordAlert.LandlordId = landlordId;
            landlordAlert.CreateDateUtc = createDateUtc;
            landlordAlert.IsRead = isRead;
            landlordAlert.IsDeleted = isDeleted;
            return landlordAlert;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                if (_AlertId != value)
                {
                    OnAlertIdChanging(value);
                    ReportPropertyChanging("AlertId");
                    _AlertId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertId");
                    OnAlertIdChanged();
                }
            }
        }
        private global::System.Int64 _AlertId;
        partial void OnAlertIdChanging(global::System.Int64 value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LandlordId
        {
            get
            {
                return _LandlordId;
            }
            set
            {
                OnLandlordIdChanging(value);
                ReportPropertyChanging("LandlordId");
                _LandlordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandlordId");
                OnLandlordIdChanged();
            }
        }
        private global::System.Guid _LandlordId;
        partial void OnLandlordIdChanging(global::System.Guid value);
        partial void OnLandlordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                OnBuildingIdChanging(value);
                ReportPropertyChanging("BuildingId");
                _BuildingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingId");
                OnBuildingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BuildingId;
        partial void OnBuildingIdChanging(Nullable<global::System.Int32> value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                OnUnitIdChanging(value);
                ReportPropertyChanging("UnitId");
                _UnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitId");
                OnUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitId;
        partial void OnUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDateUtc
        {
            get
            {
                return _CreateDateUtc;
            }
            set
            {
                OnCreateDateUtcChanging(value);
                ReportPropertyChanging("CreateDateUtc");
                _CreateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDateUtc");
                OnCreateDateUtcChanged();
            }
        }
        private global::System.DateTime _CreateDateUtc;
        partial void OnCreateDateUtcChanging(global::System.DateTime value);
        partial void OnCreateDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private global::System.Boolean _IsRead;
        partial void OnIsReadChanging(global::System.Boolean value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Buildings", "Buildings")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_LandlordAlerts_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_LandlordAlerts_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_LandlordAlerts_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("RentlerBackupModel.FK_LandlordAlerts_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Units", "Units")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("RentlerBackupModel.FK_LandlordAlerts_Units", "Units").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("RentlerBackupModel.FK_LandlordAlerts_Units", "Units").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("RentlerBackupModel.FK_LandlordAlerts_Units", "Units");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("RentlerBackupModel.FK_LandlordAlerts_Units", "Units", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_LandlordAlerts_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LandlordInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LandlordInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LandlordInfo object.
        /// </summary>
        /// <param name="landlordInfoId">Initial value of the LandlordInfoId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="allowPhone">Initial value of the AllowPhone property.</param>
        /// <param name="allowEmail">Initial value of the AllowEmail property.</param>
        /// <param name="backgroundCreditStatus">Initial value of the BackgroundCreditStatus property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LandlordInfo CreateLandlordInfo(global::System.Int64 landlordInfoId, global::System.Guid userId, global::System.Boolean allowPhone, global::System.Boolean allowEmail, global::System.String backgroundCreditStatus, global::System.Boolean isDeleted)
        {
            LandlordInfo landlordInfo = new LandlordInfo();
            landlordInfo.LandlordInfoId = landlordInfoId;
            landlordInfo.UserId = userId;
            landlordInfo.AllowPhone = allowPhone;
            landlordInfo.AllowEmail = allowEmail;
            landlordInfo.BackgroundCreditStatus = backgroundCreditStatus;
            landlordInfo.IsDeleted = isDeleted;
            return landlordInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LandlordInfoId
        {
            get
            {
                return _LandlordInfoId;
            }
            set
            {
                if (_LandlordInfoId != value)
                {
                    OnLandlordInfoIdChanging(value);
                    ReportPropertyChanging("LandlordInfoId");
                    _LandlordInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LandlordInfoId");
                    OnLandlordInfoIdChanged();
                }
            }
        }
        private global::System.Int64 _LandlordInfoId;
        partial void OnLandlordInfoIdChanging(global::System.Int64 value);
        partial void OnLandlordInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowPhone
        {
            get
            {
                return _AllowPhone;
            }
            set
            {
                OnAllowPhoneChanging(value);
                ReportPropertyChanging("AllowPhone");
                _AllowPhone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowPhone");
                OnAllowPhoneChanged();
            }
        }
        private global::System.Boolean _AllowPhone;
        partial void OnAllowPhoneChanging(global::System.Boolean value);
        partial void OnAllowPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowEmail
        {
            get
            {
                return _AllowEmail;
            }
            set
            {
                OnAllowEmailChanging(value);
                ReportPropertyChanging("AllowEmail");
                _AllowEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowEmail");
                OnAllowEmailChanged();
            }
        }
        private global::System.Boolean _AllowEmail;
        partial void OnAllowEmailChanging(global::System.Boolean value);
        partial void OnAllowEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundCreditStatus
        {
            get
            {
                return _BackgroundCreditStatus;
            }
            set
            {
                OnBackgroundCreditStatusChanging(value);
                ReportPropertyChanging("BackgroundCreditStatus");
                _BackgroundCreditStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundCreditStatus");
                OnBackgroundCreditStatusChanged();
            }
        }
        private global::System.String _BackgroundCreditStatus;
        partial void OnBackgroundCreditStatusChanging(global::System.String value);
        partial void OnBackgroundCreditStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DigitalSignature
        {
            get
            {
                return _DigitalSignature;
            }
            set
            {
                OnDigitalSignatureChanging(value);
                ReportPropertyChanging("DigitalSignature");
                _DigitalSignature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DigitalSignature");
                OnDigitalSignatureChanged();
            }
        }
        private global::System.String _DigitalSignature;
        partial void OnDigitalSignatureChanging(global::System.String value);
        partial void OnDigitalSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DigitalSignatureDateUtc
        {
            get
            {
                return _DigitalSignatureDateUtc;
            }
            set
            {
                OnDigitalSignatureDateUtcChanging(value);
                ReportPropertyChanging("DigitalSignatureDateUtc");
                _DigitalSignatureDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DigitalSignatureDateUtc");
                OnDigitalSignatureDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _DigitalSignatureDateUtc;
        partial void OnDigitalSignatureDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnDigitalSignatureDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackgroundCreditContract
        {
            get
            {
                return _BackgroundCreditContract;
            }
            set
            {
                OnBackgroundCreditContractChanging(value);
                ReportPropertyChanging("BackgroundCreditContract");
                _BackgroundCreditContract = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackgroundCreditContract");
                OnBackgroundCreditContractChanged();
            }
        }
        private global::System.String _BackgroundCreditContract;
        partial void OnBackgroundCreditContractChanging(global::System.String value);
        partial void OnBackgroundCreditContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackgroundCreditUsername
        {
            get
            {
                return _BackgroundCreditUsername;
            }
            set
            {
                OnBackgroundCreditUsernameChanging(value);
                ReportPropertyChanging("BackgroundCreditUsername");
                _BackgroundCreditUsername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackgroundCreditUsername");
                OnBackgroundCreditUsernameChanged();
            }
        }
        private global::System.String _BackgroundCreditUsername;
        partial void OnBackgroundCreditUsernameChanging(global::System.String value);
        partial void OnBackgroundCreditUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackgroundCreditPassword
        {
            get
            {
                return _BackgroundCreditPassword;
            }
            set
            {
                OnBackgroundCreditPasswordChanging(value);
                ReportPropertyChanging("BackgroundCreditPassword");
                _BackgroundCreditPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackgroundCreditPassword");
                OnBackgroundCreditPasswordChanged();
            }
        }
        private global::System.String _BackgroundCreditPassword;
        partial void OnBackgroundCreditPasswordChanging(global::System.String value);
        partial void OnBackgroundCreditPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ReadAppendicies
        {
            get
            {
                return _ReadAppendicies;
            }
            set
            {
                OnReadAppendiciesChanging(value);
                ReportPropertyChanging("ReadAppendicies");
                _ReadAppendicies = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadAppendicies");
                OnReadAppendiciesChanged();
            }
        }
        private Nullable<global::System.Boolean> _ReadAppendicies;
        partial void OnReadAppendiciesChanging(Nullable<global::System.Boolean> value);
        partial void OnReadAppendiciesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReadAppendiciesDateUtc
        {
            get
            {
                return _ReadAppendiciesDateUtc;
            }
            set
            {
                OnReadAppendiciesDateUtcChanging(value);
                ReportPropertyChanging("ReadAppendiciesDateUtc");
                _ReadAppendiciesDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadAppendiciesDateUtc");
                OnReadAppendiciesDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReadAppendiciesDateUtc;
        partial void OnReadAppendiciesDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnReadAppendiciesDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordInfo_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordInfo_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordInfo_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_LandlordInfo_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_LandlordInfo_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Leas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Leas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Leas object.
        /// </summary>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="paymentDay">Initial value of the PaymentDay property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="lateFee">Initial value of the LateFee property.</param>
        /// <param name="securityDeposit">Initial value of the SecurityDeposit property.</param>
        /// <param name="petRent">Initial value of the PetRent property.</param>
        /// <param name="petDeposit">Initial value of the PetDeposit property.</param>
        /// <param name="cleaningDeposit">Initial value of the CleaningDeposit property.</param>
        /// <param name="achEnabled">Initial value of the AchEnabled property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="gracePeriod">Initial value of the GracePeriod property.</param>
        /// <param name="continuesMonthly">Initial value of the ContinuesMonthly property.</param>
        public static Leas CreateLeas(global::System.Int32 leaseId, global::System.Int32 propertyInfoId, global::System.String firstName, global::System.String lastName, global::System.DateTime startDate, global::System.Boolean isActive, global::System.Int32 paymentDay, global::System.Decimal amount, global::System.Decimal lateFee, global::System.Decimal securityDeposit, global::System.Decimal petRent, global::System.Decimal petDeposit, global::System.Decimal cleaningDeposit, global::System.Boolean achEnabled, global::System.Boolean isDeleted, global::System.DateTime createDate, global::System.String createdBy, global::System.Int32 duration, global::System.Int32 gracePeriod, global::System.Boolean continuesMonthly)
        {
            Leas leas = new Leas();
            leas.LeaseId = leaseId;
            leas.PropertyInfoId = propertyInfoId;
            leas.FirstName = firstName;
            leas.LastName = lastName;
            leas.StartDate = startDate;
            leas.IsActive = isActive;
            leas.PaymentDay = paymentDay;
            leas.Amount = amount;
            leas.LateFee = lateFee;
            leas.SecurityDeposit = securityDeposit;
            leas.PetRent = petRent;
            leas.PetDeposit = petDeposit;
            leas.CleaningDeposit = cleaningDeposit;
            leas.AchEnabled = achEnabled;
            leas.IsDeleted = isDeleted;
            leas.CreateDate = createDate;
            leas.CreatedBy = createdBy;
            leas.Duration = duration;
            leas.GracePeriod = gracePeriod;
            leas.ContinuesMonthly = continuesMonthly;
            return leas;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                if (_LeaseId != value)
                {
                    OnLeaseIdChanging(value);
                    ReportPropertyChanging("LeaseId");
                    _LeaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaseId");
                    OnLeaseIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                OnPropertyInfoIdChanging(value);
                ReportPropertyChanging("PropertyInfoId");
                _PropertyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyInfoId");
                OnPropertyInfoIdChanged();
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentDay
        {
            get
            {
                return _PaymentDay;
            }
            set
            {
                OnPaymentDayChanging(value);
                ReportPropertyChanging("PaymentDay");
                _PaymentDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDay");
                OnPaymentDayChanged();
            }
        }
        private global::System.Int32 _PaymentDay;
        partial void OnPaymentDayChanging(global::System.Int32 value);
        partial void OnPaymentDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LateFee
        {
            get
            {
                return _LateFee;
            }
            set
            {
                OnLateFeeChanging(value);
                ReportPropertyChanging("LateFee");
                _LateFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LateFee");
                OnLateFeeChanged();
            }
        }
        private global::System.Decimal _LateFee;
        partial void OnLateFeeChanging(global::System.Decimal value);
        partial void OnLateFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SecurityDeposit
        {
            get
            {
                return _SecurityDeposit;
            }
            set
            {
                OnSecurityDepositChanging(value);
                ReportPropertyChanging("SecurityDeposit");
                _SecurityDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityDeposit");
                OnSecurityDepositChanged();
            }
        }
        private global::System.Decimal _SecurityDeposit;
        partial void OnSecurityDepositChanging(global::System.Decimal value);
        partial void OnSecurityDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PetRent
        {
            get
            {
                return _PetRent;
            }
            set
            {
                OnPetRentChanging(value);
                ReportPropertyChanging("PetRent");
                _PetRent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PetRent");
                OnPetRentChanged();
            }
        }
        private global::System.Decimal _PetRent;
        partial void OnPetRentChanging(global::System.Decimal value);
        partial void OnPetRentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PetDeposit
        {
            get
            {
                return _PetDeposit;
            }
            set
            {
                OnPetDepositChanging(value);
                ReportPropertyChanging("PetDeposit");
                _PetDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PetDeposit");
                OnPetDepositChanged();
            }
        }
        private global::System.Decimal _PetDeposit;
        partial void OnPetDepositChanging(global::System.Decimal value);
        partial void OnPetDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CleaningDeposit
        {
            get
            {
                return _CleaningDeposit;
            }
            set
            {
                OnCleaningDepositChanging(value);
                ReportPropertyChanging("CleaningDeposit");
                _CleaningDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CleaningDeposit");
                OnCleaningDepositChanged();
            }
        }
        private global::System.Decimal _CleaningDeposit;
        partial void OnCleaningDepositChanging(global::System.Decimal value);
        partial void OnCleaningDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AchEnabled
        {
            get
            {
                return _AchEnabled;
            }
            set
            {
                OnAchEnabledChanging(value);
                ReportPropertyChanging("AchEnabled");
                _AchEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchEnabled");
                OnAchEnabledChanged();
            }
        }
        private global::System.Boolean _AchEnabled;
        partial void OnAchEnabledChanging(global::System.Boolean value);
        partial void OnAchEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TenantBankId
        {
            get
            {
                return _TenantBankId;
            }
            set
            {
                OnTenantBankIdChanging(value);
                ReportPropertyChanging("TenantBankId");
                _TenantBankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TenantBankId");
                OnTenantBankIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TenantBankId;
        partial void OnTenantBankIdChanging(Nullable<global::System.Int32> value);
        partial void OnTenantBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LandlordBankId
        {
            get
            {
                return _LandlordBankId;
            }
            set
            {
                OnLandlordBankIdChanging(value);
                ReportPropertyChanging("LandlordBankId");
                _LandlordBankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandlordBankId");
                OnLandlordBankIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LandlordBankId;
        partial void OnLandlordBankIdChanging(Nullable<global::System.Int32> value);
        partial void OnLandlordBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GracePeriod
        {
            get
            {
                return _GracePeriod;
            }
            set
            {
                OnGracePeriodChanging(value);
                ReportPropertyChanging("GracePeriod");
                _GracePeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GracePeriod");
                OnGracePeriodChanged();
            }
        }
        private global::System.Int32 _GracePeriod;
        partial void OnGracePeriodChanging(global::System.Int32 value);
        partial void OnGracePeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ContinuesMonthly
        {
            get
            {
                return _ContinuesMonthly;
            }
            set
            {
                OnContinuesMonthlyChanging(value);
                ReportPropertyChanging("ContinuesMonthly");
                _ContinuesMonthly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContinuesMonthly");
                OnContinuesMonthlyChanged();
            }
        }
        private global::System.Boolean _ContinuesMonthly;
        partial void OnContinuesMonthlyChanging(global::System.Boolean value);
        partial void OnContinuesMonthlyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseContracts_Leases", "LeaseContracts")]
        public EntityCollection<LeaseContract> LeaseContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeaseContract>("RentlerBackupModel.FK_LeaseContracts_Leases", "LeaseContracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeaseContract>("RentlerBackupModel.FK_LeaseContracts_Leases", "LeaseContracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeasePaymentItems_Leases", "LeasePaymentItems")]
        public EntityCollection<LeasePaymentItem> LeasePaymentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasePaymentItem>("RentlerBackupModel.FK_LeasePaymentItems_Leases", "LeasePaymentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasePaymentItem>("RentlerBackupModel.FK_LeasePaymentItems_Leases", "LeasePaymentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_PropertyInfos", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Leases_PropertyInfos", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Leases_PropertyInfos", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Leases_PropertyInfos", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Leases_PropertyInfos", "PropertyInfos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_UserBanks", "UserBanks")]
        public UserBank UserBank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks", "UserBanks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks", "UserBanks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserBank> UserBankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks", "UserBanks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks", "UserBanks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_UserBanks1", "UserBanks")]
        public UserBank UserBank1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks1", "UserBanks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks1", "UserBanks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserBank> UserBank1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks1", "UserBanks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserBank>("RentlerBackupModel.FK_Leases_UserBanks1", "UserBanks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Leases_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Leases_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Leases_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Leases_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseTenants_Leases", "LeaseTenants")]
        public EntityCollection<LeaseTenant> LeaseTenants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeaseTenant>("RentlerBackupModel.FK_LeaseTenants_Leases", "LeaseTenants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeaseTenant>("RentlerBackupModel.FK_LeaseTenants_Leases", "LeaseTenants", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseTransactions_Leases", "LeaseTransactions")]
        public EntityCollection<LeaseTransaction> LeaseTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeaseTransaction>("RentlerBackupModel.FK_LeaseTransactions_Leases", "LeaseTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeaseTransaction>("RentlerBackupModel.FK_LeaseTransactions_Leases", "LeaseTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LeaseContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseContract object.
        /// </summary>
        /// <param name="leaseContractId">Initial value of the LeaseContractId property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="postDateUtc">Initial value of the PostDateUtc property.</param>
        /// <param name="finalText">Initial value of the FinalText property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LeaseContract CreateLeaseContract(global::System.Int32 leaseContractId, global::System.Int32 leaseId, global::System.DateTime postDateUtc, global::System.String finalText, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            LeaseContract leaseContract = new LeaseContract();
            leaseContract.LeaseContractId = leaseContractId;
            leaseContract.LeaseId = leaseId;
            leaseContract.PostDateUtc = postDateUtc;
            leaseContract.FinalText = finalText;
            leaseContract.CreateDate = createDate;
            leaseContract.CreatedBy = createdBy;
            leaseContract.IsDeleted = isDeleted;
            return leaseContract;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseContractId
        {
            get
            {
                return _LeaseContractId;
            }
            set
            {
                if (_LeaseContractId != value)
                {
                    OnLeaseContractIdChanging(value);
                    ReportPropertyChanging("LeaseContractId");
                    _LeaseContractId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaseContractId");
                    OnLeaseContractIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseContractId;
        partial void OnLeaseContractIdChanging(global::System.Int32 value);
        partial void OnLeaseContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDateUtc
        {
            get
            {
                return _PostDateUtc;
            }
            set
            {
                OnPostDateUtcChanging(value);
                ReportPropertyChanging("PostDateUtc");
                _PostDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDateUtc");
                OnPostDateUtcChanged();
            }
        }
        private global::System.DateTime _PostDateUtc;
        partial void OnPostDateUtcChanging(global::System.DateTime value);
        partial void OnPostDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FinalText
        {
            get
            {
                return _FinalText;
            }
            set
            {
                OnFinalTextChanging(value);
                ReportPropertyChanging("FinalText");
                _FinalText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FinalText");
                OnFinalTextChanged();
            }
        }
        private global::System.String _FinalText;
        partial void OnFinalTextChanging(global::System.String value);
        partial void OnFinalTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseContracts_Leases", "Leases")]
        public Leas Leas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseContracts_Leases", "Leases").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseContracts_Leases", "Leases").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Leas> LeasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseContracts_Leases", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Leas>("RentlerBackupModel.FK_LeaseContracts_Leases", "Leases", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LeasePaymentItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeasePaymentItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeasePaymentItem object.
        /// </summary>
        /// <param name="leasePaymentItemId">Initial value of the LeasePaymentItemId property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="dueDateUtc">Initial value of the DueDateUtc property.</param>
        /// <param name="rent">Initial value of the Rent property.</param>
        /// <param name="lateFee">Initial value of the LateFee property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="totalDue">Initial value of the TotalDue property.</param>
        public static LeasePaymentItem CreateLeasePaymentItem(global::System.Int32 leasePaymentItemId, global::System.Int32 leaseId, global::System.DateTime dueDateUtc, global::System.Decimal rent, global::System.Decimal lateFee, global::System.Boolean isDeleted, global::System.Decimal totalDue)
        {
            LeasePaymentItem leasePaymentItem = new LeasePaymentItem();
            leasePaymentItem.LeasePaymentItemId = leasePaymentItemId;
            leasePaymentItem.LeaseId = leaseId;
            leasePaymentItem.DueDateUtc = dueDateUtc;
            leasePaymentItem.Rent = rent;
            leasePaymentItem.LateFee = lateFee;
            leasePaymentItem.IsDeleted = isDeleted;
            leasePaymentItem.TotalDue = totalDue;
            return leasePaymentItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeasePaymentItemId
        {
            get
            {
                return _LeasePaymentItemId;
            }
            set
            {
                if (_LeasePaymentItemId != value)
                {
                    OnLeasePaymentItemIdChanging(value);
                    ReportPropertyChanging("LeasePaymentItemId");
                    _LeasePaymentItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeasePaymentItemId");
                    OnLeasePaymentItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LeasePaymentItemId;
        partial void OnLeasePaymentItemIdChanging(global::System.Int32 value);
        partial void OnLeasePaymentItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDateUtc
        {
            get
            {
                return _DueDateUtc;
            }
            set
            {
                OnDueDateUtcChanging(value);
                ReportPropertyChanging("DueDateUtc");
                _DueDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDateUtc");
                OnDueDateUtcChanged();
            }
        }
        private global::System.DateTime _DueDateUtc;
        partial void OnDueDateUtcChanging(global::System.DateTime value);
        partial void OnDueDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rent
        {
            get
            {
                return _Rent;
            }
            set
            {
                OnRentChanging(value);
                ReportPropertyChanging("Rent");
                _Rent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rent");
                OnRentChanged();
            }
        }
        private global::System.Decimal _Rent;
        partial void OnRentChanging(global::System.Decimal value);
        partial void OnRentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PayDateUtc
        {
            get
            {
                return _PayDateUtc;
            }
            set
            {
                OnPayDateUtcChanging(value);
                ReportPropertyChanging("PayDateUtc");
                _PayDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayDateUtc");
                OnPayDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _PayDateUtc;
        partial void OnPayDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnPayDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LateFee
        {
            get
            {
                return _LateFee;
            }
            set
            {
                OnLateFeeChanging(value);
                ReportPropertyChanging("LateFee");
                _LateFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LateFee");
                OnLateFeeChanged();
            }
        }
        private global::System.Decimal _LateFee;
        partial void OnLateFeeChanging(global::System.Decimal value);
        partial void OnLateFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalDue
        {
            get
            {
                return _TotalDue;
            }
            set
            {
                OnTotalDueChanging(value);
                ReportPropertyChanging("TotalDue");
                _TotalDue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalDue");
                OnTotalDueChanged();
            }
        }
        private global::System.Decimal _TotalDue;
        partial void OnTotalDueChanging(global::System.Decimal value);
        partial void OnTotalDueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeasePaymentItems_Leases", "Leases")]
        public Leas Leas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeasePaymentItems_Leases", "Leases").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeasePaymentItems_Leases", "Leases").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Leas> LeasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeasePaymentItems_Leases", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Leas>("RentlerBackupModel.FK_LeasePaymentItems_Leases", "Leases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentPropertyTransactions")]
        public EntityCollection<LeasePaymentPropertyTransaction> LeasePaymentPropertyTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasePaymentPropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentPropertyTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasePaymentPropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentPropertyTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LeasePaymentPropertyTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeasePaymentPropertyTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeasePaymentPropertyTransaction object.
        /// </summary>
        /// <param name="leasePaymentItemPropertyTransactionId">Initial value of the LeasePaymentItemPropertyTransactionId property.</param>
        /// <param name="leasePaymentItemId">Initial value of the LeasePaymentItemId property.</param>
        /// <param name="propertyTransactionId">Initial value of the PropertyTransactionId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LeasePaymentPropertyTransaction CreateLeasePaymentPropertyTransaction(global::System.Int32 leasePaymentItemPropertyTransactionId, global::System.Int32 leasePaymentItemId, global::System.Int32 propertyTransactionId, global::System.Boolean isDeleted)
        {
            LeasePaymentPropertyTransaction leasePaymentPropertyTransaction = new LeasePaymentPropertyTransaction();
            leasePaymentPropertyTransaction.LeasePaymentItemPropertyTransactionId = leasePaymentItemPropertyTransactionId;
            leasePaymentPropertyTransaction.LeasePaymentItemId = leasePaymentItemId;
            leasePaymentPropertyTransaction.PropertyTransactionId = propertyTransactionId;
            leasePaymentPropertyTransaction.IsDeleted = isDeleted;
            return leasePaymentPropertyTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeasePaymentItemPropertyTransactionId
        {
            get
            {
                return _LeasePaymentItemPropertyTransactionId;
            }
            set
            {
                if (_LeasePaymentItemPropertyTransactionId != value)
                {
                    OnLeasePaymentItemPropertyTransactionIdChanging(value);
                    ReportPropertyChanging("LeasePaymentItemPropertyTransactionId");
                    _LeasePaymentItemPropertyTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeasePaymentItemPropertyTransactionId");
                    OnLeasePaymentItemPropertyTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _LeasePaymentItemPropertyTransactionId;
        partial void OnLeasePaymentItemPropertyTransactionIdChanging(global::System.Int32 value);
        partial void OnLeasePaymentItemPropertyTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeasePaymentItemId
        {
            get
            {
                return _LeasePaymentItemId;
            }
            set
            {
                OnLeasePaymentItemIdChanging(value);
                ReportPropertyChanging("LeasePaymentItemId");
                _LeasePaymentItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeasePaymentItemId");
                OnLeasePaymentItemIdChanged();
            }
        }
        private global::System.Int32 _LeasePaymentItemId;
        partial void OnLeasePaymentItemIdChanging(global::System.Int32 value);
        partial void OnLeasePaymentItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTransactionId
        {
            get
            {
                return _PropertyTransactionId;
            }
            set
            {
                OnPropertyTransactionIdChanging(value);
                ReportPropertyChanging("PropertyTransactionId");
                _PropertyTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyTransactionId");
                OnPropertyTransactionIdChanged();
            }
        }
        private global::System.Int32 _PropertyTransactionId;
        partial void OnPropertyTransactionIdChanging(global::System.Int32 value);
        partial void OnPropertyTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentItems")]
        public LeasePaymentItem LeasePaymentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeasePaymentItem>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeasePaymentItem>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeasePaymentItem> LeasePaymentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeasePaymentItem>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeasePaymentItem>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_LeasePaymentItems", "LeasePaymentItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeasePaymentPropertyTransactions_PropertyTransactions", "PropertyTransactions")]
        public PropertyTransaction PropertyTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_PropertyTransactions", "PropertyTransactions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_PropertyTransactions", "PropertyTransactions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyTransaction> PropertyTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_PropertyTransactions", "PropertyTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_PropertyTransactions", "PropertyTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LeaseTenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTenant object.
        /// </summary>
        /// <param name="leaseTenantId">Initial value of the LeaseTenantId property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="tenantName">Initial value of the TenantName property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LeaseTenant CreateLeaseTenant(global::System.Int32 leaseTenantId, global::System.Int32 leaseId, global::System.String tenantName, global::System.Boolean isDeleted)
        {
            LeaseTenant leaseTenant = new LeaseTenant();
            leaseTenant.LeaseTenantId = leaseTenantId;
            leaseTenant.LeaseId = leaseId;
            leaseTenant.TenantName = tenantName;
            leaseTenant.IsDeleted = isDeleted;
            return leaseTenant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTenantId
        {
            get
            {
                return _LeaseTenantId;
            }
            set
            {
                if (_LeaseTenantId != value)
                {
                    OnLeaseTenantIdChanging(value);
                    ReportPropertyChanging("LeaseTenantId");
                    _LeaseTenantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaseTenantId");
                    OnLeaseTenantIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseTenantId;
        partial void OnLeaseTenantIdChanging(global::System.Int32 value);
        partial void OnLeaseTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TenantName
        {
            get
            {
                return _TenantName;
            }
            set
            {
                OnTenantNameChanging(value);
                ReportPropertyChanging("TenantName");
                _TenantName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TenantName");
                OnTenantNameChanged();
            }
        }
        private global::System.String _TenantName;
        partial void OnTenantNameChanging(global::System.String value);
        partial void OnTenantNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseTenants_Leases", "Leases")]
        public Leas Leas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTenants_Leases", "Leases").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTenants_Leases", "Leases").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Leas> LeasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTenants_Leases", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTenants_Leases", "Leases", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LeaseTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTransaction object.
        /// </summary>
        /// <param name="leaseTransactionId">Initial value of the LeaseTransactionId property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LeaseTransaction CreateLeaseTransaction(global::System.Int64 leaseTransactionId, global::System.Int32 leaseId, global::System.DateTime dueDate, global::System.Decimal amount, global::System.String status, global::System.DateTime createDate, global::System.Boolean isDeleted)
        {
            LeaseTransaction leaseTransaction = new LeaseTransaction();
            leaseTransaction.LeaseTransactionId = leaseTransactionId;
            leaseTransaction.LeaseId = leaseId;
            leaseTransaction.DueDate = dueDate;
            leaseTransaction.Amount = amount;
            leaseTransaction.Status = status;
            leaseTransaction.CreateDate = createDate;
            leaseTransaction.IsDeleted = isDeleted;
            return leaseTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeaseTransactionId
        {
            get
            {
                return _LeaseTransactionId;
            }
            set
            {
                if (_LeaseTransactionId != value)
                {
                    OnLeaseTransactionIdChanging(value);
                    ReportPropertyChanging("LeaseTransactionId");
                    _LeaseTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaseTransactionId");
                    OnLeaseTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _LeaseTransactionId;
        partial void OnLeaseTransactionIdChanging(global::System.Int64 value);
        partial void OnLeaseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnDueDateChanging(global::System.DateTime value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResultDate
        {
            get
            {
                return _ResultDate;
            }
            set
            {
                OnResultDateChanging(value);
                ReportPropertyChanging("ResultDate");
                _ResultDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultDate");
                OnResultDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResultDate;
        partial void OnResultDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResultDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AchFromTenantTransactions_LeaseTransactions", "AchFromTenantTransactions")]
        public EntityCollection<AchFromTenantTransaction> AchFromTenantTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchFromTenantTransaction>("RentlerBackupModel.FK_AchFromTenantTransactions_LeaseTransactions", "AchFromTenantTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchFromTenantTransaction>("RentlerBackupModel.FK_AchFromTenantTransactions_LeaseTransactions", "AchFromTenantTransactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseTransactions_Leases", "Leases")]
        public Leas Leas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTransactions_Leases", "Leases").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTransactions_Leases", "Leases").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Leas> LeasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTransactions_Leases", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Leas>("RentlerBackupModel.FK_LeaseTransactions_Leases", "Leases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactionCredits")]
        public EntityCollection<LeaseTransactionCredit> LeaseTransactionCredits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeaseTransactionCredit>("RentlerBackupModel.FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactionCredits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeaseTransactionCredit>("RentlerBackupModel.FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactionCredits", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="LeaseTransactionCredit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTransactionCredit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTransactionCredit object.
        /// </summary>
        /// <param name="leaseTransactionCreditId">Initial value of the LeaseTransactionCreditId property.</param>
        /// <param name="leaseTransactionId">Initial value of the LeaseTransactionId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static LeaseTransactionCredit CreateLeaseTransactionCredit(global::System.Int64 leaseTransactionCreditId, global::System.Int64 leaseTransactionId, global::System.Decimal amount, global::System.DateTime createDate, global::System.Boolean isDeleted)
        {
            LeaseTransactionCredit leaseTransactionCredit = new LeaseTransactionCredit();
            leaseTransactionCredit.LeaseTransactionCreditId = leaseTransactionCreditId;
            leaseTransactionCredit.LeaseTransactionId = leaseTransactionId;
            leaseTransactionCredit.Amount = amount;
            leaseTransactionCredit.CreateDate = createDate;
            leaseTransactionCredit.IsDeleted = isDeleted;
            return leaseTransactionCredit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeaseTransactionCreditId
        {
            get
            {
                return _LeaseTransactionCreditId;
            }
            set
            {
                if (_LeaseTransactionCreditId != value)
                {
                    OnLeaseTransactionCreditIdChanging(value);
                    ReportPropertyChanging("LeaseTransactionCreditId");
                    _LeaseTransactionCreditId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaseTransactionCreditId");
                    OnLeaseTransactionCreditIdChanged();
                }
            }
        }
        private global::System.Int64 _LeaseTransactionCreditId;
        partial void OnLeaseTransactionCreditIdChanging(global::System.Int64 value);
        partial void OnLeaseTransactionCreditIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeaseTransactionId
        {
            get
            {
                return _LeaseTransactionId;
            }
            set
            {
                OnLeaseTransactionIdChanging(value);
                ReportPropertyChanging("LeaseTransactionId");
                _LeaseTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseTransactionId");
                OnLeaseTransactionIdChanged();
            }
        }
        private global::System.Int64 _LeaseTransactionId;
        partial void OnLeaseTransactionIdChanging(global::System.Int64 value);
        partial void OnLeaseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactions")]
        public LeaseTransaction LeaseTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTransaction> LeaseTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTransaction>("RentlerBackupModel.FK_LeaseTransactionCredits_LeaseTransactions", "LeaseTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Listing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Listing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Listing object.
        /// </summary>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="buildingId">Initial value of the BuildingId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateListedUtc">Initial value of the DateListedUtc property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Listing CreateListing(global::System.Int32 listingId, global::System.Int32 buildingId, global::System.Boolean isActive, global::System.String description, global::System.DateTime dateListedUtc, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Listing listing = new Listing();
            listing.ListingId = listingId;
            listing.BuildingId = buildingId;
            listing.IsActive = isActive;
            listing.Description = description;
            listing.DateListedUtc = dateListedUtc;
            listing.CreateDate = createDate;
            listing.CreatedBy = createdBy;
            listing.IsDeleted = isDeleted;
            return listing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                if (_ListingId != value)
                {
                    OnListingIdChanging(value);
                    ReportPropertyChanging("ListingId");
                    _ListingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingId");
                    OnListingIdChanged();
                }
            }
        }
        private global::System.Int32 _ListingId;
        partial void OnListingIdChanging(global::System.Int32 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                OnBuildingIdChanging(value);
                ReportPropertyChanging("BuildingId");
                _BuildingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingId");
                OnBuildingIdChanged();
            }
        }
        private global::System.Int32 _BuildingId;
        partial void OnBuildingIdChanging(global::System.Int32 value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateListedUtc
        {
            get
            {
                return _DateListedUtc;
            }
            set
            {
                OnDateListedUtcChanging(value);
                ReportPropertyChanging("DateListedUtc");
                _DateListedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateListedUtc");
                OnDateListedUtcChanged();
            }
        }
        private global::System.DateTime _DateListedUtc;
        partial void OnDateListedUtcChanging(global::System.DateTime value);
        partial void OnDateListedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateActivated
        {
            get
            {
                return _DateActivated;
            }
            set
            {
                OnDateActivatedChanging(value);
                ReportPropertyChanging("DateActivated");
                _DateActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateActivated");
                OnDateActivatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateActivated;
        partial void OnDateActivatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateActivatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Listings_Buildings", "Buildings")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Listings_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Listings_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Listings_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("RentlerBackupModel.FK_Listings_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ListingCounts_Listings", "ListingCounts")]
        public ListingCount ListingCount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCount>("RentlerBackupModel.FK_ListingCounts_Listings", "ListingCounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCount>("RentlerBackupModel.FK_ListingCounts_Listings", "ListingCounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingCount> ListingCountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCount>("RentlerBackupModel.FK_ListingCounts_Listings", "ListingCounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingCount>("RentlerBackupModel.FK_ListingCounts_Listings", "ListingCounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Messages_Listings", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("RentlerBackupModel.FK_Messages_Listings", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("RentlerBackupModel.FK_Messages_Listings", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ReportedListings_Listings", "ReportedListings")]
        public EntityCollection<ReportedListing> ReportedListings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportedListing>("RentlerBackupModel.FK_ReportedListings_Listings", "ReportedListings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportedListing>("RentlerBackupModel.FK_ReportedListings_Listings", "ReportedListings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SavedListings_Listings", "SavedListings")]
        public EntityCollection<SavedListing> SavedListings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SavedListing>("RentlerBackupModel.FK_SavedListings_Listings", "SavedListings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SavedListing>("RentlerBackupModel.FK_SavedListings_Listings", "SavedListings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserInterests_Listings", "UserInterests")]
        public EntityCollection<UserInterest> UserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("RentlerBackupModel.FK_UserInterests_Listings", "UserInterests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("RentlerBackupModel.FK_UserInterests_Listings", "UserInterests", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="ListingCount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingCount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingCount object.
        /// </summary>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="searchCount">Initial value of the SearchCount property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        public static ListingCount CreateListingCount(global::System.Int32 listingId, global::System.Int32 searchCount, global::System.Int32 viewCount)
        {
            ListingCount listingCount = new ListingCount();
            listingCount.ListingId = listingId;
            listingCount.SearchCount = searchCount;
            listingCount.ViewCount = viewCount;
            return listingCount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                if (_ListingId != value)
                {
                    OnListingIdChanging(value);
                    ReportPropertyChanging("ListingId");
                    _ListingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingId");
                    OnListingIdChanged();
                }
            }
        }
        private global::System.Int32 _ListingId;
        partial void OnListingIdChanging(global::System.Int32 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchCount
        {
            get
            {
                return _SearchCount;
            }
            set
            {
                OnSearchCountChanging(value);
                ReportPropertyChanging("SearchCount");
                _SearchCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchCount");
                OnSearchCountChanged();
            }
        }
        private global::System.Int32 _SearchCount;
        partial void OnSearchCountChanging(global::System.Int32 value);
        partial void OnSearchCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private global::System.Int32 _ViewCount;
        partial void OnViewCountChanging(global::System.Int32 value);
        partial void OnViewCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ListingCounts_Listings", "Listings")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_ListingCounts_Listings", "Listings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_ListingCounts_Listings", "Listings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_ListingCounts_Listings", "Listings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("RentlerBackupModel.FK_ListingCounts_Listings", "Listings", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="createDateUtc">Initial value of the CreateDateUtc property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Message CreateMessage(global::System.Int64 messageId, global::System.Guid fromUserId, global::System.Guid toUserId, global::System.String content, global::System.DateTime createDateUtc, global::System.Boolean isDeleted)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.FromUserId = fromUserId;
            message.ToUserId = toUserId;
            message.Content = content;
            message.CreateDateUtc = createDateUtc;
            message.IsDeleted = isDeleted;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int64 _MessageId;
        partial void OnMessageIdChanging(global::System.Int64 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Guid _FromUserId;
        partial void OnFromUserIdChanging(global::System.Guid value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Guid _ToUserId;
        partial void OnToUserIdChanging(global::System.Guid value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDateUtc
        {
            get
            {
                return _CreateDateUtc;
            }
            set
            {
                OnCreateDateUtcChanging(value);
                ReportPropertyChanging("CreateDateUtc");
                _CreateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDateUtc");
                OnCreateDateUtcChanged();
            }
        }
        private global::System.DateTime _CreateDateUtc;
        partial void OnCreateDateUtcChanging(global::System.DateTime value);
        partial void OnCreateDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentMessageId
        {
            get
            {
                return _ParentMessageId;
            }
            set
            {
                OnParentMessageIdChanging(value);
                ReportPropertyChanging("ParentMessageId");
                _ParentMessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentMessageId");
                OnParentMessageIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentMessageId;
        partial void OnParentMessageIdChanging(Nullable<global::System.Int64> value);
        partial void OnParentMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ListingId;
        partial void OnListingIdChanging(Nullable<global::System.Int32> value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Messages_Listings", "Listings")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_Messages_Listings", "Listings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_Messages_Listings", "Listings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_Messages_Listings", "Listings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("RentlerBackupModel.FK_Messages_Listings", "Listings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Messages_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Messages_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Messages_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Messages_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Messages_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Messages_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Messages_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Messages_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Messages_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Messages_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userCreditCardId">Initial value of the UserCreditCardId property.</param>
        /// <param name="purchaseDate">Initial value of the PurchaseDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Order CreateOrder(global::System.Int64 orderId, global::System.Guid userId, global::System.Int32 userCreditCardId, global::System.DateTime purchaseDate, global::System.String status, global::System.Boolean isDeleted)
        {
            Order order = new Order();
            order.OrderId = orderId;
            order.UserId = userId;
            order.UserCreditCardId = userCreditCardId;
            order.PurchaseDate = purchaseDate;
            order.Status = status;
            order.IsDeleted = isDeleted;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.Int64 _OrderId;
        partial void OnOrderIdChanging(global::System.Int64 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserCreditCardId
        {
            get
            {
                return _UserCreditCardId;
            }
            set
            {
                OnUserCreditCardIdChanging(value);
                ReportPropertyChanging("UserCreditCardId");
                _UserCreditCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCreditCardId");
                OnUserCreditCardIdChanged();
            }
        }
        private global::System.Int32 _UserCreditCardId;
        partial void OnUserCreditCardIdChanging(global::System.Int32 value);
        partial void OnUserCreditCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private global::System.DateTime _PurchaseDate;
        partial void OnPurchaseDateChanging(global::System.DateTime value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CancelDate
        {
            get
            {
                return _CancelDate;
            }
            set
            {
                OnCancelDateChanging(value);
                ReportPropertyChanging("CancelDate");
                _CancelDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelDate");
                OnCancelDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CancelDate;
        partial void OnCancelDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCancelDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_OrderItems_Orders", "OrderItems")]
        public EntityCollection<OrderItem> OrderItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("RentlerBackupModel.FK_OrderItems_Orders", "OrderItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("RentlerBackupModel.FK_OrderItems_Orders", "OrderItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Orders_UserCreditCards", "UserCreditCards")]
        public UserCreditCard UserCreditCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Orders_UserCreditCards", "UserCreditCards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Orders_UserCreditCards", "UserCreditCards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCreditCard> UserCreditCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Orders_UserCreditCards", "UserCreditCards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Orders_UserCreditCards", "UserCreditCards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Orders_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Orders_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Orders_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Orders_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Orders_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SubscriptionOrders_Orders", "SubscriptionOrders")]
        public EntityCollection<SubscriptionOrder> SubscriptionOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionOrder>("RentlerBackupModel.FK_SubscriptionOrders_Orders", "SubscriptionOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionOrder>("RentlerBackupModel.FK_SubscriptionOrders_Orders", "SubscriptionOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="OrderItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderItem object.
        /// </summary>
        /// <param name="orderItemId">Initial value of the OrderItemId property.</param>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static OrderItem CreateOrderItem(global::System.Int64 orderItemId, global::System.Int64 orderId, global::System.Int32 productId, global::System.Int32 quantity, global::System.Boolean isDeleted)
        {
            OrderItem orderItem = new OrderItem();
            orderItem.OrderItemId = orderItemId;
            orderItem.OrderId = orderId;
            orderItem.ProductId = productId;
            orderItem.Quantity = quantity;
            orderItem.IsDeleted = isDeleted;
            return orderItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderItemId
        {
            get
            {
                return _OrderItemId;
            }
            set
            {
                if (_OrderItemId != value)
                {
                    OnOrderItemIdChanging(value);
                    ReportPropertyChanging("OrderItemId");
                    _OrderItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderItemId");
                    OnOrderItemIdChanged();
                }
            }
        }
        private global::System.Int64 _OrderItemId;
        partial void OnOrderItemIdChanging(global::System.Int64 value);
        partial void OnOrderItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int64 _OrderId;
        partial void OnOrderIdChanging(global::System.Int64 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_OrderItems_Orders", "Orders")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RentlerBackupModel.FK_OrderItems_Orders", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RentlerBackupModel.FK_OrderItems_Orders", "Orders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RentlerBackupModel.FK_OrderItems_Orders", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("RentlerBackupModel.FK_OrderItems_Orders", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_OrderItems_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RentlerBackupModel.FK_OrderItems_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RentlerBackupModel.FK_OrderItems_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RentlerBackupModel.FK_OrderItems_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RentlerBackupModel.FK_OrderItems_Products", "Products", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="photoId">Initial value of the PhotoId property.</param>
        /// <param name="buildingId">Initial value of the BuildingId property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Photo CreatePhoto(global::System.Guid photoId, global::System.Int32 buildingId, global::System.Boolean isPrimary, global::System.String extension, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Photo photo = new Photo();
            photo.PhotoId = photoId;
            photo.BuildingId = buildingId;
            photo.IsPrimary = isPrimary;
            photo.Extension = extension;
            photo.CreateDate = createDate;
            photo.CreatedBy = createdBy;
            photo.IsDeleted = isDeleted;
            return photo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhotoId
        {
            get
            {
                return _PhotoId;
            }
            set
            {
                if (_PhotoId != value)
                {
                    OnPhotoIdChanging(value);
                    ReportPropertyChanging("PhotoId");
                    _PhotoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoId");
                    OnPhotoIdChanged();
                }
            }
        }
        private global::System.Guid _PhotoId;
        partial void OnPhotoIdChanging(global::System.Guid value);
        partial void OnPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                OnBuildingIdChanging(value);
                ReportPropertyChanging("BuildingId");
                _BuildingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingId");
                OnBuildingIdChanged();
            }
        }
        private global::System.Int32 _BuildingId;
        partial void OnBuildingIdChanging(global::System.Int32 value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Photos_Buildings", "Buildings")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Photos_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Photos_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Photos_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("RentlerBackupModel.FK_Photos_Buildings", "Buildings", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Product CreateProduct(global::System.Int32 productId, global::System.String name, global::System.String description, global::System.Decimal price, global::System.Boolean isDeleted)
        {
            Product product = new Product();
            product.ProductId = productId;
            product.Name = name;
            product.Description = description;
            product.Price = price;
            product.IsDeleted = isDeleted;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_OrderItems_Products", "OrderItems")]
        public EntityCollection<OrderItem> OrderItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("RentlerBackupModel.FK_OrderItems_Products", "OrderItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("RentlerBackupModel.FK_OrderItems_Products", "OrderItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Products_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RentlerBackupModel.FK_Products_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RentlerBackupModel.FK_Products_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RentlerBackupModel.FK_Products_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("RentlerBackupModel.FK_Products_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Subscriptions_Products", "Subscriptions")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("RentlerBackupModel.FK_Subscriptions_Products", "Subscriptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("RentlerBackupModel.FK_Subscriptions_Products", "Subscriptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="PropertyInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyInfo object.
        /// </summary>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="squareFootage">Initial value of the SquareFootage property.</param>
        /// <param name="yearBuilt">Initial value of the YearBuilt property.</param>
        /// <param name="acres">Initial value of the Acres property.</param>
        /// <param name="isAvailable">Initial value of the IsAvailable property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PropertyInfo CreatePropertyInfo(global::System.Int32 propertyInfoId, global::System.String type, global::System.Int32 squareFootage, global::System.Int32 yearBuilt, global::System.Double acres, global::System.Boolean isAvailable, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            PropertyInfo propertyInfo = new PropertyInfo();
            propertyInfo.PropertyInfoId = propertyInfoId;
            propertyInfo.Type = type;
            propertyInfo.SquareFootage = squareFootage;
            propertyInfo.YearBuilt = yearBuilt;
            propertyInfo.Acres = acres;
            propertyInfo.IsAvailable = isAvailable;
            propertyInfo.CreateDate = createDate;
            propertyInfo.CreatedBy = createdBy;
            propertyInfo.IsDeleted = isDeleted;
            return propertyInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                if (_PropertyInfoId != value)
                {
                    OnPropertyInfoIdChanging(value);
                    ReportPropertyChanging("PropertyInfoId");
                    _PropertyInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyInfoId");
                    OnPropertyInfoIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Bedrooms
        {
            get
            {
                return _Bedrooms;
            }
            set
            {
                OnBedroomsChanging(value);
                ReportPropertyChanging("Bedrooms");
                _Bedrooms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bedrooms");
                OnBedroomsChanged();
            }
        }
        private Nullable<global::System.Int32> _Bedrooms;
        partial void OnBedroomsChanging(Nullable<global::System.Int32> value);
        partial void OnBedroomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Bathrooms
        {
            get
            {
                return _Bathrooms;
            }
            set
            {
                OnBathroomsChanging(value);
                ReportPropertyChanging("Bathrooms");
                _Bathrooms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bathrooms");
                OnBathroomsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Bathrooms;
        partial void OnBathroomsChanging(Nullable<global::System.Decimal> value);
        partial void OnBathroomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SquareFootage
        {
            get
            {
                return _SquareFootage;
            }
            set
            {
                OnSquareFootageChanging(value);
                ReportPropertyChanging("SquareFootage");
                _SquareFootage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SquareFootage");
                OnSquareFootageChanged();
            }
        }
        private global::System.Int32 _SquareFootage;
        partial void OnSquareFootageChanging(global::System.Int32 value);
        partial void OnSquareFootageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearBuilt
        {
            get
            {
                return _YearBuilt;
            }
            set
            {
                OnYearBuiltChanging(value);
                ReportPropertyChanging("YearBuilt");
                _YearBuilt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearBuilt");
                OnYearBuiltChanged();
            }
        }
        private global::System.Int32 _YearBuilt;
        partial void OnYearBuiltChanging(global::System.Int32 value);
        partial void OnYearBuiltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Acres
        {
            get
            {
                return _Acres;
            }
            set
            {
                OnAcresChanging(value);
                ReportPropertyChanging("Acres");
                _Acres = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Acres");
                OnAcresChanged();
            }
        }
        private global::System.Double _Acres;
        partial void OnAcresChanging(global::System.Double value);
        partial void OnAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAvailable
        {
            get
            {
                return _IsAvailable;
            }
            set
            {
                OnIsAvailableChanging(value);
                ReportPropertyChanging("IsAvailable");
                _IsAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAvailable");
                OnIsAvailableChanged();
            }
        }
        private global::System.Boolean _IsAvailable;
        partial void OnIsAvailableChanging(global::System.Boolean value);
        partial void OnIsAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAvailableUtc
        {
            get
            {
                return _DateAvailableUtc;
            }
            set
            {
                OnDateAvailableUtcChanging(value);
                ReportPropertyChanging("DateAvailableUtc");
                _DateAvailableUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAvailableUtc");
                OnDateAvailableUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAvailableUtc;
        partial void OnDateAvailableUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAvailableUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Deposit
        {
            get
            {
                return _Deposit;
            }
            set
            {
                OnDepositChanging(value);
                ReportPropertyChanging("Deposit");
                _Deposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deposit");
                OnDepositChanged();
            }
        }
        private Nullable<global::System.Decimal> _Deposit;
        partial void OnDepositChanging(Nullable<global::System.Decimal> value);
        partial void OnDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Buildings_PropertyInfos", "Buildings")]
        public EntityCollection<Building> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building>("RentlerBackupModel.FK_Buildings_PropertyInfos", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building>("RentlerBackupModel.FK_Buildings_PropertyInfos", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_CustomAmenities_PropertyInfos", "CustomAmenities")]
        public EntityCollection<CustomAmenity> CustomAmenities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomAmenity>("RentlerBackupModel.FK_CustomAmenities_PropertyInfos", "CustomAmenities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomAmenity>("RentlerBackupModel.FK_CustomAmenities_PropertyInfos", "CustomAmenities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_PropertyInfos", "Leases")]
        public EntityCollection<Leas> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_PropertyInfos", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_PropertyInfos", "Leases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfoAmenities")]
        public EntityCollection<PropertyInfoAmenity> PropertyInfoAmenities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyInfoAmenity>("RentlerBackupModel.FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfoAmenities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyInfoAmenity>("RentlerBackupModel.FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfoAmenities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfoAmenitiesWithOptions")]
        public EntityCollection<PropertyInfoAmenitiesWithOption> PropertyInfoAmenitiesWithOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyInfoAmenitiesWithOption>("RentlerBackupModel.FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfoAmenitiesWithOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyInfoAmenitiesWithOption>("RentlerBackupModel.FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfoAmenitiesWithOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Rooms_PropertyInfos", "Rooms")]
        public EntityCollection<Room> Rooms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Room>("RentlerBackupModel.FK_Rooms_PropertyInfos", "Rooms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Room>("RentlerBackupModel.FK_Rooms_PropertyInfos", "Rooms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Units_PropertyInfos1", "Units")]
        public EntityCollection<Unit> Units
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unit>("RentlerBackupModel.FK_Units_PropertyInfos1", "Units");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unit>("RentlerBackupModel.FK_Units_PropertyInfos1", "Units", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="PropertyInfoAmenitiesWithOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyInfoAmenitiesWithOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyInfoAmenitiesWithOption object.
        /// </summary>
        /// <param name="amenityId">Initial value of the AmenityId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="option">Initial value of the Option property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PropertyInfoAmenitiesWithOption CreatePropertyInfoAmenitiesWithOption(global::System.Int32 amenityId, global::System.Int32 propertyInfoId, global::System.String option, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            PropertyInfoAmenitiesWithOption propertyInfoAmenitiesWithOption = new PropertyInfoAmenitiesWithOption();
            propertyInfoAmenitiesWithOption.AmenityId = amenityId;
            propertyInfoAmenitiesWithOption.PropertyInfoId = propertyInfoId;
            propertyInfoAmenitiesWithOption.Option = option;
            propertyInfoAmenitiesWithOption.CreateDate = createDate;
            propertyInfoAmenitiesWithOption.CreatedBy = createdBy;
            propertyInfoAmenitiesWithOption.IsDeleted = isDeleted;
            return propertyInfoAmenitiesWithOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmenityId
        {
            get
            {
                return _AmenityId;
            }
            set
            {
                if (_AmenityId != value)
                {
                    OnAmenityIdChanging(value);
                    ReportPropertyChanging("AmenityId");
                    _AmenityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmenityId");
                    OnAmenityIdChanged();
                }
            }
        }
        private global::System.Int32 _AmenityId;
        partial void OnAmenityIdChanging(global::System.Int32 value);
        partial void OnAmenityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                if (_PropertyInfoId != value)
                {
                    OnPropertyInfoIdChanging(value);
                    ReportPropertyChanging("PropertyInfoId");
                    _PropertyInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyInfoId");
                    OnPropertyInfoIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Option
        {
            get
            {
                return _Option;
            }
            set
            {
                OnOptionChanging(value);
                ReportPropertyChanging("Option");
                _Option = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Option");
                OnOptionChanged();
            }
        }
        private global::System.String _Option;
        partial void OnOptionChanging(global::System.String value);
        partial void OnOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "AmenitiesWithOptions")]
        public AmenitiesWithOption AmenitiesWithOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "AmenitiesWithOptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "AmenitiesWithOptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AmenitiesWithOption> AmenitiesWithOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "AmenitiesWithOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AmenitiesWithOption>("RentlerBackupModel.FK_HomeAmenitiesWithOptions_AmenitiesWithOptions", "AmenitiesWithOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenitiesWithOptions_PropertyInfos", "PropertyInfos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="PropertyInfoAmenity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyInfoAmenity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyInfoAmenity object.
        /// </summary>
        /// <param name="amenityId">Initial value of the AmenityId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PropertyInfoAmenity CreatePropertyInfoAmenity(global::System.Int32 amenityId, global::System.Int32 propertyInfoId, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            PropertyInfoAmenity propertyInfoAmenity = new PropertyInfoAmenity();
            propertyInfoAmenity.AmenityId = amenityId;
            propertyInfoAmenity.PropertyInfoId = propertyInfoId;
            propertyInfoAmenity.CreateDate = createDate;
            propertyInfoAmenity.CreatedBy = createdBy;
            propertyInfoAmenity.IsDeleted = isDeleted;
            return propertyInfoAmenity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmenityId
        {
            get
            {
                return _AmenityId;
            }
            set
            {
                if (_AmenityId != value)
                {
                    OnAmenityIdChanging(value);
                    ReportPropertyChanging("AmenityId");
                    _AmenityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmenityId");
                    OnAmenityIdChanged();
                }
            }
        }
        private global::System.Int32 _AmenityId;
        partial void OnAmenityIdChanging(global::System.Int32 value);
        partial void OnAmenityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                if (_PropertyInfoId != value)
                {
                    OnPropertyInfoIdChanging(value);
                    ReportPropertyChanging("PropertyInfoId");
                    _PropertyInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyInfoId");
                    OnPropertyInfoIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_HomeAmenities_Amenities", "Amenities")]
        public Amenity Amenity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Amenity>("RentlerBackupModel.FK_HomeAmenities_Amenities", "Amenities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Amenity>("RentlerBackupModel.FK_HomeAmenities_Amenities", "Amenities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Amenity> AmenityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Amenity>("RentlerBackupModel.FK_HomeAmenities_Amenities", "Amenities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Amenity>("RentlerBackupModel.FK_HomeAmenities_Amenities", "Amenities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_PropertyInfoAmenities_PropertyInfos", "PropertyInfos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="PropertyTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyTransaction object.
        /// </summary>
        /// <param name="propertyTransactionId">Initial value of the PropertyTransactionId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="generated">Initial value of the Generated property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PropertyTransaction CreatePropertyTransaction(global::System.Int32 propertyTransactionId, global::System.Int32 propertyInfoId, global::System.String description, global::System.Boolean generated, global::System.DateTime postDate, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            PropertyTransaction propertyTransaction = new PropertyTransaction();
            propertyTransaction.PropertyTransactionId = propertyTransactionId;
            propertyTransaction.PropertyInfoId = propertyInfoId;
            propertyTransaction.Description = description;
            propertyTransaction.Generated = generated;
            propertyTransaction.PostDate = postDate;
            propertyTransaction.CreateDate = createDate;
            propertyTransaction.CreatedBy = createdBy;
            propertyTransaction.IsDeleted = isDeleted;
            return propertyTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTransactionId
        {
            get
            {
                return _PropertyTransactionId;
            }
            set
            {
                if (_PropertyTransactionId != value)
                {
                    OnPropertyTransactionIdChanging(value);
                    ReportPropertyChanging("PropertyTransactionId");
                    _PropertyTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyTransactionId");
                    OnPropertyTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyTransactionId;
        partial void OnPropertyTransactionIdChanging(global::System.Int32 value);
        partial void OnPropertyTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                OnPropertyInfoIdChanging(value);
                ReportPropertyChanging("PropertyInfoId");
                _PropertyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyInfoId");
                OnPropertyInfoIdChanged();
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Generated
        {
            get
            {
                return _Generated;
            }
            set
            {
                OnGeneratedChanging(value);
                ReportPropertyChanging("Generated");
                _Generated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Generated");
                OnGeneratedChanged();
            }
        }
        private global::System.Boolean _Generated;
        partial void OnGeneratedChanging(global::System.Boolean value);
        partial void OnGeneratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LeasePaymentPropertyTransactions_PropertyTransactions", "LeasePaymentPropertyTransactions")]
        public EntityCollection<LeasePaymentPropertyTransaction> LeasePaymentPropertyTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasePaymentPropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_PropertyTransactions", "LeasePaymentPropertyTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasePaymentPropertyTransaction>("RentlerBackupModel.FK_LeasePaymentPropertyTransactions_PropertyTransactions", "LeasePaymentPropertyTransactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="contractId">Initial value of the ContractId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Question CreateQuestion(global::System.Int32 questionId, global::System.Int32 contractId, global::System.Int32 sortOrder, global::System.String key, global::System.String text, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Question question = new Question();
            question.QuestionId = questionId;
            question.ContractId = contractId;
            question.SortOrder = sortOrder;
            question.Key = key;
            question.Text = text;
            question.CreateDate = createDate;
            question.CreatedBy = createdBy;
            question.IsDeleted = isDeleted;
            return question;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                if (_QuestionId != value)
                {
                    OnQuestionIdChanging(value);
                    ReportPropertyChanging("QuestionId");
                    _QuestionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionId");
                    OnQuestionIdChanged();
                }
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractId
        {
            get
            {
                return _ContractId;
            }
            set
            {
                OnContractIdChanging(value);
                ReportPropertyChanging("ContractId");
                _ContractId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractId");
                OnContractIdChanged();
            }
        }
        private global::System.Int32 _ContractId;
        partial void OnContractIdChanging(global::System.Int32 value);
        partial void OnContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Answers_Questions", "Answers")]
        public EntityCollection<Answer> Answers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Answer>("RentlerBackupModel.FK_Answers_Questions", "Answers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Answer>("RentlerBackupModel.FK_Answers_Questions", "Answers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ContractQuestions_Contracts", "Contracts")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("RentlerBackupModel.FK_ContractQuestions_Contracts", "Contracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("RentlerBackupModel.FK_ContractQuestions_Contracts", "Contracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("RentlerBackupModel.FK_ContractQuestions_Contracts", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("RentlerBackupModel.FK_ContractQuestions_Contracts", "Contracts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="ReportedListing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportedListing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportedListing object.
        /// </summary>
        /// <param name="reportedListingId">Initial value of the ReportedListingId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="reportContent">Initial value of the ReportContent property.</param>
        public static ReportedListing CreateReportedListing(global::System.Int32 reportedListingId, global::System.Int32 listingId, global::System.String reportContent)
        {
            ReportedListing reportedListing = new ReportedListing();
            reportedListing.ReportedListingId = reportedListingId;
            reportedListing.ListingId = listingId;
            reportedListing.ReportContent = reportContent;
            return reportedListing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportedListingId
        {
            get
            {
                return _ReportedListingId;
            }
            set
            {
                if (_ReportedListingId != value)
                {
                    OnReportedListingIdChanging(value);
                    ReportPropertyChanging("ReportedListingId");
                    _ReportedListingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportedListingId");
                    OnReportedListingIdChanged();
                }
            }
        }
        private global::System.Int32 _ReportedListingId;
        partial void OnReportedListingIdChanging(global::System.Int32 value);
        partial void OnReportedListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int32 _ListingId;
        partial void OnListingIdChanging(global::System.Int32 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportContent
        {
            get
            {
                return _ReportContent;
            }
            set
            {
                OnReportContentChanging(value);
                ReportPropertyChanging("ReportContent");
                _ReportContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportContent");
                OnReportContentChanged();
            }
        }
        private global::System.String _ReportContent;
        partial void OnReportContentChanging(global::System.String value);
        partial void OnReportContentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ReportedListings_Listings", "Listings")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_ReportedListings_Listings", "Listings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_ReportedListings_Listings", "Listings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_ReportedListings_Listings", "Listings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("RentlerBackupModel.FK_ReportedListings_Listings", "Listings", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Role CreateRole(global::System.String roleName, global::System.String description, global::System.Boolean isDeleted)
        {
            Role role = new Role();
            role.RoleName = roleName;
            role.Description = description;
            role.IsDeleted = isDeleted;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Products_Roles", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("RentlerBackupModel.FK_Products_Roles", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("RentlerBackupModel.FK_Products_Roles", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_RoleUsers_Roles1", "RoleUsers")]
        public EntityCollection<RoleUser> RoleUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleUser>("RentlerBackupModel.FK_RoleUsers_Roles1", "RoleUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleUser>("RentlerBackupModel.FK_RoleUsers_Roles1", "RoleUsers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="RoleUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleUser object.
        /// </summary>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static RoleUser CreateRoleUser(global::System.String roleName, global::System.Guid userId, global::System.Boolean isDeleted)
        {
            RoleUser roleUser = new RoleUser();
            roleUser.RoleName = roleName;
            roleUser.UserId = userId;
            roleUser.IsDeleted = isDeleted;
            return roleUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_RoleUsers_Roles1", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RentlerBackupModel.FK_RoleUsers_Roles1", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RentlerBackupModel.FK_RoleUsers_Roles1", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RentlerBackupModel.FK_RoleUsers_Roles1", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("RentlerBackupModel.FK_RoleUsers_Roles1", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_RoleUsers_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_RoleUsers_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_RoleUsers_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_RoleUsers_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_RoleUsers_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="roomId">Initial value of the RoomId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="floorName">Initial value of the FloorName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Room CreateRoom(global::System.Int32 roomId, global::System.Int32 propertyInfoId, global::System.String floorName, global::System.String name, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Room room = new Room();
            room.RoomId = roomId;
            room.PropertyInfoId = propertyInfoId;
            room.FloorName = floorName;
            room.Name = name;
            room.CreateDate = createDate;
            room.CreatedBy = createdBy;
            room.IsDeleted = isDeleted;
            return room;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomId
        {
            get
            {
                return _RoomId;
            }
            set
            {
                if (_RoomId != value)
                {
                    OnRoomIdChanging(value);
                    ReportPropertyChanging("RoomId");
                    _RoomId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoomId");
                    OnRoomIdChanged();
                }
            }
        }
        private global::System.Int32 _RoomId;
        partial void OnRoomIdChanging(global::System.Int32 value);
        partial void OnRoomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                OnPropertyInfoIdChanging(value);
                ReportPropertyChanging("PropertyInfoId");
                _PropertyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyInfoId");
                OnPropertyInfoIdChanged();
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FloorName
        {
            get
            {
                return _FloorName;
            }
            set
            {
                OnFloorNameChanging(value);
                ReportPropertyChanging("FloorName");
                _FloorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FloorName");
                OnFloorNameChanged();
            }
        }
        private global::System.String _FloorName;
        partial void OnFloorNameChanging(global::System.String value);
        partial void OnFloorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Rooms_Floors", "Floors")]
        public Floor Floor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Floor>("RentlerBackupModel.FK_Rooms_Floors", "Floors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Floor>("RentlerBackupModel.FK_Rooms_Floors", "Floors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Floor> FloorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Floor>("RentlerBackupModel.FK_Rooms_Floors", "Floors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Floor>("RentlerBackupModel.FK_Rooms_Floors", "Floors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Rooms_PropertyInfos", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Rooms_PropertyInfos", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Rooms_PropertyInfos", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Rooms_PropertyInfos", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Rooms_PropertyInfos", "PropertyInfos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="SavedListing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SavedListing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SavedListing object.
        /// </summary>
        /// <param name="savedListingId">Initial value of the SavedListingId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static SavedListing CreateSavedListing(global::System.Int32 savedListingId, global::System.Guid userId, global::System.Int32 listingId, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            SavedListing savedListing = new SavedListing();
            savedListing.SavedListingId = savedListingId;
            savedListing.UserId = userId;
            savedListing.ListingId = listingId;
            savedListing.CreateDate = createDate;
            savedListing.CreatedBy = createdBy;
            savedListing.IsDeleted = isDeleted;
            return savedListing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SavedListingId
        {
            get
            {
                return _SavedListingId;
            }
            set
            {
                if (_SavedListingId != value)
                {
                    OnSavedListingIdChanging(value);
                    ReportPropertyChanging("SavedListingId");
                    _SavedListingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SavedListingId");
                    OnSavedListingIdChanged();
                }
            }
        }
        private global::System.Int32 _SavedListingId;
        partial void OnSavedListingIdChanging(global::System.Int32 value);
        partial void OnSavedListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int32 _ListingId;
        partial void OnListingIdChanging(global::System.Int32 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SavedListings_Listings", "Listings")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_SavedListings_Listings", "Listings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_SavedListings_Listings", "Listings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_SavedListings_Listings", "Listings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("RentlerBackupModel.FK_SavedListings_Listings", "Listings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SavedListings_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_SavedListings_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_SavedListings_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_SavedListings_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_SavedListings_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Sid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sid : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sid object.
        /// </summary>
        /// <param name="sid1">Initial value of the sid1 property.</param>
        public static Sid CreateSid(global::System.Int32 sid1)
        {
            Sid sid = new Sid();
            sid.sid1 = sid1;
            return sid;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sid1
        {
            get
            {
                return _sid1;
            }
            set
            {
                if (_sid1 != value)
                {
                    Onsid1Changing(value);
                    ReportPropertyChanging("sid1");
                    _sid1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("sid1");
                    Onsid1Changed();
                }
            }
        }
        private global::System.Int32 _sid1;
        partial void Onsid1Changing(global::System.Int32 value);
        partial void Onsid1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="subscriptionId">Initial value of the SubscriptionId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userCreditCardId">Initial value of the UserCreditCardId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDisputed">Initial value of the IsDisputed property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="nextChargeDate">Initial value of the NextChargeDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Subscription CreateSubscription(global::System.Int64 subscriptionId, global::System.Int32 productId, global::System.Guid userId, global::System.Int32 userCreditCardId, global::System.Boolean isActive, global::System.Boolean isDisputed, global::System.DateTime startDate, global::System.DateTime nextChargeDate, global::System.Boolean isDeleted)
        {
            Subscription subscription = new Subscription();
            subscription.SubscriptionId = subscriptionId;
            subscription.ProductId = productId;
            subscription.UserId = userId;
            subscription.UserCreditCardId = userCreditCardId;
            subscription.IsActive = isActive;
            subscription.IsDisputed = isDisputed;
            subscription.StartDate = startDate;
            subscription.NextChargeDate = nextChargeDate;
            subscription.IsDeleted = isDeleted;
            return subscription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SubscriptionId
        {
            get
            {
                return _SubscriptionId;
            }
            set
            {
                if (_SubscriptionId != value)
                {
                    OnSubscriptionIdChanging(value);
                    ReportPropertyChanging("SubscriptionId");
                    _SubscriptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubscriptionId");
                    OnSubscriptionIdChanged();
                }
            }
        }
        private global::System.Int64 _SubscriptionId;
        partial void OnSubscriptionIdChanging(global::System.Int64 value);
        partial void OnSubscriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserCreditCardId
        {
            get
            {
                return _UserCreditCardId;
            }
            set
            {
                OnUserCreditCardIdChanging(value);
                ReportPropertyChanging("UserCreditCardId");
                _UserCreditCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCreditCardId");
                OnUserCreditCardIdChanged();
            }
        }
        private global::System.Int32 _UserCreditCardId;
        partial void OnUserCreditCardIdChanging(global::System.Int32 value);
        partial void OnUserCreditCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDisputed
        {
            get
            {
                return _IsDisputed;
            }
            set
            {
                OnIsDisputedChanging(value);
                ReportPropertyChanging("IsDisputed");
                _IsDisputed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDisputed");
                OnIsDisputedChanged();
            }
        }
        private global::System.Boolean _IsDisputed;
        partial void OnIsDisputedChanging(global::System.Boolean value);
        partial void OnIsDisputedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NextChargeDate
        {
            get
            {
                return _NextChargeDate;
            }
            set
            {
                OnNextChargeDateChanging(value);
                ReportPropertyChanging("NextChargeDate");
                _NextChargeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextChargeDate");
                OnNextChargeDateChanged();
            }
        }
        private global::System.DateTime _NextChargeDate;
        partial void OnNextChargeDateChanging(global::System.DateTime value);
        partial void OnNextChargeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Subscriptions_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RentlerBackupModel.FK_Subscriptions_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RentlerBackupModel.FK_Subscriptions_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("RentlerBackupModel.FK_Subscriptions_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("RentlerBackupModel.FK_Subscriptions_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SubscriptionOrders_Subscriptions", "SubscriptionOrders")]
        public EntityCollection<SubscriptionOrder> SubscriptionOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionOrder>("RentlerBackupModel.FK_SubscriptionOrders_Subscriptions", "SubscriptionOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionOrder>("RentlerBackupModel.FK_SubscriptionOrders_Subscriptions", "SubscriptionOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Subscriptions_UserCreditCards", "UserCreditCards")]
        public UserCreditCard UserCreditCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Subscriptions_UserCreditCards", "UserCreditCards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Subscriptions_UserCreditCards", "UserCreditCards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserCreditCard> UserCreditCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Subscriptions_UserCreditCards", "UserCreditCards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserCreditCard>("RentlerBackupModel.FK_Subscriptions_UserCreditCards", "UserCreditCards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Subscriptions_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Subscriptions_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Subscriptions_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_Subscriptions_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_Subscriptions_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="SubscriptionOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriptionOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriptionOrder object.
        /// </summary>
        /// <param name="subscriptionId">Initial value of the SubscriptionId property.</param>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static SubscriptionOrder CreateSubscriptionOrder(global::System.Int64 subscriptionId, global::System.Int64 orderId, global::System.Boolean isDeleted)
        {
            SubscriptionOrder subscriptionOrder = new SubscriptionOrder();
            subscriptionOrder.SubscriptionId = subscriptionId;
            subscriptionOrder.OrderId = orderId;
            subscriptionOrder.IsDeleted = isDeleted;
            return subscriptionOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SubscriptionId
        {
            get
            {
                return _SubscriptionId;
            }
            set
            {
                if (_SubscriptionId != value)
                {
                    OnSubscriptionIdChanging(value);
                    ReportPropertyChanging("SubscriptionId");
                    _SubscriptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubscriptionId");
                    OnSubscriptionIdChanged();
                }
            }
        }
        private global::System.Int64 _SubscriptionId;
        partial void OnSubscriptionIdChanging(global::System.Int64 value);
        partial void OnSubscriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.Int64 _OrderId;
        partial void OnOrderIdChanging(global::System.Int64 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SubscriptionOrders_Orders", "Orders")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RentlerBackupModel.FK_SubscriptionOrders_Orders", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RentlerBackupModel.FK_SubscriptionOrders_Orders", "Orders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("RentlerBackupModel.FK_SubscriptionOrders_Orders", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("RentlerBackupModel.FK_SubscriptionOrders_Orders", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SubscriptionOrders_Subscriptions", "Subscriptions")]
        public Subscription Subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("RentlerBackupModel.FK_SubscriptionOrders_Subscriptions", "Subscriptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("RentlerBackupModel.FK_SubscriptionOrders_Subscriptions", "Subscriptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscription> SubscriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("RentlerBackupModel.FK_SubscriptionOrders_Subscriptions", "Subscriptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscription>("RentlerBackupModel.FK_SubscriptionOrders_Subscriptions", "Subscriptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="propertyInfoId">Initial value of the PropertyInfoId property.</param>
        /// <param name="buildingId">Initial value of the BuildingId property.</param>
        /// <param name="addressLine2">Initial value of the AddressLine2 property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Unit CreateUnit(global::System.Int32 unitId, global::System.Int32 propertyInfoId, global::System.Int32 buildingId, global::System.String addressLine2, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            Unit unit = new Unit();
            unit.UnitId = unitId;
            unit.PropertyInfoId = propertyInfoId;
            unit.BuildingId = buildingId;
            unit.AddressLine2 = addressLine2;
            unit.CreateDate = createDate;
            unit.CreatedBy = createdBy;
            unit.IsDeleted = isDeleted;
            return unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyInfoId
        {
            get
            {
                return _PropertyInfoId;
            }
            set
            {
                OnPropertyInfoIdChanging(value);
                ReportPropertyChanging("PropertyInfoId");
                _PropertyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyInfoId");
                OnPropertyInfoIdChanged();
            }
        }
        private global::System.Int32 _PropertyInfoId;
        partial void OnPropertyInfoIdChanging(global::System.Int32 value);
        partial void OnPropertyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingId
        {
            get
            {
                return _BuildingId;
            }
            set
            {
                OnBuildingIdChanging(value);
                ReportPropertyChanging("BuildingId");
                _BuildingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildingId");
                OnBuildingIdChanged();
            }
        }
        private global::System.Int32 _BuildingId;
        partial void OnBuildingIdChanging(global::System.Int32 value);
        partial void OnBuildingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Units_Buildings", "Buildings")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Units_Buildings", "Buildings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Units_Buildings", "Buildings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("RentlerBackupModel.FK_Units_Buildings", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("RentlerBackupModel.FK_Units_Buildings", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Units", "LandlordAlerts")]
        public EntityCollection<LandlordAlert> LandlordAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Units", "LandlordAlerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Units", "LandlordAlerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Units_PropertyInfos1", "PropertyInfos")]
        public PropertyInfo PropertyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Units_PropertyInfos1", "PropertyInfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Units_PropertyInfos1", "PropertyInfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyInfo> PropertyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Units_PropertyInfos1", "PropertyInfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyInfo>("RentlerBackupModel.FK_Units_PropertyInfos1", "PropertyInfos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isLandlord">Initial value of the IsLandlord property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static User CreateUser(global::System.Guid userId, global::System.String username, global::System.String email, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isLandlord, global::System.Boolean isDeleted)
        {
            User user = new User();
            user.UserId = userId;
            user.Username = username;
            user.Email = email;
            user.CreateDate = createDate;
            user.CreatedBy = createdBy;
            user.IsLandlord = isLandlord;
            user.IsDeleted = isDeleted;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLandlord
        {
            get
            {
                return _IsLandlord;
            }
            set
            {
                OnIsLandlordChanging(value);
                ReportPropertyChanging("IsLandlord");
                _IsLandlord = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLandlord");
                OnIsLandlordChanged();
            }
        }
        private global::System.Boolean _IsLandlord;
        partial void OnIsLandlordChanging(global::System.Boolean value);
        partial void OnIsLandlordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AffiliateUsers_Users", "AffiliateUsers")]
        public AffiliateUser AffiliateUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AffiliateUser>("RentlerBackupModel.FK_AffiliateUsers_Users", "AffiliateUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AffiliateUser>("RentlerBackupModel.FK_AffiliateUsers_Users", "AffiliateUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AffiliateUser> AffiliateUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AffiliateUser>("RentlerBackupModel.FK_AffiliateUsers_Users", "AffiliateUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AffiliateUser>("RentlerBackupModel.FK_AffiliateUsers_Users", "AffiliateUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Alerts_Users", "Alerts")]
        public EntityCollection<Alert> Alerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alert>("RentlerBackupModel.FK_Alerts_Users", "Alerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alert>("RentlerBackupModel.FK_Alerts_Users", "Alerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ApiKeys_Users", "ApiKeys")]
        public EntityCollection<ApiKey> ApiKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApiKey>("RentlerBackupModel.FK_ApiKeys_Users", "ApiKeys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApiKey>("RentlerBackupModel.FK_ApiKeys_Users", "ApiKeys", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_ApplicationInfo_Users", "ApplicationInfo")]
        public ApplicationInfo ApplicationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationInfo>("RentlerBackupModel.FK_ApplicationInfo_Users", "ApplicationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationInfo>("RentlerBackupModel.FK_ApplicationInfo_Users", "ApplicationInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationInfo> ApplicationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationInfo>("RentlerBackupModel.FK_ApplicationInfo_Users", "ApplicationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationInfo>("RentlerBackupModel.FK_ApplicationInfo_Users", "ApplicationInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_AuthTokens_Users", "AuthTokens")]
        public EntityCollection<AuthToken> AuthTokens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthToken>("RentlerBackupModel.FK_AuthTokens_Users", "AuthTokens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthToken>("RentlerBackupModel.FK_AuthTokens_Users", "AuthTokens", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Buildings_Users", "Buildings")]
        public EntityCollection<Building> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building>("RentlerBackupModel.FK_Buildings_Users", "Buildings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building>("RentlerBackupModel.FK_Buildings_Users", "Buildings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Users", "LandlordAlerts")]
        public EntityCollection<LandlordAlert> LandlordAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Users", "LandlordAlerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Users", "LandlordAlerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordAlerts_Users1", "LandlordAlerts")]
        public EntityCollection<LandlordAlert> LandlordAlerts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Users1", "LandlordAlerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LandlordAlert>("RentlerBackupModel.FK_LandlordAlerts_Users1", "LandlordAlerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_LandlordInfo_Users", "LandlordInfo")]
        public EntityCollection<LandlordInfo> LandlordInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LandlordInfo>("RentlerBackupModel.FK_LandlordInfo_Users", "LandlordInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LandlordInfo>("RentlerBackupModel.FK_LandlordInfo_Users", "LandlordInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_Users", "Leases")]
        public EntityCollection<Leas> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_Users", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_Users", "Leases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Messages_Users", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("RentlerBackupModel.FK_Messages_Users", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("RentlerBackupModel.FK_Messages_Users", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Messages_Users1", "Messages")]
        public EntityCollection<Message> Messages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("RentlerBackupModel.FK_Messages_Users1", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("RentlerBackupModel.FK_Messages_Users1", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Orders_Users", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("RentlerBackupModel.FK_Orders_Users", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("RentlerBackupModel.FK_Orders_Users", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_RoleUsers_Users", "RoleUsers")]
        public EntityCollection<RoleUser> RoleUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleUser>("RentlerBackupModel.FK_RoleUsers_Users", "RoleUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleUser>("RentlerBackupModel.FK_RoleUsers_Users", "RoleUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_SavedListings_Users", "SavedListings")]
        public EntityCollection<SavedListing> SavedListings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SavedListing>("RentlerBackupModel.FK_SavedListings_Users", "SavedListings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SavedListing>("RentlerBackupModel.FK_SavedListings_Users", "SavedListings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Subscriptions_Users", "Subscriptions")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("RentlerBackupModel.FK_Subscriptions_Users", "Subscriptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("RentlerBackupModel.FK_Subscriptions_Users", "Subscriptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserBackgroundCheck_Users", "UserBackgroundCheck")]
        public EntityCollection<UserBackgroundCheck> UserBackgroundChecks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBackgroundCheck>("RentlerBackupModel.FK_UserBackgroundCheck_Users", "UserBackgroundCheck");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBackgroundCheck>("RentlerBackupModel.FK_UserBackgroundCheck_Users", "UserBackgroundCheck", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserBackgroundCheck_Users1", "UserBackgroundCheck")]
        public EntityCollection<UserBackgroundCheck> UserBackgroundChecks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBackgroundCheck>("RentlerBackupModel.FK_UserBackgroundCheck_Users1", "UserBackgroundCheck");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBackgroundCheck>("RentlerBackupModel.FK_UserBackgroundCheck_Users1", "UserBackgroundCheck", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserBanks_Users", "UserBanks")]
        public EntityCollection<UserBank> UserBanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBank>("RentlerBackupModel.FK_UserBanks_Users", "UserBanks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBank>("RentlerBackupModel.FK_UserBanks_Users", "UserBanks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContracts_Users", "UserContracts")]
        public EntityCollection<UserContract> UserContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserContract>("RentlerBackupModel.FK_UserContracts_Users", "UserContracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserContract>("RentlerBackupModel.FK_UserContracts_Users", "UserContracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserCreditCards_Users", "UserCreditCards")]
        public EntityCollection<UserCreditCard> UserCreditCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCreditCard>("RentlerBackupModel.FK_UserCreditCards_Users", "UserCreditCards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCreditCard>("RentlerBackupModel.FK_UserCreditCards_Users", "UserCreditCards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserCreditCheck_Users", "UserCreditCheck")]
        public EntityCollection<UserCreditCheck> UserCreditChecks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCreditCheck>("RentlerBackupModel.FK_UserCreditCheck_Users", "UserCreditCheck");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCreditCheck>("RentlerBackupModel.FK_UserCreditCheck_Users", "UserCreditCheck", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserCreditCheck_Users1", "UserCreditCheck")]
        public EntityCollection<UserCreditCheck> UserCreditChecks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCreditCheck>("RentlerBackupModel.FK_UserCreditCheck_Users1", "UserCreditCheck");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCreditCheck>("RentlerBackupModel.FK_UserCreditCheck_Users1", "UserCreditCheck", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserInterests_Users", "UserInterests")]
        public EntityCollection<UserInterest> UserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("RentlerBackupModel.FK_UserInterests_Users", "UserInterests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("RentlerBackupModel.FK_UserInterests_Users", "UserInterests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserInterests_Users1", "UserInterests")]
        public EntityCollection<UserInterest> UserInterests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("RentlerBackupModel.FK_UserInterests_Users1", "UserInterests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("RentlerBackupModel.FK_UserInterests_Users1", "UserInterests", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserBackgroundCheck")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBackgroundCheck : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBackgroundCheck object.
        /// </summary>
        /// <param name="userBackgroundCheckId">Initial value of the UserBackgroundCheckId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="landlordUserId">Initial value of the LandlordUserId property.</param>
        /// <param name="postDateUtc">Initial value of the PostDateUtc property.</param>
        /// <param name="isFelon">Initial value of the IsFelon property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static UserBackgroundCheck CreateUserBackgroundCheck(global::System.Int32 userBackgroundCheckId, global::System.Guid userId, global::System.Guid landlordUserId, global::System.DateTime postDateUtc, global::System.Boolean isFelon, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            UserBackgroundCheck userBackgroundCheck = new UserBackgroundCheck();
            userBackgroundCheck.UserBackgroundCheckId = userBackgroundCheckId;
            userBackgroundCheck.UserId = userId;
            userBackgroundCheck.LandlordUserId = landlordUserId;
            userBackgroundCheck.PostDateUtc = postDateUtc;
            userBackgroundCheck.IsFelon = isFelon;
            userBackgroundCheck.CreateDate = createDate;
            userBackgroundCheck.CreatedBy = createdBy;
            userBackgroundCheck.IsDeleted = isDeleted;
            return userBackgroundCheck;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserBackgroundCheckId
        {
            get
            {
                return _UserBackgroundCheckId;
            }
            set
            {
                if (_UserBackgroundCheckId != value)
                {
                    OnUserBackgroundCheckIdChanging(value);
                    ReportPropertyChanging("UserBackgroundCheckId");
                    _UserBackgroundCheckId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserBackgroundCheckId");
                    OnUserBackgroundCheckIdChanged();
                }
            }
        }
        private global::System.Int32 _UserBackgroundCheckId;
        partial void OnUserBackgroundCheckIdChanging(global::System.Int32 value);
        partial void OnUserBackgroundCheckIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LandlordUserId
        {
            get
            {
                return _LandlordUserId;
            }
            set
            {
                OnLandlordUserIdChanging(value);
                ReportPropertyChanging("LandlordUserId");
                _LandlordUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandlordUserId");
                OnLandlordUserIdChanged();
            }
        }
        private global::System.Guid _LandlordUserId;
        partial void OnLandlordUserIdChanging(global::System.Guid value);
        partial void OnLandlordUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDateUtc
        {
            get
            {
                return _PostDateUtc;
            }
            set
            {
                OnPostDateUtcChanging(value);
                ReportPropertyChanging("PostDateUtc");
                _PostDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDateUtc");
                OnPostDateUtcChanged();
            }
        }
        private global::System.DateTime _PostDateUtc;
        partial void OnPostDateUtcChanging(global::System.DateTime value);
        partial void OnPostDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFelon
        {
            get
            {
                return _IsFelon;
            }
            set
            {
                OnIsFelonChanging(value);
                ReportPropertyChanging("IsFelon");
                _IsFelon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFelon");
                OnIsFelonChanged();
            }
        }
        private global::System.Boolean _IsFelon;
        partial void OnIsFelonChanging(global::System.Boolean value);
        partial void OnIsFelonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserBackgroundCheck_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserBackgroundCheck_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserBackgroundCheck_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserBank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBank object.
        /// </summary>
        /// <param name="userBankId">Initial value of the UserBankId property.</param>
        /// <param name="accountName">Initial value of the AccountName property.</param>
        /// <param name="routingNumber">Initial value of the RoutingNumber property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="accountType">Initial value of the AccountType property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static UserBank CreateUserBank(global::System.Int32 userBankId, global::System.String accountName, global::System.String routingNumber, global::System.String accountNumber, global::System.String accountType, global::System.String firstName, global::System.String lastName, global::System.String addressLine1, global::System.String city, global::System.String state, global::System.String zip, global::System.Boolean isDeleted, global::System.DateTime createDate, global::System.String createdBy)
        {
            UserBank userBank = new UserBank();
            userBank.UserBankId = userBankId;
            userBank.AccountName = accountName;
            userBank.RoutingNumber = routingNumber;
            userBank.AccountNumber = accountNumber;
            userBank.AccountType = accountType;
            userBank.FirstName = firstName;
            userBank.LastName = lastName;
            userBank.AddressLine1 = addressLine1;
            userBank.City = city;
            userBank.State = state;
            userBank.Zip = zip;
            userBank.IsDeleted = isDeleted;
            userBank.CreateDate = createDate;
            userBank.CreatedBy = createdBy;
            return userBank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserBankId
        {
            get
            {
                return _UserBankId;
            }
            set
            {
                if (_UserBankId != value)
                {
                    OnUserBankIdChanging(value);
                    ReportPropertyChanging("UserBankId");
                    _UserBankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserBankId");
                    OnUserBankIdChanged();
                }
            }
        }
        private global::System.Int32 _UserBankId;
        partial void OnUserBankIdChanging(global::System.Int32 value);
        partial void OnUserBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PayerAlias
        {
            get
            {
                return _PayerAlias;
            }
            set
            {
                OnPayerAliasChanging(value);
                ReportPropertyChanging("PayerAlias");
                _PayerAlias = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayerAlias");
                OnPayerAliasChanged();
            }
        }
        private Nullable<global::System.Int64> _PayerAlias;
        partial void OnPayerAliasChanging(Nullable<global::System.Int64> value);
        partial void OnPayerAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PayeeAlias
        {
            get
            {
                return _PayeeAlias;
            }
            set
            {
                OnPayeeAliasChanging(value);
                ReportPropertyChanging("PayeeAlias");
                _PayeeAlias = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayeeAlias");
                OnPayeeAliasChanged();
            }
        }
        private Nullable<global::System.Int64> _PayeeAlias;
        partial void OnPayeeAliasChanging(Nullable<global::System.Int64> value);
        partial void OnPayeeAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountName
        {
            get
            {
                return _AccountName;
            }
            set
            {
                OnAccountNameChanging(value);
                ReportPropertyChanging("AccountName");
                _AccountName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountName");
                OnAccountNameChanged();
            }
        }
        private global::System.String _AccountName;
        partial void OnAccountNameChanging(global::System.String value);
        partial void OnAccountNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoutingNumber
        {
            get
            {
                return _RoutingNumber;
            }
            set
            {
                OnRoutingNumberChanging(value);
                ReportPropertyChanging("RoutingNumber");
                _RoutingNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoutingNumber");
                OnRoutingNumberChanged();
            }
        }
        private global::System.String _RoutingNumber;
        partial void OnRoutingNumberChanging(global::System.String value);
        partial void OnRoutingNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_UserBanks", "Leases")]
        public EntityCollection<Leas> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_UserBanks", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_UserBanks", "Leases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Leases_UserBanks1", "Leases")]
        public EntityCollection<Leas> Leases1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_UserBanks1", "Leases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leas>("RentlerBackupModel.FK_Leases_UserBanks1", "Leases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserBanks_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBanks_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBanks_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserBanks_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserBanks_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserContract object.
        /// </summary>
        /// <param name="userContractId">Initial value of the UserContractId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="contractId">Initial value of the ContractId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static UserContract CreateUserContract(global::System.Int32 userContractId, global::System.Guid userId, global::System.Int32 contractId, global::System.String name, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            UserContract userContract = new UserContract();
            userContract.UserContractId = userContractId;
            userContract.UserId = userId;
            userContract.ContractId = contractId;
            userContract.Name = name;
            userContract.CreateDate = createDate;
            userContract.CreatedBy = createdBy;
            userContract.IsDeleted = isDeleted;
            return userContract;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserContractId
        {
            get
            {
                return _UserContractId;
            }
            set
            {
                if (_UserContractId != value)
                {
                    OnUserContractIdChanging(value);
                    ReportPropertyChanging("UserContractId");
                    _UserContractId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserContractId");
                    OnUserContractIdChanged();
                }
            }
        }
        private global::System.Int32 _UserContractId;
        partial void OnUserContractIdChanging(global::System.Int32 value);
        partial void OnUserContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractId
        {
            get
            {
                return _ContractId;
            }
            set
            {
                OnContractIdChanging(value);
                ReportPropertyChanging("ContractId");
                _ContractId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractId");
                OnContractIdChanged();
            }
        }
        private global::System.Int32 _ContractId;
        partial void OnContractIdChanging(global::System.Int32 value);
        partial void OnContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContracts_Contracts", "Contracts")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("RentlerBackupModel.FK_UserContracts_Contracts", "Contracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("RentlerBackupModel.FK_UserContracts_Contracts", "Contracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("RentlerBackupModel.FK_UserContracts_Contracts", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("RentlerBackupModel.FK_UserContracts_Contracts", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContractAnswers_UserContracts", "UserContractAnswers")]
        public EntityCollection<UserContractAnswer> UserContractAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserContractAnswer>("RentlerBackupModel.FK_UserContractAnswers_UserContracts", "UserContractAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserContractAnswer>("RentlerBackupModel.FK_UserContractAnswers_UserContracts", "UserContractAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContracts_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserContracts_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserContracts_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserContracts_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserContracts_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserContractAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserContractAnswer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserContractAnswer object.
        /// </summary>
        /// <param name="userContractAnswersId">Initial value of the UserContractAnswersId property.</param>
        /// <param name="userContractId">Initial value of the UserContractId property.</param>
        /// <param name="answerId">Initial value of the AnswerId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static UserContractAnswer CreateUserContractAnswer(global::System.Int32 userContractAnswersId, global::System.Int32 userContractId, global::System.Int32 answerId, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            UserContractAnswer userContractAnswer = new UserContractAnswer();
            userContractAnswer.UserContractAnswersId = userContractAnswersId;
            userContractAnswer.UserContractId = userContractId;
            userContractAnswer.AnswerId = answerId;
            userContractAnswer.CreateDate = createDate;
            userContractAnswer.CreatedBy = createdBy;
            userContractAnswer.IsDeleted = isDeleted;
            return userContractAnswer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserContractAnswersId
        {
            get
            {
                return _UserContractAnswersId;
            }
            set
            {
                if (_UserContractAnswersId != value)
                {
                    OnUserContractAnswersIdChanging(value);
                    ReportPropertyChanging("UserContractAnswersId");
                    _UserContractAnswersId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserContractAnswersId");
                    OnUserContractAnswersIdChanged();
                }
            }
        }
        private global::System.Int32 _UserContractAnswersId;
        partial void OnUserContractAnswersIdChanging(global::System.Int32 value);
        partial void OnUserContractAnswersIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserContractId
        {
            get
            {
                return _UserContractId;
            }
            set
            {
                OnUserContractIdChanging(value);
                ReportPropertyChanging("UserContractId");
                _UserContractId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserContractId");
                OnUserContractIdChanged();
            }
        }
        private global::System.Int32 _UserContractId;
        partial void OnUserContractIdChanging(global::System.Int32 value);
        partial void OnUserContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnswerId
        {
            get
            {
                return _AnswerId;
            }
            set
            {
                OnAnswerIdChanging(value);
                ReportPropertyChanging("AnswerId");
                _AnswerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerId");
                OnAnswerIdChanged();
            }
        }
        private global::System.Int32 _AnswerId;
        partial void OnAnswerIdChanging(global::System.Int32 value);
        partial void OnAnswerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomText
        {
            get
            {
                return _CustomText;
            }
            set
            {
                OnCustomTextChanging(value);
                ReportPropertyChanging("CustomText");
                _CustomText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomText");
                OnCustomTextChanged();
            }
        }
        private global::System.String _CustomText;
        partial void OnCustomTextChanging(global::System.String value);
        partial void OnCustomTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContractAnswers_Answers", "Answers")]
        public Answer Answer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("RentlerBackupModel.FK_UserContractAnswers_Answers", "Answers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("RentlerBackupModel.FK_UserContractAnswers_Answers", "Answers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Answer> AnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("RentlerBackupModel.FK_UserContractAnswers_Answers", "Answers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Answer>("RentlerBackupModel.FK_UserContractAnswers_Answers", "Answers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserContractAnswers_UserContracts", "UserContracts")]
        public UserContract UserContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserContract>("RentlerBackupModel.FK_UserContractAnswers_UserContracts", "UserContracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserContract>("RentlerBackupModel.FK_UserContractAnswers_UserContracts", "UserContracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserContract> UserContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserContract>("RentlerBackupModel.FK_UserContractAnswers_UserContracts", "UserContracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserContract>("RentlerBackupModel.FK_UserContractAnswers_UserContracts", "UserContracts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserCreditCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCreditCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCreditCard object.
        /// </summary>
        /// <param name="userCreditCardId">Initial value of the UserCreditCardId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="cardName">Initial value of the CardName property.</param>
        /// <param name="expirationMonth">Initial value of the ExpirationMonth property.</param>
        /// <param name="expirationYear">Initial value of the ExpirationYear property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static UserCreditCard CreateUserCreditCard(global::System.Int32 userCreditCardId, global::System.Guid userId, global::System.String cardNumber, global::System.String cardName, global::System.Int32 expirationMonth, global::System.Int32 expirationYear, global::System.String firstName, global::System.String lastName, global::System.String addressLine1, global::System.String city, global::System.String state, global::System.String zip, global::System.Boolean isDeleted, global::System.DateTime createDate, global::System.String createdBy)
        {
            UserCreditCard userCreditCard = new UserCreditCard();
            userCreditCard.UserCreditCardId = userCreditCardId;
            userCreditCard.UserId = userId;
            userCreditCard.CardNumber = cardNumber;
            userCreditCard.CardName = cardName;
            userCreditCard.ExpirationMonth = expirationMonth;
            userCreditCard.ExpirationYear = expirationYear;
            userCreditCard.FirstName = firstName;
            userCreditCard.LastName = lastName;
            userCreditCard.AddressLine1 = addressLine1;
            userCreditCard.City = city;
            userCreditCard.State = state;
            userCreditCard.Zip = zip;
            userCreditCard.IsDeleted = isDeleted;
            userCreditCard.CreateDate = createDate;
            userCreditCard.CreatedBy = createdBy;
            return userCreditCard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserCreditCardId
        {
            get
            {
                return _UserCreditCardId;
            }
            set
            {
                if (_UserCreditCardId != value)
                {
                    OnUserCreditCardIdChanging(value);
                    ReportPropertyChanging("UserCreditCardId");
                    _UserCreditCardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCreditCardId");
                    OnUserCreditCardIdChanged();
                }
            }
        }
        private global::System.Int32 _UserCreditCardId;
        partial void OnUserCreditCardIdChanging(global::System.Int32 value);
        partial void OnUserCreditCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private Nullable<global::System.Int64> _Alias;
        partial void OnAliasChanging(Nullable<global::System.Int64> value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardName
        {
            get
            {
                return _CardName;
            }
            set
            {
                OnCardNameChanging(value);
                ReportPropertyChanging("CardName");
                _CardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardName");
                OnCardNameChanged();
            }
        }
        private global::System.String _CardName;
        partial void OnCardNameChanging(global::System.String value);
        partial void OnCardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpirationMonth
        {
            get
            {
                return _ExpirationMonth;
            }
            set
            {
                OnExpirationMonthChanging(value);
                ReportPropertyChanging("ExpirationMonth");
                _ExpirationMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationMonth");
                OnExpirationMonthChanged();
            }
        }
        private global::System.Int32 _ExpirationMonth;
        partial void OnExpirationMonthChanging(global::System.Int32 value);
        partial void OnExpirationMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpirationYear
        {
            get
            {
                return _ExpirationYear;
            }
            set
            {
                OnExpirationYearChanging(value);
                ReportPropertyChanging("ExpirationYear");
                _ExpirationYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationYear");
                OnExpirationYearChanged();
            }
        }
        private global::System.Int32 _ExpirationYear;
        partial void OnExpirationYearChanging(global::System.Int32 value);
        partial void OnExpirationYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Orders_UserCreditCards", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("RentlerBackupModel.FK_Orders_UserCreditCards", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("RentlerBackupModel.FK_Orders_UserCreditCards", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_Subscriptions_UserCreditCards", "Subscriptions")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("RentlerBackupModel.FK_Subscriptions_UserCreditCards", "Subscriptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("RentlerBackupModel.FK_Subscriptions_UserCreditCards", "Subscriptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserCreditCards_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCards_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCards_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCards_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserCreditCards_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserCreditCheck")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCreditCheck : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCreditCheck object.
        /// </summary>
        /// <param name="userCreditCheckId">Initial value of the UserCreditCheckId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="landlordUserId">Initial value of the LandlordUserId property.</param>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="postDateUtc">Initial value of the PostDateUtc property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static UserCreditCheck CreateUserCreditCheck(global::System.Int32 userCreditCheckId, global::System.Guid userId, global::System.Guid landlordUserId, global::System.String provider, global::System.DateTime postDateUtc, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            UserCreditCheck userCreditCheck = new UserCreditCheck();
            userCreditCheck.UserCreditCheckId = userCreditCheckId;
            userCreditCheck.UserId = userId;
            userCreditCheck.LandlordUserId = landlordUserId;
            userCreditCheck.Provider = provider;
            userCreditCheck.PostDateUtc = postDateUtc;
            userCreditCheck.CreateDate = createDate;
            userCreditCheck.CreatedBy = createdBy;
            userCreditCheck.IsDeleted = isDeleted;
            return userCreditCheck;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserCreditCheckId
        {
            get
            {
                return _UserCreditCheckId;
            }
            set
            {
                if (_UserCreditCheckId != value)
                {
                    OnUserCreditCheckIdChanging(value);
                    ReportPropertyChanging("UserCreditCheckId");
                    _UserCreditCheckId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCreditCheckId");
                    OnUserCreditCheckIdChanged();
                }
            }
        }
        private global::System.Int32 _UserCreditCheckId;
        partial void OnUserCreditCheckIdChanging(global::System.Int32 value);
        partial void OnUserCreditCheckIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LandlordUserId
        {
            get
            {
                return _LandlordUserId;
            }
            set
            {
                OnLandlordUserIdChanging(value);
                ReportPropertyChanging("LandlordUserId");
                _LandlordUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandlordUserId");
                OnLandlordUserIdChanged();
            }
        }
        private global::System.Guid _LandlordUserId;
        partial void OnLandlordUserIdChanging(global::System.Guid value);
        partial void OnLandlordUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                OnProviderChanging(value);
                ReportPropertyChanging("Provider");
                _Provider = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provider");
                OnProviderChanged();
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDateUtc
        {
            get
            {
                return _PostDateUtc;
            }
            set
            {
                OnPostDateUtcChanging(value);
                ReportPropertyChanging("PostDateUtc");
                _PostDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDateUtc");
                OnPostDateUtcChanged();
            }
        }
        private global::System.DateTime _PostDateUtc;
        partial void OnPostDateUtcChanging(global::System.DateTime value);
        partial void OnPostDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserCreditCheck_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserCreditCheck_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserCreditCheck_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="UserInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInterest object.
        /// </summary>
        /// <param name="userInterestId">Initial value of the UserInterestId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="landlordUserId">Initial value of the LandlordUserId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="showApplicationInfo">Initial value of the ShowApplicationInfo property.</param>
        /// <param name="allowBackgroundCheck">Initial value of the AllowBackgroundCheck property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static UserInterest CreateUserInterest(global::System.Int32 userInterestId, global::System.Guid userId, global::System.Guid landlordUserId, global::System.Int32 listingId, global::System.Boolean showApplicationInfo, global::System.Boolean allowBackgroundCheck, global::System.DateTime createDate, global::System.String createdBy, global::System.Boolean isDeleted)
        {
            UserInterest userInterest = new UserInterest();
            userInterest.UserInterestId = userInterestId;
            userInterest.UserId = userId;
            userInterest.LandlordUserId = landlordUserId;
            userInterest.ListingId = listingId;
            userInterest.ShowApplicationInfo = showApplicationInfo;
            userInterest.AllowBackgroundCheck = allowBackgroundCheck;
            userInterest.CreateDate = createDate;
            userInterest.CreatedBy = createdBy;
            userInterest.IsDeleted = isDeleted;
            return userInterest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserInterestId
        {
            get
            {
                return _UserInterestId;
            }
            set
            {
                if (_UserInterestId != value)
                {
                    OnUserInterestIdChanging(value);
                    ReportPropertyChanging("UserInterestId");
                    _UserInterestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserInterestId");
                    OnUserInterestIdChanged();
                }
            }
        }
        private global::System.Int32 _UserInterestId;
        partial void OnUserInterestIdChanging(global::System.Int32 value);
        partial void OnUserInterestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LandlordUserId
        {
            get
            {
                return _LandlordUserId;
            }
            set
            {
                OnLandlordUserIdChanging(value);
                ReportPropertyChanging("LandlordUserId");
                _LandlordUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LandlordUserId");
                OnLandlordUserIdChanged();
            }
        }
        private global::System.Guid _LandlordUserId;
        partial void OnLandlordUserIdChanging(global::System.Guid value);
        partial void OnLandlordUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int32 _ListingId;
        partial void OnListingIdChanging(global::System.Int32 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowApplicationInfo
        {
            get
            {
                return _ShowApplicationInfo;
            }
            set
            {
                OnShowApplicationInfoChanging(value);
                ReportPropertyChanging("ShowApplicationInfo");
                _ShowApplicationInfo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowApplicationInfo");
                OnShowApplicationInfoChanged();
            }
        }
        private global::System.Boolean _ShowApplicationInfo;
        partial void OnShowApplicationInfoChanging(global::System.Boolean value);
        partial void OnShowApplicationInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowBackgroundCheck
        {
            get
            {
                return _AllowBackgroundCheck;
            }
            set
            {
                OnAllowBackgroundCheckChanging(value);
                ReportPropertyChanging("AllowBackgroundCheck");
                _AllowBackgroundCheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowBackgroundCheck");
                OnAllowBackgroundCheckChanged();
            }
        }
        private global::System.Boolean _AllowBackgroundCheck;
        partial void OnAllowBackgroundCheckChanging(global::System.Boolean value);
        partial void OnAllowBackgroundCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponseMessage
        {
            get
            {
                return _ResponseMessage;
            }
            set
            {
                OnResponseMessageChanging(value);
                ReportPropertyChanging("ResponseMessage");
                _ResponseMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponseMessage");
                OnResponseMessageChanged();
            }
        }
        private global::System.String _ResponseMessage;
        partial void OnResponseMessageChanging(global::System.String value);
        partial void OnResponseMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserInterests_Listings", "Listings")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_UserInterests_Listings", "Listings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_UserInterests_Listings", "Listings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("RentlerBackupModel.FK_UserInterests_Listings", "Listings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("RentlerBackupModel.FK_UserInterests_Listings", "Listings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserInterests_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentlerBackupModel", "FK_UserInterests_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RentlerBackupModel.FK_UserInterests_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentlerBackupModel", Name="ZipInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZipInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZipInfo object.
        /// </summary>
        /// <param name="zipInfoId">Initial value of the ZipInfoId property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="stateCode">Initial value of the StateCode property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="population">Initial value of the Population property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ZipInfo CreateZipInfo(global::System.Int32 zipInfoId, global::System.Int32 zipCode, global::System.String stateCode, global::System.String city, global::System.Double latitude, global::System.Double longitude, global::System.Int32 population, global::System.Boolean isDeleted)
        {
            ZipInfo zipInfo = new ZipInfo();
            zipInfo.ZipInfoId = zipInfoId;
            zipInfo.ZipCode = zipCode;
            zipInfo.StateCode = stateCode;
            zipInfo.City = city;
            zipInfo.Latitude = latitude;
            zipInfo.Longitude = longitude;
            zipInfo.Population = population;
            zipInfo.IsDeleted = isDeleted;
            return zipInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipInfoId
        {
            get
            {
                return _ZipInfoId;
            }
            set
            {
                if (_ZipInfoId != value)
                {
                    OnZipInfoIdChanging(value);
                    ReportPropertyChanging("ZipInfoId");
                    _ZipInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZipInfoId");
                    OnZipInfoIdChanged();
                }
            }
        }
        private global::System.Int32 _ZipInfoId;
        partial void OnZipInfoIdChanging(global::System.Int32 value);
        partial void OnZipInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateCode
        {
            get
            {
                return _StateCode;
            }
            set
            {
                OnStateCodeChanging(value);
                ReportPropertyChanging("StateCode");
                _StateCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateCode");
                OnStateCodeChanged();
            }
        }
        private global::System.String _StateCode;
        partial void OnStateCodeChanging(global::System.String value);
        partial void OnStateCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Population
        {
            get
            {
                return _Population;
            }
            set
            {
                OnPopulationChanging(value);
                ReportPropertyChanging("Population");
                _Population = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Population");
                OnPopulationChanged();
            }
        }
        private global::System.Int32 _Population;
        partial void OnPopulationChanging(global::System.Int32 value);
        partial void OnPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
    }

    #endregion
    
}
