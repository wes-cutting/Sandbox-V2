#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KslDupeKilla.Terminal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Rentler")]
	public partial class RentlerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBuilding(Building instance);
    partial void UpdateBuilding(Building instance);
    partial void DeleteBuilding(Building instance);
    partial void InsertAffiliateUser(AffiliateUser instance);
    partial void UpdateAffiliateUser(AffiliateUser instance);
    partial void DeleteAffiliateUser(AffiliateUser instance);
    partial void InsertAuthToken(AuthToken instance);
    partial void UpdateAuthToken(AuthToken instance);
    partial void DeleteAuthToken(AuthToken instance);
    partial void InsertLandlordInfo(LandlordInfo instance);
    partial void UpdateLandlordInfo(LandlordInfo instance);
    partial void DeleteLandlordInfo(LandlordInfo instance);
    partial void InsertRoleUser(RoleUser instance);
    partial void UpdateRoleUser(RoleUser instance);
    partial void DeleteRoleUser(RoleUser instance);
    partial void InsertUserContract(UserContract instance);
    partial void UpdateUserContract(UserContract instance);
    partial void DeleteUserContract(UserContract instance);
    partial void InsertApplicationInfo(ApplicationInfo instance);
    partial void UpdateApplicationInfo(ApplicationInfo instance);
    partial void DeleteApplicationInfo(ApplicationInfo instance);
    partial void InsertUserInterest(UserInterest instance);
    partial void UpdateUserInterest(UserInterest instance);
    partial void DeleteUserInterest(UserInterest instance);
    partial void InsertAlert(Alert instance);
    partial void UpdateAlert(Alert instance);
    partial void DeleteAlert(Alert instance);
    partial void InsertSavedListing(SavedListing instance);
    partial void UpdateSavedListing(SavedListing instance);
    partial void DeleteSavedListing(SavedListing instance);
    #endregion
		
		public RentlerDataContext() : 
				base(global::KslDupeKilla.Terminal.Properties.Settings.Default.RentlerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RentlerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RentlerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RentlerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RentlerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Building> Buildings
		{
			get
			{
				return this.GetTable<Building>();
			}
		}
		
		public System.Data.Linq.Table<AffiliateUser> AffiliateUsers
		{
			get
			{
				return this.GetTable<AffiliateUser>();
			}
		}
		
		public System.Data.Linq.Table<AuthToken> AuthTokens
		{
			get
			{
				return this.GetTable<AuthToken>();
			}
		}
		
		public System.Data.Linq.Table<LandlordInfo> LandlordInfos
		{
			get
			{
				return this.GetTable<LandlordInfo>();
			}
		}
		
		public System.Data.Linq.Table<RoleUser> RoleUsers
		{
			get
			{
				return this.GetTable<RoleUser>();
			}
		}
		
		public System.Data.Linq.Table<UserContract> UserContracts
		{
			get
			{
				return this.GetTable<UserContract>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationInfo> ApplicationInfos
		{
			get
			{
				return this.GetTable<ApplicationInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserInterest> UserInterests
		{
			get
			{
				return this.GetTable<UserInterest>();
			}
		}
		
		public System.Data.Linq.Table<Alert> Alerts
		{
			get
			{
				return this.GetTable<Alert>();
			}
		}
		
		public System.Data.Linq.Table<SavedListing> SavedListings
		{
			get
			{
				return this.GetTable<SavedListing>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _Username;
		
		private string _PasswordHash;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private bool _IsLandlord;
		
		private bool _IsDeleted;
		
		private EntitySet<Building> _Buildings;
		
		private EntityRef<AffiliateUser> _AffiliateUser;
		
		private EntitySet<AuthToken> _AuthTokens;
		
		private EntitySet<LandlordInfo> _LandlordInfos;
		
		private EntitySet<RoleUser> _RoleUsers;
		
		private EntitySet<UserContract> _UserContracts;
		
		private EntityRef<ApplicationInfo> _ApplicationInfo;
		
		private EntitySet<UserInterest> _UserInterests;
		
		private EntitySet<UserInterest> _UserInterests1;
		
		private EntitySet<Alert> _Alerts;
		
		private EntitySet<SavedListing> _SavedListings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsLandlordChanging(bool value);
    partial void OnIsLandlordChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public User()
		{
			this._Buildings = new EntitySet<Building>(new Action<Building>(this.attach_Buildings), new Action<Building>(this.detach_Buildings));
			this._AffiliateUser = default(EntityRef<AffiliateUser>);
			this._AuthTokens = new EntitySet<AuthToken>(new Action<AuthToken>(this.attach_AuthTokens), new Action<AuthToken>(this.detach_AuthTokens));
			this._LandlordInfos = new EntitySet<LandlordInfo>(new Action<LandlordInfo>(this.attach_LandlordInfos), new Action<LandlordInfo>(this.detach_LandlordInfos));
			this._RoleUsers = new EntitySet<RoleUser>(new Action<RoleUser>(this.attach_RoleUsers), new Action<RoleUser>(this.detach_RoleUsers));
			this._UserContracts = new EntitySet<UserContract>(new Action<UserContract>(this.attach_UserContracts), new Action<UserContract>(this.detach_UserContracts));
			this._ApplicationInfo = default(EntityRef<ApplicationInfo>);
			this._UserInterests = new EntitySet<UserInterest>(new Action<UserInterest>(this.attach_UserInterests), new Action<UserInterest>(this.detach_UserInterests));
			this._UserInterests1 = new EntitySet<UserInterest>(new Action<UserInterest>(this.attach_UserInterests1), new Action<UserInterest>(this.detach_UserInterests1));
			this._Alerts = new EntitySet<Alert>(new Action<Alert>(this.attach_Alerts), new Action<Alert>(this.detach_Alerts));
			this._SavedListings = new EntitySet<SavedListing>(new Action<SavedListing>(this.attach_SavedListings), new Action<SavedListing>(this.detach_SavedListings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(250)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLandlord", DbType="Bit NOT NULL")]
		public bool IsLandlord
		{
			get
			{
				return this._IsLandlord;
			}
			set
			{
				if ((this._IsLandlord != value))
				{
					this.OnIsLandlordChanging(value);
					this.SendPropertyChanging();
					this._IsLandlord = value;
					this.SendPropertyChanged("IsLandlord");
					this.OnIsLandlordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Building", Storage="_Buildings", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Building> Buildings
		{
			get
			{
				return this._Buildings;
			}
			set
			{
				this._Buildings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AffiliateUser", Storage="_AffiliateUser", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public AffiliateUser AffiliateUser
		{
			get
			{
				return this._AffiliateUser.Entity;
			}
			set
			{
				AffiliateUser previousValue = this._AffiliateUser.Entity;
				if (((previousValue != value) 
							|| (this._AffiliateUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliateUser.Entity = null;
						previousValue.User = null;
					}
					this._AffiliateUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("AffiliateUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuthToken", Storage="_AuthTokens", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<AuthToken> AuthTokens
		{
			get
			{
				return this._AuthTokens;
			}
			set
			{
				this._AuthTokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LandlordInfo", Storage="_LandlordInfos", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<LandlordInfo> LandlordInfos
		{
			get
			{
				return this._LandlordInfos;
			}
			set
			{
				this._LandlordInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RoleUser", Storage="_RoleUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<RoleUser> RoleUsers
		{
			get
			{
				return this._RoleUsers;
			}
			set
			{
				this._RoleUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserContract", Storage="_UserContracts", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserContract> UserContracts
		{
			get
			{
				return this._UserContracts;
			}
			set
			{
				this._UserContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ApplicationInfo", Storage="_ApplicationInfo", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public ApplicationInfo ApplicationInfo
		{
			get
			{
				return this._ApplicationInfo.Entity;
			}
			set
			{
				ApplicationInfo previousValue = this._ApplicationInfo.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationInfo.Entity = null;
						previousValue.User = null;
					}
					this._ApplicationInfo.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("ApplicationInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInterest", Storage="_UserInterests", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserInterest> UserInterests
		{
			get
			{
				return this._UserInterests;
			}
			set
			{
				this._UserInterests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInterest1", Storage="_UserInterests1", ThisKey="UserId", OtherKey="LandlordUserId")]
		public EntitySet<UserInterest> UserInterests1
		{
			get
			{
				return this._UserInterests1;
			}
			set
			{
				this._UserInterests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Alert", Storage="_Alerts", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Alert> Alerts
		{
			get
			{
				return this._Alerts;
			}
			set
			{
				this._Alerts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SavedListing", Storage="_SavedListings", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<SavedListing> SavedListings
		{
			get
			{
				return this._SavedListings;
			}
			set
			{
				this._SavedListings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buildings(Building entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Buildings(Building entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AuthTokens(AuthToken entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AuthTokens(AuthToken entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_LandlordInfos(LandlordInfo entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_LandlordInfos(LandlordInfo entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RoleUsers(RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RoleUsers(RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserContracts(UserContract entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserContracts(UserContract entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserInterests(UserInterest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserInterests(UserInterest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserInterests1(UserInterest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserInterests1(UserInterest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Alerts(Alert entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Alerts(Alert entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SavedListings(SavedListing entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SavedListings(SavedListing entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buildings")]
	public partial class Building : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingId;
		
		private System.Nullable<int> _PropertyInfoId;
		
		private System.Guid _UserId;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _Neighborhood;
		
		private System.Nullable<System.Guid> _PrimaryPhotoId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private bool _IsDeleted;
		
		private bool _ListingRemovedByAdmin;
		
		private string _PrimaryPhotoExtension;
		
		private string _sid;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingIdChanging(int value);
    partial void OnBuildingIdChanged();
    partial void OnPropertyInfoIdChanging(System.Nullable<int> value);
    partial void OnPropertyInfoIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnNeighborhoodChanging(string value);
    partial void OnNeighborhoodChanged();
    partial void OnPrimaryPhotoIdChanging(System.Nullable<System.Guid> value);
    partial void OnPrimaryPhotoIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnListingRemovedByAdminChanging(bool value);
    partial void OnListingRemovedByAdminChanged();
    partial void OnPrimaryPhotoExtensionChanging(string value);
    partial void OnPrimaryPhotoExtensionChanged();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    #endregion
		
		public Building()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingId
		{
			get
			{
				return this._BuildingId;
			}
			set
			{
				if ((this._BuildingId != value))
				{
					this.OnBuildingIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingId = value;
					this.SendPropertyChanged("BuildingId");
					this.OnBuildingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyInfoId", DbType="Int")]
		public System.Nullable<int> PropertyInfoId
		{
			get
			{
				return this._PropertyInfoId;
			}
			set
			{
				if ((this._PropertyInfoId != value))
				{
					this.OnPropertyInfoIdChanging(value);
					this.SendPropertyChanging();
					this._PropertyInfoId = value;
					this.SendPropertyChanged("PropertyInfoId");
					this.OnPropertyInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(250)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(50)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neighborhood", DbType="NVarChar(250)")]
		public string Neighborhood
		{
			get
			{
				return this._Neighborhood;
			}
			set
			{
				if ((this._Neighborhood != value))
				{
					this.OnNeighborhoodChanging(value);
					this.SendPropertyChanging();
					this._Neighborhood = value;
					this.SendPropertyChanged("Neighborhood");
					this.OnNeighborhoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPhotoId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PrimaryPhotoId
		{
			get
			{
				return this._PrimaryPhotoId;
			}
			set
			{
				if ((this._PrimaryPhotoId != value))
				{
					this.OnPrimaryPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPhotoId = value;
					this.SendPropertyChanged("PrimaryPhotoId");
					this.OnPrimaryPhotoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingRemovedByAdmin", DbType="Bit NOT NULL")]
		public bool ListingRemovedByAdmin
		{
			get
			{
				return this._ListingRemovedByAdmin;
			}
			set
			{
				if ((this._ListingRemovedByAdmin != value))
				{
					this.OnListingRemovedByAdminChanging(value);
					this.SendPropertyChanging();
					this._ListingRemovedByAdmin = value;
					this.SendPropertyChanged("ListingRemovedByAdmin");
					this.OnListingRemovedByAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPhotoExtension", DbType="NVarChar(4)")]
		public string PrimaryPhotoExtension
		{
			get
			{
				return this._PrimaryPhotoExtension;
			}
			set
			{
				if ((this._PrimaryPhotoExtension != value))
				{
					this.OnPrimaryPhotoExtensionChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPhotoExtension = value;
					this.SendPropertyChanged("PrimaryPhotoExtension");
					this.OnPrimaryPhotoExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="NVarChar(20)")]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Building", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Buildings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Buildings.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AffiliateUsers")]
	public partial class AffiliateUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _AffiliateUserKey;
		
		private System.Guid _ApiKey;
		
		private string _PasswordHash;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnAffiliateUserKeyChanging(string value);
    partial void OnAffiliateUserKeyChanged();
    partial void OnApiKeyChanging(System.Guid value);
    partial void OnApiKeyChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public AffiliateUser()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateUserKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AffiliateUserKey
		{
			get
			{
				return this._AffiliateUserKey;
			}
			set
			{
				if ((this._AffiliateUserKey != value))
				{
					this.OnAffiliateUserKeyChanging(value);
					this.SendPropertyChanging();
					this._AffiliateUserKey = value;
					this.SendPropertyChanged("AffiliateUserKey");
					this.OnAffiliateUserKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApiKey
		{
			get
			{
				return this._ApiKey;
			}
			set
			{
				if ((this._ApiKey != value))
				{
					this.OnApiKeyChanging(value);
					this.SendPropertyChanging();
					this._ApiKey = value;
					this.SendPropertyChanged("ApiKey");
					this.OnApiKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(250)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AffiliateUser", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AffiliateUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AffiliateUser = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthTokens")]
	public partial class AuthToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Token;
		
		private System.Guid _UserId;
		
		private bool _RequireLogin;
		
		private System.Guid _ApiKey;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenChanging(System.Guid value);
    partial void OnTokenChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRequireLoginChanging(bool value);
    partial void OnRequireLoginChanged();
    partial void OnApiKeyChanging(System.Guid value);
    partial void OnApiKeyChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public AuthToken()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLogin", DbType="Bit NOT NULL")]
		public bool RequireLogin
		{
			get
			{
				return this._RequireLogin;
			}
			set
			{
				if ((this._RequireLogin != value))
				{
					this.OnRequireLoginChanging(value);
					this.SendPropertyChanging();
					this._RequireLogin = value;
					this.SendPropertyChanged("RequireLogin");
					this.OnRequireLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApiKey
		{
			get
			{
				return this._ApiKey;
			}
			set
			{
				if ((this._ApiKey != value))
				{
					this.OnApiKeyChanging(value);
					this.SendPropertyChanging();
					this._ApiKey = value;
					this.SendPropertyChanged("ApiKey");
					this.OnApiKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuthToken", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AuthTokens.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AuthTokens.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LandlordInfo")]
	public partial class LandlordInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LandlordInfoId;
		
		private System.Guid _UserId;
		
		private string _PhoneNumber;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private bool _AllowPhone;
		
		private bool _AllowEmail;
		
		private string _BackgroundCreditStatus;
		
		private string _DigitalSignature;
		
		private System.Nullable<System.DateTime> _DigitalSignatureDateUtc;
		
		private string _BackgroundCreditContract;
		
		private string _BackgroundCreditUsername;
		
		private string _BackgroundCreditPassword;
		
		private System.Nullable<bool> _ReadAppendicies;
		
		private System.Nullable<System.DateTime> _ReadAppendiciesDateUtc;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLandlordInfoIdChanging(long value);
    partial void OnLandlordInfoIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnAllowPhoneChanging(bool value);
    partial void OnAllowPhoneChanged();
    partial void OnAllowEmailChanging(bool value);
    partial void OnAllowEmailChanged();
    partial void OnBackgroundCreditStatusChanging(string value);
    partial void OnBackgroundCreditStatusChanged();
    partial void OnDigitalSignatureChanging(string value);
    partial void OnDigitalSignatureChanged();
    partial void OnDigitalSignatureDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnDigitalSignatureDateUtcChanged();
    partial void OnBackgroundCreditContractChanging(string value);
    partial void OnBackgroundCreditContractChanged();
    partial void OnBackgroundCreditUsernameChanging(string value);
    partial void OnBackgroundCreditUsernameChanged();
    partial void OnBackgroundCreditPasswordChanging(string value);
    partial void OnBackgroundCreditPasswordChanged();
    partial void OnReadAppendiciesChanging(System.Nullable<bool> value);
    partial void OnReadAppendiciesChanged();
    partial void OnReadAppendiciesDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnReadAppendiciesDateUtcChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public LandlordInfo()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandlordInfoId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LandlordInfoId
		{
			get
			{
				return this._LandlordInfoId;
			}
			set
			{
				if ((this._LandlordInfoId != value))
				{
					this.OnLandlordInfoIdChanging(value);
					this.SendPropertyChanging();
					this._LandlordInfoId = value;
					this.SendPropertyChanged("LandlordInfoId");
					this.OnLandlordInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(250)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(250)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPhone", DbType="Bit NOT NULL")]
		public bool AllowPhone
		{
			get
			{
				return this._AllowPhone;
			}
			set
			{
				if ((this._AllowPhone != value))
				{
					this.OnAllowPhoneChanging(value);
					this.SendPropertyChanging();
					this._AllowPhone = value;
					this.SendPropertyChanged("AllowPhone");
					this.OnAllowPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEmail", DbType="Bit NOT NULL")]
		public bool AllowEmail
		{
			get
			{
				return this._AllowEmail;
			}
			set
			{
				if ((this._AllowEmail != value))
				{
					this.OnAllowEmailChanging(value);
					this.SendPropertyChanging();
					this._AllowEmail = value;
					this.SendPropertyChanged("AllowEmail");
					this.OnAllowEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundCreditStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BackgroundCreditStatus
		{
			get
			{
				return this._BackgroundCreditStatus;
			}
			set
			{
				if ((this._BackgroundCreditStatus != value))
				{
					this.OnBackgroundCreditStatusChanging(value);
					this.SendPropertyChanging();
					this._BackgroundCreditStatus = value;
					this.SendPropertyChanged("BackgroundCreditStatus");
					this.OnBackgroundCreditStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigitalSignature", DbType="NVarChar(50)")]
		public string DigitalSignature
		{
			get
			{
				return this._DigitalSignature;
			}
			set
			{
				if ((this._DigitalSignature != value))
				{
					this.OnDigitalSignatureChanging(value);
					this.SendPropertyChanging();
					this._DigitalSignature = value;
					this.SendPropertyChanged("DigitalSignature");
					this.OnDigitalSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigitalSignatureDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DigitalSignatureDateUtc
		{
			get
			{
				return this._DigitalSignatureDateUtc;
			}
			set
			{
				if ((this._DigitalSignatureDateUtc != value))
				{
					this.OnDigitalSignatureDateUtcChanging(value);
					this.SendPropertyChanging();
					this._DigitalSignatureDateUtc = value;
					this.SendPropertyChanged("DigitalSignatureDateUtc");
					this.OnDigitalSignatureDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundCreditContract", DbType="NVarChar(MAX)")]
		public string BackgroundCreditContract
		{
			get
			{
				return this._BackgroundCreditContract;
			}
			set
			{
				if ((this._BackgroundCreditContract != value))
				{
					this.OnBackgroundCreditContractChanging(value);
					this.SendPropertyChanging();
					this._BackgroundCreditContract = value;
					this.SendPropertyChanged("BackgroundCreditContract");
					this.OnBackgroundCreditContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundCreditUsername", DbType="NVarChar(100)")]
		public string BackgroundCreditUsername
		{
			get
			{
				return this._BackgroundCreditUsername;
			}
			set
			{
				if ((this._BackgroundCreditUsername != value))
				{
					this.OnBackgroundCreditUsernameChanging(value);
					this.SendPropertyChanging();
					this._BackgroundCreditUsername = value;
					this.SendPropertyChanged("BackgroundCreditUsername");
					this.OnBackgroundCreditUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundCreditPassword", DbType="NVarChar(100)")]
		public string BackgroundCreditPassword
		{
			get
			{
				return this._BackgroundCreditPassword;
			}
			set
			{
				if ((this._BackgroundCreditPassword != value))
				{
					this.OnBackgroundCreditPasswordChanging(value);
					this.SendPropertyChanging();
					this._BackgroundCreditPassword = value;
					this.SendPropertyChanged("BackgroundCreditPassword");
					this.OnBackgroundCreditPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadAppendicies", DbType="Bit")]
		public System.Nullable<bool> ReadAppendicies
		{
			get
			{
				return this._ReadAppendicies;
			}
			set
			{
				if ((this._ReadAppendicies != value))
				{
					this.OnReadAppendiciesChanging(value);
					this.SendPropertyChanging();
					this._ReadAppendicies = value;
					this.SendPropertyChanged("ReadAppendicies");
					this.OnReadAppendiciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadAppendiciesDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadAppendiciesDateUtc
		{
			get
			{
				return this._ReadAppendiciesDateUtc;
			}
			set
			{
				if ((this._ReadAppendiciesDateUtc != value))
				{
					this.OnReadAppendiciesDateUtcChanging(value);
					this.SendPropertyChanging();
					this._ReadAppendiciesDateUtc = value;
					this.SendPropertyChanged("ReadAppendiciesDateUtc");
					this.OnReadAppendiciesDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LandlordInfo", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.LandlordInfos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.LandlordInfos.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleUsers")]
	public partial class RoleUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleName;
		
		private System.Guid _UserId;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public RoleUser()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RoleUser", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RoleUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RoleUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserContracts")]
	public partial class UserContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserContractId;
		
		private System.Guid _UserId;
		
		private int _ContractId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserContractIdChanging(int value);
    partial void OnUserContractIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnContractIdChanging(int value);
    partial void OnContractIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public UserContract()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserContractId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserContractId
		{
			get
			{
				return this._UserContractId;
			}
			set
			{
				if ((this._UserContractId != value))
				{
					this.OnUserContractIdChanging(value);
					this.SendPropertyChanging();
					this._UserContractId = value;
					this.SendPropertyChanged("UserContractId");
					this.OnUserContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="Int NOT NULL")]
		public int ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserContract", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserContracts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserContracts.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationInfo")]
	public partial class ApplicationInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _Ssn;
		
		private string _PresentPhone;
		
		private string _PresentAddressLine1;
		
		private string _PresentAddressLine2;
		
		private string _PresentCity;
		
		private string _PresentState;
		
		private string _PresentZip;
		
		private string _PresentLandlord;
		
		private string _PresentLandlordPhone;
		
		private string _PreviousAddressLine1;
		
		private string _PreviousAddressLine2;
		
		private string _PreviousCity;
		
		private string _PreviousState;
		
		private string _PreviousZip;
		
		private string _PreviousLandlord;
		
		private string _PreviousLandlordPhone;
		
		private string _PresentEmployer;
		
		private string _PresentEmployerPhone;
		
		private string _PreviousEmployer;
		
		private string _PreviousEmployerPhone;
		
		private string _EmergencyContact;
		
		private string _EmergencyContactPhone;
		
		private string _EmergencyContactAddressLine1;
		
		private string _EmergencyContactAddressLine2;
		
		private string _EmergencyContactCity;
		
		private string _EmergencyContactState;
		
		private string _EmergencyContactZip;
		
		private System.Nullable<int> _VehicleYear;
		
		private string _VehicleMake;
		
		private string _VehicleModel;
		
		private string _VehicleColor;
		
		private string _VehicleLicenseNumber;
		
		private string _VehicleState;
		
		private System.Nullable<bool> _HasBeenConvicted;
		
		private string _ConvictionExplanation;
		
		private System.Nullable<bool> _HasEverBeenUnlawfulDetainer;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnSsnChanging(string value);
    partial void OnSsnChanged();
    partial void OnPresentPhoneChanging(string value);
    partial void OnPresentPhoneChanged();
    partial void OnPresentAddressLine1Changing(string value);
    partial void OnPresentAddressLine1Changed();
    partial void OnPresentAddressLine2Changing(string value);
    partial void OnPresentAddressLine2Changed();
    partial void OnPresentCityChanging(string value);
    partial void OnPresentCityChanged();
    partial void OnPresentStateChanging(string value);
    partial void OnPresentStateChanged();
    partial void OnPresentZipChanging(string value);
    partial void OnPresentZipChanged();
    partial void OnPresentLandlordChanging(string value);
    partial void OnPresentLandlordChanged();
    partial void OnPresentLandlordPhoneChanging(string value);
    partial void OnPresentLandlordPhoneChanged();
    partial void OnPreviousAddressLine1Changing(string value);
    partial void OnPreviousAddressLine1Changed();
    partial void OnPreviousAddressLine2Changing(string value);
    partial void OnPreviousAddressLine2Changed();
    partial void OnPreviousCityChanging(string value);
    partial void OnPreviousCityChanged();
    partial void OnPreviousStateChanging(string value);
    partial void OnPreviousStateChanged();
    partial void OnPreviousZipChanging(string value);
    partial void OnPreviousZipChanged();
    partial void OnPreviousLandlordChanging(string value);
    partial void OnPreviousLandlordChanged();
    partial void OnPreviousLandlordPhoneChanging(string value);
    partial void OnPreviousLandlordPhoneChanged();
    partial void OnPresentEmployerChanging(string value);
    partial void OnPresentEmployerChanged();
    partial void OnPresentEmployerPhoneChanging(string value);
    partial void OnPresentEmployerPhoneChanged();
    partial void OnPreviousEmployerChanging(string value);
    partial void OnPreviousEmployerChanged();
    partial void OnPreviousEmployerPhoneChanging(string value);
    partial void OnPreviousEmployerPhoneChanged();
    partial void OnEmergencyContactChanging(string value);
    partial void OnEmergencyContactChanged();
    partial void OnEmergencyContactPhoneChanging(string value);
    partial void OnEmergencyContactPhoneChanged();
    partial void OnEmergencyContactAddressLine1Changing(string value);
    partial void OnEmergencyContactAddressLine1Changed();
    partial void OnEmergencyContactAddressLine2Changing(string value);
    partial void OnEmergencyContactAddressLine2Changed();
    partial void OnEmergencyContactCityChanging(string value);
    partial void OnEmergencyContactCityChanged();
    partial void OnEmergencyContactStateChanging(string value);
    partial void OnEmergencyContactStateChanged();
    partial void OnEmergencyContactZipChanging(string value);
    partial void OnEmergencyContactZipChanged();
    partial void OnVehicleYearChanging(System.Nullable<int> value);
    partial void OnVehicleYearChanged();
    partial void OnVehicleMakeChanging(string value);
    partial void OnVehicleMakeChanged();
    partial void OnVehicleModelChanging(string value);
    partial void OnVehicleModelChanged();
    partial void OnVehicleColorChanging(string value);
    partial void OnVehicleColorChanged();
    partial void OnVehicleLicenseNumberChanging(string value);
    partial void OnVehicleLicenseNumberChanged();
    partial void OnVehicleStateChanging(string value);
    partial void OnVehicleStateChanged();
    partial void OnHasBeenConvictedChanging(System.Nullable<bool> value);
    partial void OnHasBeenConvictedChanged();
    partial void OnConvictionExplanationChanging(string value);
    partial void OnConvictionExplanationChanged();
    partial void OnHasEverBeenUnlawfulDetainerChanging(System.Nullable<bool> value);
    partial void OnHasEverBeenUnlawfulDetainerChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public ApplicationInfo()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ssn", DbType="NVarChar(50)")]
		public string Ssn
		{
			get
			{
				return this._Ssn;
			}
			set
			{
				if ((this._Ssn != value))
				{
					this.OnSsnChanging(value);
					this.SendPropertyChanging();
					this._Ssn = value;
					this.SendPropertyChanged("Ssn");
					this.OnSsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentPhone", DbType="NVarChar(50)")]
		public string PresentPhone
		{
			get
			{
				return this._PresentPhone;
			}
			set
			{
				if ((this._PresentPhone != value))
				{
					this.OnPresentPhoneChanging(value);
					this.SendPropertyChanging();
					this._PresentPhone = value;
					this.SendPropertyChanged("PresentPhone");
					this.OnPresentPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentAddressLine1", DbType="NVarChar(250)")]
		public string PresentAddressLine1
		{
			get
			{
				return this._PresentAddressLine1;
			}
			set
			{
				if ((this._PresentAddressLine1 != value))
				{
					this.OnPresentAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._PresentAddressLine1 = value;
					this.SendPropertyChanged("PresentAddressLine1");
					this.OnPresentAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentAddressLine2", DbType="NVarChar(250)")]
		public string PresentAddressLine2
		{
			get
			{
				return this._PresentAddressLine2;
			}
			set
			{
				if ((this._PresentAddressLine2 != value))
				{
					this.OnPresentAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._PresentAddressLine2 = value;
					this.SendPropertyChanged("PresentAddressLine2");
					this.OnPresentAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentCity", DbType="NVarChar(250)")]
		public string PresentCity
		{
			get
			{
				return this._PresentCity;
			}
			set
			{
				if ((this._PresentCity != value))
				{
					this.OnPresentCityChanging(value);
					this.SendPropertyChanging();
					this._PresentCity = value;
					this.SendPropertyChanged("PresentCity");
					this.OnPresentCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentState", DbType="NVarChar(50)")]
		public string PresentState
		{
			get
			{
				return this._PresentState;
			}
			set
			{
				if ((this._PresentState != value))
				{
					this.OnPresentStateChanging(value);
					this.SendPropertyChanging();
					this._PresentState = value;
					this.SendPropertyChanged("PresentState");
					this.OnPresentStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentZip", DbType="NVarChar(10)")]
		public string PresentZip
		{
			get
			{
				return this._PresentZip;
			}
			set
			{
				if ((this._PresentZip != value))
				{
					this.OnPresentZipChanging(value);
					this.SendPropertyChanging();
					this._PresentZip = value;
					this.SendPropertyChanged("PresentZip");
					this.OnPresentZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentLandlord", DbType="NVarChar(50)")]
		public string PresentLandlord
		{
			get
			{
				return this._PresentLandlord;
			}
			set
			{
				if ((this._PresentLandlord != value))
				{
					this.OnPresentLandlordChanging(value);
					this.SendPropertyChanging();
					this._PresentLandlord = value;
					this.SendPropertyChanged("PresentLandlord");
					this.OnPresentLandlordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentLandlordPhone", DbType="NVarChar(50)")]
		public string PresentLandlordPhone
		{
			get
			{
				return this._PresentLandlordPhone;
			}
			set
			{
				if ((this._PresentLandlordPhone != value))
				{
					this.OnPresentLandlordPhoneChanging(value);
					this.SendPropertyChanging();
					this._PresentLandlordPhone = value;
					this.SendPropertyChanged("PresentLandlordPhone");
					this.OnPresentLandlordPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousAddressLine1", DbType="NVarChar(250)")]
		public string PreviousAddressLine1
		{
			get
			{
				return this._PreviousAddressLine1;
			}
			set
			{
				if ((this._PreviousAddressLine1 != value))
				{
					this.OnPreviousAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._PreviousAddressLine1 = value;
					this.SendPropertyChanged("PreviousAddressLine1");
					this.OnPreviousAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousAddressLine2", DbType="NVarChar(250)")]
		public string PreviousAddressLine2
		{
			get
			{
				return this._PreviousAddressLine2;
			}
			set
			{
				if ((this._PreviousAddressLine2 != value))
				{
					this.OnPreviousAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._PreviousAddressLine2 = value;
					this.SendPropertyChanged("PreviousAddressLine2");
					this.OnPreviousAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousCity", DbType="NVarChar(250)")]
		public string PreviousCity
		{
			get
			{
				return this._PreviousCity;
			}
			set
			{
				if ((this._PreviousCity != value))
				{
					this.OnPreviousCityChanging(value);
					this.SendPropertyChanging();
					this._PreviousCity = value;
					this.SendPropertyChanged("PreviousCity");
					this.OnPreviousCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousState", DbType="NVarChar(50)")]
		public string PreviousState
		{
			get
			{
				return this._PreviousState;
			}
			set
			{
				if ((this._PreviousState != value))
				{
					this.OnPreviousStateChanging(value);
					this.SendPropertyChanging();
					this._PreviousState = value;
					this.SendPropertyChanged("PreviousState");
					this.OnPreviousStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousZip", DbType="NVarChar(10)")]
		public string PreviousZip
		{
			get
			{
				return this._PreviousZip;
			}
			set
			{
				if ((this._PreviousZip != value))
				{
					this.OnPreviousZipChanging(value);
					this.SendPropertyChanging();
					this._PreviousZip = value;
					this.SendPropertyChanged("PreviousZip");
					this.OnPreviousZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousLandlord", DbType="NVarChar(50)")]
		public string PreviousLandlord
		{
			get
			{
				return this._PreviousLandlord;
			}
			set
			{
				if ((this._PreviousLandlord != value))
				{
					this.OnPreviousLandlordChanging(value);
					this.SendPropertyChanging();
					this._PreviousLandlord = value;
					this.SendPropertyChanged("PreviousLandlord");
					this.OnPreviousLandlordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousLandlordPhone", DbType="NVarChar(50)")]
		public string PreviousLandlordPhone
		{
			get
			{
				return this._PreviousLandlordPhone;
			}
			set
			{
				if ((this._PreviousLandlordPhone != value))
				{
					this.OnPreviousLandlordPhoneChanging(value);
					this.SendPropertyChanging();
					this._PreviousLandlordPhone = value;
					this.SendPropertyChanged("PreviousLandlordPhone");
					this.OnPreviousLandlordPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentEmployer", DbType="NVarChar(50)")]
		public string PresentEmployer
		{
			get
			{
				return this._PresentEmployer;
			}
			set
			{
				if ((this._PresentEmployer != value))
				{
					this.OnPresentEmployerChanging(value);
					this.SendPropertyChanging();
					this._PresentEmployer = value;
					this.SendPropertyChanged("PresentEmployer");
					this.OnPresentEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentEmployerPhone", DbType="NVarChar(50)")]
		public string PresentEmployerPhone
		{
			get
			{
				return this._PresentEmployerPhone;
			}
			set
			{
				if ((this._PresentEmployerPhone != value))
				{
					this.OnPresentEmployerPhoneChanging(value);
					this.SendPropertyChanging();
					this._PresentEmployerPhone = value;
					this.SendPropertyChanged("PresentEmployerPhone");
					this.OnPresentEmployerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousEmployer", DbType="NVarChar(50)")]
		public string PreviousEmployer
		{
			get
			{
				return this._PreviousEmployer;
			}
			set
			{
				if ((this._PreviousEmployer != value))
				{
					this.OnPreviousEmployerChanging(value);
					this.SendPropertyChanging();
					this._PreviousEmployer = value;
					this.SendPropertyChanged("PreviousEmployer");
					this.OnPreviousEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousEmployerPhone", DbType="NVarChar(50)")]
		public string PreviousEmployerPhone
		{
			get
			{
				return this._PreviousEmployerPhone;
			}
			set
			{
				if ((this._PreviousEmployerPhone != value))
				{
					this.OnPreviousEmployerPhoneChanging(value);
					this.SendPropertyChanging();
					this._PreviousEmployerPhone = value;
					this.SendPropertyChanged("PreviousEmployerPhone");
					this.OnPreviousEmployerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContact", DbType="NVarChar(50)")]
		public string EmergencyContact
		{
			get
			{
				return this._EmergencyContact;
			}
			set
			{
				if ((this._EmergencyContact != value))
				{
					this.OnEmergencyContactChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContact = value;
					this.SendPropertyChanged("EmergencyContact");
					this.OnEmergencyContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(50)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this.OnEmergencyContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactPhone = value;
					this.SendPropertyChanged("EmergencyContactPhone");
					this.OnEmergencyContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactAddressLine1", DbType="NVarChar(250)")]
		public string EmergencyContactAddressLine1
		{
			get
			{
				return this._EmergencyContactAddressLine1;
			}
			set
			{
				if ((this._EmergencyContactAddressLine1 != value))
				{
					this.OnEmergencyContactAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._EmergencyContactAddressLine1 = value;
					this.SendPropertyChanged("EmergencyContactAddressLine1");
					this.OnEmergencyContactAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactAddressLine2", DbType="NVarChar(250)")]
		public string EmergencyContactAddressLine2
		{
			get
			{
				return this._EmergencyContactAddressLine2;
			}
			set
			{
				if ((this._EmergencyContactAddressLine2 != value))
				{
					this.OnEmergencyContactAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._EmergencyContactAddressLine2 = value;
					this.SendPropertyChanged("EmergencyContactAddressLine2");
					this.OnEmergencyContactAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactCity", DbType="NVarChar(250)")]
		public string EmergencyContactCity
		{
			get
			{
				return this._EmergencyContactCity;
			}
			set
			{
				if ((this._EmergencyContactCity != value))
				{
					this.OnEmergencyContactCityChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactCity = value;
					this.SendPropertyChanged("EmergencyContactCity");
					this.OnEmergencyContactCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactState", DbType="NVarChar(50)")]
		public string EmergencyContactState
		{
			get
			{
				return this._EmergencyContactState;
			}
			set
			{
				if ((this._EmergencyContactState != value))
				{
					this.OnEmergencyContactStateChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactState = value;
					this.SendPropertyChanged("EmergencyContactState");
					this.OnEmergencyContactStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactZip", DbType="NVarChar(10)")]
		public string EmergencyContactZip
		{
			get
			{
				return this._EmergencyContactZip;
			}
			set
			{
				if ((this._EmergencyContactZip != value))
				{
					this.OnEmergencyContactZipChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactZip = value;
					this.SendPropertyChanged("EmergencyContactZip");
					this.OnEmergencyContactZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleYear", DbType="Int")]
		public System.Nullable<int> VehicleYear
		{
			get
			{
				return this._VehicleYear;
			}
			set
			{
				if ((this._VehicleYear != value))
				{
					this.OnVehicleYearChanging(value);
					this.SendPropertyChanging();
					this._VehicleYear = value;
					this.SendPropertyChanged("VehicleYear");
					this.OnVehicleYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleMake", DbType="NVarChar(50)")]
		public string VehicleMake
		{
			get
			{
				return this._VehicleMake;
			}
			set
			{
				if ((this._VehicleMake != value))
				{
					this.OnVehicleMakeChanging(value);
					this.SendPropertyChanging();
					this._VehicleMake = value;
					this.SendPropertyChanged("VehicleMake");
					this.OnVehicleMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleModel", DbType="NVarChar(50)")]
		public string VehicleModel
		{
			get
			{
				return this._VehicleModel;
			}
			set
			{
				if ((this._VehicleModel != value))
				{
					this.OnVehicleModelChanging(value);
					this.SendPropertyChanging();
					this._VehicleModel = value;
					this.SendPropertyChanged("VehicleModel");
					this.OnVehicleModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleColor", DbType="NVarChar(50)")]
		public string VehicleColor
		{
			get
			{
				return this._VehicleColor;
			}
			set
			{
				if ((this._VehicleColor != value))
				{
					this.OnVehicleColorChanging(value);
					this.SendPropertyChanging();
					this._VehicleColor = value;
					this.SendPropertyChanged("VehicleColor");
					this.OnVehicleColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleLicenseNumber", DbType="NVarChar(50)")]
		public string VehicleLicenseNumber
		{
			get
			{
				return this._VehicleLicenseNumber;
			}
			set
			{
				if ((this._VehicleLicenseNumber != value))
				{
					this.OnVehicleLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._VehicleLicenseNumber = value;
					this.SendPropertyChanged("VehicleLicenseNumber");
					this.OnVehicleLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleState", DbType="NVarChar(50)")]
		public string VehicleState
		{
			get
			{
				return this._VehicleState;
			}
			set
			{
				if ((this._VehicleState != value))
				{
					this.OnVehicleStateChanging(value);
					this.SendPropertyChanging();
					this._VehicleState = value;
					this.SendPropertyChanged("VehicleState");
					this.OnVehicleStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenConvicted", DbType="Bit")]
		public System.Nullable<bool> HasBeenConvicted
		{
			get
			{
				return this._HasBeenConvicted;
			}
			set
			{
				if ((this._HasBeenConvicted != value))
				{
					this.OnHasBeenConvictedChanging(value);
					this.SendPropertyChanging();
					this._HasBeenConvicted = value;
					this.SendPropertyChanged("HasBeenConvicted");
					this.OnHasBeenConvictedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvictionExplanation", DbType="NVarChar(500)")]
		public string ConvictionExplanation
		{
			get
			{
				return this._ConvictionExplanation;
			}
			set
			{
				if ((this._ConvictionExplanation != value))
				{
					this.OnConvictionExplanationChanging(value);
					this.SendPropertyChanging();
					this._ConvictionExplanation = value;
					this.SendPropertyChanged("ConvictionExplanation");
					this.OnConvictionExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEverBeenUnlawfulDetainer", DbType="Bit")]
		public System.Nullable<bool> HasEverBeenUnlawfulDetainer
		{
			get
			{
				return this._HasEverBeenUnlawfulDetainer;
			}
			set
			{
				if ((this._HasEverBeenUnlawfulDetainer != value))
				{
					this.OnHasEverBeenUnlawfulDetainerChanging(value);
					this.SendPropertyChanging();
					this._HasEverBeenUnlawfulDetainer = value;
					this.SendPropertyChanged("HasEverBeenUnlawfulDetainer");
					this.OnHasEverBeenUnlawfulDetainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ApplicationInfo", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ApplicationInfo = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ApplicationInfo = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInterests")]
	public partial class UserInterest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserInterestId;
		
		private System.Guid _UserId;
		
		private System.Guid _LandlordUserId;
		
		private int _ListingId;
		
		private bool _ShowApplicationInfo;
		
		private bool _AllowBackgroundCheck;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private bool _IsDeleted;
		
		private string _Message;
		
		private string _ResponseMessage;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserInterestIdChanging(int value);
    partial void OnUserInterestIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnLandlordUserIdChanging(System.Guid value);
    partial void OnLandlordUserIdChanged();
    partial void OnListingIdChanging(int value);
    partial void OnListingIdChanged();
    partial void OnShowApplicationInfoChanging(bool value);
    partial void OnShowApplicationInfoChanged();
    partial void OnAllowBackgroundCheckChanging(bool value);
    partial void OnAllowBackgroundCheckChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnResponseMessageChanging(string value);
    partial void OnResponseMessageChanged();
    #endregion
		
		public UserInterest()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInterestId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserInterestId
		{
			get
			{
				return this._UserInterestId;
			}
			set
			{
				if ((this._UserInterestId != value))
				{
					this.OnUserInterestIdChanging(value);
					this.SendPropertyChanging();
					this._UserInterestId = value;
					this.SendPropertyChanged("UserInterestId");
					this.OnUserInterestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandlordUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LandlordUserId
		{
			get
			{
				return this._LandlordUserId;
			}
			set
			{
				if ((this._LandlordUserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLandlordUserIdChanging(value);
					this.SendPropertyChanging();
					this._LandlordUserId = value;
					this.SendPropertyChanged("LandlordUserId");
					this.OnLandlordUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingId", DbType="Int NOT NULL")]
		public int ListingId
		{
			get
			{
				return this._ListingId;
			}
			set
			{
				if ((this._ListingId != value))
				{
					this.OnListingIdChanging(value);
					this.SendPropertyChanging();
					this._ListingId = value;
					this.SendPropertyChanged("ListingId");
					this.OnListingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowApplicationInfo", DbType="Bit NOT NULL")]
		public bool ShowApplicationInfo
		{
			get
			{
				return this._ShowApplicationInfo;
			}
			set
			{
				if ((this._ShowApplicationInfo != value))
				{
					this.OnShowApplicationInfoChanging(value);
					this.SendPropertyChanging();
					this._ShowApplicationInfo = value;
					this.SendPropertyChanged("ShowApplicationInfo");
					this.OnShowApplicationInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBackgroundCheck", DbType="Bit NOT NULL")]
		public bool AllowBackgroundCheck
		{
			get
			{
				return this._AllowBackgroundCheck;
			}
			set
			{
				if ((this._AllowBackgroundCheck != value))
				{
					this.OnAllowBackgroundCheckChanging(value);
					this.SendPropertyChanging();
					this._AllowBackgroundCheck = value;
					this.SendPropertyChanged("AllowBackgroundCheck");
					this.OnAllowBackgroundCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseMessage", DbType="NVarChar(1000)")]
		public string ResponseMessage
		{
			get
			{
				return this._ResponseMessage;
			}
			set
			{
				if ((this._ResponseMessage != value))
				{
					this.OnResponseMessageChanging(value);
					this.SendPropertyChanging();
					this._ResponseMessage = value;
					this.SendPropertyChanged("ResponseMessage");
					this.OnResponseMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInterest", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserInterests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserInterests.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInterest1", Storage="_User1", ThisKey="LandlordUserId", OtherKey="UserId", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserInterests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserInterests1.Add(this);
						this._LandlordUserId = value.UserId;
					}
					else
					{
						this._LandlordUserId = default(System.Guid);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alerts")]
	public partial class Alert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AlertId;
		
		private System.Guid _UserId;
		
		private string _Message;
		
		private string _Type;
		
		private System.Nullable<int> _BuildingId;
		
		private System.DateTime _Timestamp;
		
		private bool _IsDismissed;
		
		private string _ReceiveType;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlertIdChanging(System.Guid value);
    partial void OnAlertIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBuildingIdChanging(System.Nullable<int> value);
    partial void OnBuildingIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnIsDismissedChanging(bool value);
    partial void OnIsDismissedChanged();
    partial void OnReceiveTypeChanging(string value);
    partial void OnReceiveTypeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Alert()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlertId
		{
			get
			{
				return this._AlertId;
			}
			set
			{
				if ((this._AlertId != value))
				{
					this.OnAlertIdChanging(value);
					this.SendPropertyChanging();
					this._AlertId = value;
					this.SendPropertyChanged("AlertId");
					this.OnAlertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingId", DbType="Int")]
		public System.Nullable<int> BuildingId
		{
			get
			{
				return this._BuildingId;
			}
			set
			{
				if ((this._BuildingId != value))
				{
					this.OnBuildingIdChanging(value);
					this.SendPropertyChanging();
					this._BuildingId = value;
					this.SendPropertyChanged("BuildingId");
					this.OnBuildingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDismissed", DbType="Bit NOT NULL")]
		public bool IsDismissed
		{
			get
			{
				return this._IsDismissed;
			}
			set
			{
				if ((this._IsDismissed != value))
				{
					this.OnIsDismissedChanging(value);
					this.SendPropertyChanging();
					this._IsDismissed = value;
					this.SendPropertyChanged("IsDismissed");
					this.OnIsDismissedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveType", DbType="NVarChar(50)")]
		public string ReceiveType
		{
			get
			{
				return this._ReceiveType;
			}
			set
			{
				if ((this._ReceiveType != value))
				{
					this.OnReceiveTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiveType = value;
					this.SendPropertyChanged("ReceiveType");
					this.OnReceiveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Alert", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Alerts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Alerts.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SavedListings")]
	public partial class SavedListing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SavedListingId;
		
		private System.Guid _UserId;
		
		private int _ListingId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
		private System.DateTime _CreateDate;
		
		private string _CreatedBy;
		
		private bool _IsDeleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSavedListingIdChanging(int value);
    partial void OnSavedListingIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnListingIdChanging(int value);
    partial void OnListingIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public SavedListing()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedListingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SavedListingId
		{
			get
			{
				return this._SavedListingId;
			}
			set
			{
				if ((this._SavedListingId != value))
				{
					this.OnSavedListingIdChanging(value);
					this.SendPropertyChanging();
					this._SavedListingId = value;
					this.SendPropertyChanged("SavedListingId");
					this.OnSavedListingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingId", DbType="Int NOT NULL")]
		public int ListingId
		{
			get
			{
				return this._ListingId;
			}
			set
			{
				if ((this._ListingId != value))
				{
					this.OnListingIdChanging(value);
					this.SendPropertyChanging();
					this._ListingId = value;
					this.SendPropertyChanged("ListingId");
					this.OnListingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SavedListing", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SavedListings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SavedListings.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
