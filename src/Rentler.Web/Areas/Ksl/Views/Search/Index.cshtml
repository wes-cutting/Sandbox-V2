@using Rentler.Web.Axioms.Extensions;
@using MvcPaging;
@model Rentler.Search
           
@section title {Find a rental home with KSL}

@section css {    
    <link rel="Stylesheet" href="/css/ksl/search.css?v=@Html.BuildNumber()" />
}

<div class="kslsearch">
@using (Html.BeginForm(
	"index", "search", FormMethod.Get,
	new
	{
		target = "_top",
		action = string.Format("{0}{1}", Rentler.Web.Config.KslDomain, Rentler.Web.Config.KslSearchPath)
	}))
{
    <div id="search"> 
        <div class="ksl-header">
            <a href="@(Rentler.Configuration.App.KslUrl + "?nid=1126")" target="_top" class="create-listing">Create a listing »</a>
            <div class="places">Places for Rent</div>
            <a href="http://www.rentler.com" target="_top" class="powered-by">Powered By Rentler</a>
        </div>   
        <div class="search-form">
			@Html.Hidden("nid", "651")
			@Html.Hidden("sid", "17403777")
            <div class="input-group location">
                @Html.LabelFor(m => m.Location)
                @Html.TextBoxFor(m => m.Location, new { @class = "location", placeholder = "Spanish Fork, UT" })
            </div>
            <div class="input-group price">
                <label>Monthly Price Range</label>
                @Html.TextBoxFor(m => m.MinPrice, new { @class = "max-price", placeholder = "$ min. price" })
                <span class="to">to</span>
                @Html.TextBoxFor(m => m.MaxPrice, new { @class = "max-price", placeholder = "$ max. price" })
            </div>                
            <div class="input-group last">               
                <label for="PropertyTypeCode">Type</label>
                @Html.DropDownListFor(m => m.PropertyTypeCode, Rentler.Web.Axioms.SelectLists.PropertyTypes.All, new { @class = "type" })
            </div>                
            <div class="clr"></div>
        </div>
        <div class="search-form-advanced @(Model.IsAdvanced ? "" : "hide")" data-bind="css : { hide : !isAdvanced() }">
            <div class="selectrow">
                <div class="input-group bedsnbaths">
                    <div class="sub-group">
                        @Html.LabelFor(m => m.Bedrooms)
                        @Html.DropDownListFor(m => m.Bedrooms, Rentler.Web.Axioms.SelectLists.Bedrooms.AllBedrooms)
                    </div>
                    <div class="sub-group">
                        @Html.LabelFor(m => m.Bathrooms)
                        @Html.DropDownListFor(m => m.Bathrooms, Rentler.Web.Axioms.SelectLists.Bathrooms.AllBathrooms)
                    </div>
                    <div class="clr"></div>
                </div>
                <div class="input-group squareft">
                    <label>Square Feet</label>
                    @Html.DropDownListFor(m => m.MinSquareFootage, Rentler.Web.Axioms.SelectLists.SquareFeet.AllSquareFeetLowestToHighest)
                    <span class="to">to</span>
                    @Html.DropDownListFor(m => m.MaxSquareFootage, Rentler.Web.Axioms.SelectLists.SquareFeet.AllSquareFeetHighestToLowest)
                </div>
                <div class="input-group last">
                    <label>Year Built</label>
                    @Html.DropDownListFor(m => m.YearBuiltMin, Rentler.Web.Axioms.SelectLists.BuildYear.AllBuildYearLowestToHighest)
                    &nbsp;-&nbsp;
                    @Html.DropDownListFor(m => m.YearBuiltMax, Rentler.Web.Axioms.SelectLists.BuildYear.AllBuildYearHighestToLowest)
                </div> 
                <div class="clr"></div>
            </div>
            <div class="amenitiesrow">
                <div class="input-group basic-amenities">                    
                    <label>Amenities</label>
                    <ul>
                    @{ var propConfig = Rentler.Configuration.Amenities.Current.Property; }
                    @foreach (var key in propConfig.Keys)
					{
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" name="Amenities[]" 
                                    value="@key" @(Model.Amenities != null && Model.Amenities.Contains(@key) ? "checked=checked" : "")/>@propConfig[key]</label></li>
					}
                        <li class="clr"></li>
                    </ul>                    
                </div>
                <div class="input-group community-amenities">
                    <label>Community Amenities</label>
                    <ul>
                    @{ var commConfig = Rentler.Configuration.Amenities.Current.Community; }
                    @foreach (var key in commConfig.Keys)
					{
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" name="Amenities[]" 
                                    value="@key" @(Model.Amenities != null && Model.Amenities.Contains(@key) ? "checked=checked" : "")/>@commConfig[key]</label></li>
					}
                        <li class="clr"></li>
                    </ul>                    
                </div>
                <div class="input-group terms">
                    <label>Terms</label>
                    <ul>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" name="Terms[]" 
                                    value="petfriendly" @(Model.Terms != null && Model.Terms.Contains("petfriendly") ? "checked=checked" : "")/>Pet Friendly</label></li>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" name="Terms[]" 
                                    value="smokingallowed" @(Model.Terms != null && Model.Terms.Contains("smokingallowed") ? "checked=checked" : "")/>Smoking Allowed</label></li>                                
                        @*<li>
                            <label class="checkbox">
                                <input type="checkbox" name="Terms" 
                                    value="furnished" @(Model.Terms != null && Model.Terms.Contains("furnished") ? "checked=checked" : "")/>Furnished</label></li>*@
    
                        <li>@Html.DropDownListFor(m => m.LeaseLengthCode, Rentler.Web.Axioms.SelectLists.LeaseOptions.Searchable)</li>                        
                        <li class="clr"></li>                       
                    </ul>                    
                </div>
                <div class="clr"></div>
                <div class="photosonly">
                    <label class="checkbox">
                        @Html.CheckBoxFor(m => m.PhotosOnly)Photos Only
                    </label>
                </div>
            </div>
        </div>
        <div class="search-form-actions">
            <div class="actions">
                <a href="#" data-search="basic" data-bind="click : toggleAdvanced, text : advancedTriggerText"></a>&nbsp;&nbsp;&nbsp;
                <button class="blue" type="submit">Search &raquo;</button>
            </div>
            <div class="keywords @(Model.IsAdvanced ? "" : "hide")" data-bind="css : { hide : !isAdvanced() }">
                <label>Keywords</label>
                @Html.TextBoxFor(m => m.Keywords)
            </div>
            <div class="clr-b"></div>
        </div>       
    </div>
    <input type="hidden" name="IsAdvanced" value="" data-bind="value : isAdvanced" />
    <input type="hidden" name="ResultsPerPage" value="27" />


					if (Model.Results.TotalCount > 0)
					{
	<div class="pagingContainer">
		<div class="pager">
            <div class="resultsViewContainer">
                @*@Html.DropDownListFor(m => m.ResultsView, Rentler.Web.Axioms.SelectLists.SearchResultViews.AllViews)*@
                <select name="ResultsView" data-bind="options: viewOptions, optionsText: function(item) { return item + ' View' }, value: viewMode"></select>
            </div>
            <div class="pagerLinks">
                @Html.Pager(Model.Results.PageSize, Model.Results.PageNumber, Model.Results.TotalCount).Options(p => p.RouteValues(Html.GetRouteData()).DisplayTemplate("KslPagingDisplayTemplate").MaxNrOfPages(3))
            </div>
            <div class="orderByContainer">@Html.DropDownListFor(m => m.OrderBy, Rentler.Web.Axioms.SelectLists.OrderByOptions.All)</div>
            <div class="clr-b"></div>
		</div>
	</div>
					}
					else
					{
	<div class="pagingContainer">
		<div class="pager empty">No Results</div>
	</div>
					}
} @* End Form *@

    <div class="ksl-search-results" data-bind="visible: showGrid">
        @Html.Partial("SearchResults", Model)
        <div class="clr"></div>
    </div>    
    
    <div id="map" data-bind="visible: showMap"></div>

@if (Model.Results.TotalCount > 0)
{
	<div class="pagingContainer bottom">
		<div class="pager">
                @Html.Pager(Model.Results.PageSize, Model.Results.PageNumber, Model.Results.TotalCount).Options(p => p.RouteValues(Html.GetRouteData()).DisplayTemplate("KslPagingDisplayTemplate").MaxNrOfPages(3))
        </div>
    </div>
}
</div>

@section js {
    <script type="text/javascript">
        var hostname = "@Rentler.Web.Config.Hostname";
        var kslurl = "@Rentler.Web.Config.KslDomain";
    </script>
    <script src="https://maps.google.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript" src="/scripts/placeholder.min.js"></script>	    
    <script type="text/javascript" src="/scripts/knockout-2.1.0.js"></script>
    <script type="text/javascript" src="/js/rentler.google.maps.js?v=@Html.BuildNumber()"></script>
    <script type="text/javascript" src="/js/rentler.kslsearch.js?v=@Html.BuildNumber()"></script>
    <script type="text/javascript">
        var viewModel = new rentler.kslsearch.ViewModel();
        viewModel.setupAdvanced(@Model.IsAdvanced.ToString().ToLower());
        viewModel.viewMode("@Model.ResultsView");
        ko.applyBindings(viewModel);
    </script>
}
